{"version":3,"sources":["node_modules/browser-pack/_prelude.js","primo-explore/custom/ANK/js/angularLoadMonkeyPatched.js","primo-explore/custom/ANK/js/announcement.service.js","primo-explore/custom/ANK/js/main.js","primo-explore/custom/ANK/js/prmRequestServicesAfter.component.js","primo-explore/custom/ANK/js/prmTopbarAfter.component.js","primo-explore/custom/ANK/js/viewName.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","angular","service","$document","$q","$timeout","document","promises","loader","createElement","url","deferred","defer","element","onload","onreadystatechange","readyState","resolve","onerror","reject","promise","this","loadScript","src","script","body","appendChild","loadCSS","href","style","rel","type","head","unloadCSS","docHead","targetCss","querySelector","remove","_viewName","AnnouncementService","$translate","$mdToast","$rootScope","_this","_classCallCheck","_dismissed","$on","_toastPromise","hideCallback","ctrl","Promise","then","translation","includes","hide","show","hideDelay","position","controller","close","controllerAs","templateUrl","viewName","catch","_dismiss","$inject","_announcement","_prmTopbarAfter","_prmRequestServicesAfter","run","component","PrmTopbarAfterConfig","name","config","PrmRequestServicesAfterConfig","PrmRequestServicesAfterController","$scope","$element","parentElement","parent","$watch","parentCtrl","isLoggedIn","newVal","oldVal","linkElements","querySelectorAll","console","log","find","removeClass","addClass","bindings","PrmTopbarAfterController","announcementService","display","displayCallback","nameElements","getElementsByClassName","Array","prototype","forEach","primoExploreCtrl","userSessionManagerService","isGuest","textContent"],"mappings":"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","file":"custom.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","/** \r\n* This is a monkey patched version of the AngularLoad service, that can reload scripts.\r\n*/\r\n\r\n\r\n/* angular-load.js / v0.4.1 / (c) 2014, 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\n(function () {\r\n  'use strict';\r\n  angular.module('angularLoadMonkeyPatched', [])\r\n    .service('angularLoadMonkeyPatched', ['$document', '$q', '$timeout', function ($document, $q, $timeout) {\r\n      var document = $document[0];\r\n      var promises = {};\r\n\r\n      function loader(createElement) {\r\n        return function(url) {\r\n        // This check prevents us from reloading scripts.\r\n        // if (typeof promises[url] === 'undefined') {\r\n        if (true) {\r\n            var deferred = $q.defer();\r\n            var element = createElement(url);\r\n\r\n            element.onload = element.onreadystatechange = function (e) {\r\n              if (element.readyState && element.readyState !== 'complete' && element.readyState !== 'loaded') {\r\n                return;\r\n              }\r\n\r\n              $timeout(function () {\r\n                deferred.resolve(e);\r\n              });\r\n            };\r\n            element.onerror = function (e) {\r\n              $timeout(function () {\r\n                deferred.reject(e);\r\n              });\r\n            };\r\n\r\n            promises[url] = deferred.promise;\r\n          }\r\n\r\n          return promises[url];\r\n        };\r\n      }\r\n\r\n      /**\r\n       * Dynamically loads the given script\r\n       * @param src The url of the script to load dynamically\r\n       * @returns {*} Promise that will be resolved once the script has been loaded.\r\n       */\r\n      this.loadScript = loader(function (src) {\r\n        var script = document.createElement('script');\r\n\r\n        script.src = src;\r\n\r\n        document.body.appendChild(script);\r\n        return script;\r\n      });\r\n\r\n      /**\r\n       * Dynamically loads the given CSS file\r\n       * @param href The url of the CSS to load dynamically\r\n       * @returns {*} Promise that will be resolved once the CSS file has been loaded.\r\n       */\r\n      this.loadCSS = loader(function (href) {\r\n        var style = document.createElement('link');\r\n\r\n        style.rel = 'stylesheet';\r\n        style.type = 'text/css';\r\n        style.href = href;\r\n\r\n        document.head.appendChild(style);\r\n        return style;\r\n      });\r\n\r\n      /**\r\n       * Dynamically unloads the given CSS file\r\n       * @param href The url of the CSS to unload dynamically\r\n       * @returns boolean that will be true once the CSS file has been unloaded successfully or otherwise false.\r\n       */\r\n      this.unloadCSS = function (href) {\r\n        delete promises[href];\r\n        var docHead = document.head;\r\n        if(docHead) {\r\n          var targetCss = docHead.querySelector('[href=\"' + href + '\"]');\r\n          if(targetCss) {\r\n            targetCss.remove();\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n\r\n    }]);\r\n})();","import {\r\n  viewName\r\n} from './viewName';\r\n\r\n/**\r\n * Annoncement service.\r\n * Displays a md-toast on top of the view, containing an announcement retrieved from the code tables.\r\n */\r\nexport class AnnouncementService {\r\n  constructor($translate, $mdToast, $rootScope) {\r\n    this.$translate = $translate;\r\n    this.$mdToast = $mdToast;\r\n    this.$rootScope = $rootScope;\r\n\r\n    this._dismissed = false;\r\n\r\n    // Forget the dismissal if the language is changed.\r\n    this.$rootScope.$on('$translateChangeSuccess', () => {\r\n      this._dismissed = false;\r\n    });\r\n  };\r\n\r\n  // The announcement has been dismissed.\r\n  _dismiss() {\r\n    this._dismissed = true;\r\n    this._toastPromise = null;\r\n  };\r\n\r\n  /** \r\n   *  Displays the announcement if it has not been dismissed.\r\n   *  @param {function} [hideCallback] - A function to be called \r\n   *    when the announcement is hidden.\r\n   *  @return {Promise} A Promise to be fulfilled \r\n   *    if the announcement is displayed, and to be \r\n   *    rejected when the announcement cannot be displayed.\r\n   */\r\n  display(hideCallback) {\r\n    let ctrl = this;\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      if (ctrl._dismissed === true) {\r\n        reject('The announcement has been dismissed.');\r\n        return;\r\n      };\r\n\r\n      ctrl.$translate('nui.message.announcement').then((translation) => {\r\n        // If there is no announcement to be displayed.\r\n        if ((!translation) || ['announcement', '&nbsp;', ''].includes(translation)) {\r\n          // translation is assigned 'announcement' in the absence of a matching entry.\r\n\r\n          // If there is already a toast, and no \r\n          // announcement, hide the toast.\r\n          // This happens when the language is changed.\r\n          if (ctrl._toastPromise && !ctrl._dismissed) {\r\n            ctrl.$mdToast.hide();\r\n          }\r\n          reject('No announcement found.');\r\n          return;\r\n        }\r\n\r\n        // If there is already a toast promise,\r\n        // avoid creating a new one.\r\n        ctrl._toastPromise = ctrl._toastPromise || ctrl.$mdToast.show({\r\n          // Timeout duration in msecs. false implies no timeout.\r\n          hideDelay: false,\r\n          position: 'top',\r\n          controller: () => {\r\n            return {\r\n              close: () => {\r\n                ctrl.$mdToast.hide();\r\n              }\r\n            }\r\n          },\r\n          controllerAs: '$ctrl',\r\n          templateUrl: 'custom/' + viewName + '/html/announcement.html',\r\n        });\r\n\r\n        ctrl._toastPromise.then(hideCallback).catch(hideCallback).then(() => ctrl._dismiss());\r\n\r\n        resolve();\r\n\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n};\r\n\r\nAnnouncementService.$inject = ['$translate', '$mdToast', '$rootScope'];","import { viewName } from './viewName';\r\n\r\n// import { NavigationService } from './navigation.service';\r\nimport { AnnouncementService } from './announcement.service';\r\n// import { ScriptLoaderService } from './scriptLoader.service';\r\n// import { PickUpNumbersService } from './pickUpNumbers.service';\r\n// import { LinkedPersonsService } from './linkedPersons.service';\r\n// import { GoogleAnalyticsService } from './googleAnalytics.service';\r\n// import { LocaleService } from './locale.service';\r\n//\r\n// import { OpeningHoursConfig } from './openingHours.component';\r\n// import { SearchTipsConfig } from './searchTips.component';\r\n// import { AltmetricsConfig } from './altmetrics.component';\r\n// import { LinkedPersonsConfig } from './linkedPersons.component';\r\n// import { ChatBoxConfig } from './chatBox.component';\r\n\r\n// import { PrmFinesAfterConfig } from './prmFinesAfter.component';\r\n// import { PrmLogoAfterConfig } from './prmLogoAfter.component';\r\n import { PrmTopbarAfterConfig } from './prmTopbarAfter.component';\r\n// import { PrmSearchBarAfterConfig } from './prmSearchBarAfter.component';\r\n// import { PrmFullViewAfterConfig } from './prmFullViewAfter.component';\r\n// import { PrmPersonalInfoAfterConfig } from './prmPersonalInfoAfter.component';\r\n// import { PrmRequestsAfterConfig } from './prmRequestsAfter.component';\r\n// import { PrmRequestsOverviewAfterConfig } from './prmRequestsOverviewAfter.component';\r\nimport { PrmRequestServicesAfterConfig } from './prmRequestServicesAfter.component';\r\n// import { PrmExploreMainAfterConfig } from './prmExploreMainAfter.component';\r\n// // import { PrmBriefResultAfterConfig } from './prmBriefResultAfter.component';\r\n\r\nangular.module('viewCustom', [\r\n  'angularLoadMonkeyPatched',\r\n  'ngMaterial'\r\n])\r\n.run(['$rootScope', ($rootScope) => {\r\n  $rootScope.viewName = viewName;\r\n}])\r\n// .run(['googleAnalyticsService', (googleAnalyticsService) => {\r\n//   let trackingId =  'UA-77177865-1';\r\n//   googleAnalyticsService.initialize(trackingId)\r\n//   .then(() => googleAnalyticsService.trackPageViews())\r\n//   .catch((e) => {\r\n//     console.log('Google anayltics could not be initialized.');\r\n//     console.log(e);\r\n//   });\r\n// }]);\r\n\r\nangular.module('viewCustom')\r\n//   .service('navigationService', NavigationService)\r\n   .service('announcementService', AnnouncementService)\r\n//   .service('scriptLoaderService', ScriptLoaderService)\r\n//   .service('pickUpNumbersService', PickUpNumbersService)\r\n//   .service('linkedPersonsService', LinkedPersonsService)\r\n//   .service('googleAnalyticsService', GoogleAnalyticsService)\r\n//   .service('localeService', LocaleService)\r\n//   .component(OpeningHoursConfig.name, OpeningHoursConfig.config)\r\n//   .component(SearchTipsConfig.name, SearchTipsConfig.config)\r\n//   .component(AltmetricsConfig.name, AltmetricsConfig.config)\r\n//   .component(LinkedPersonsConfig.name, LinkedPersonsConfig.config)\r\n// //  .component(ChatBoxConfig.name, ChatBoxConfig.config)\r\n//   .component(PrmFinesAfterConfig.name, PrmFinesAfterConfig.config)\r\n//   .component(PrmLogoAfterConfig.name, PrmLogoAfterConfig.config)\r\n   .component(PrmTopbarAfterConfig.name, PrmTopbarAfterConfig.config)\r\n//   .component(PrmSearchBarAfterConfig.name, PrmSearchBarAfterConfig.config)\r\n//   .component(PrmFullViewAfterConfig.name, PrmFullViewAfterConfig.config)\r\n//   .component(PrmPersonalInfoAfterConfig.name, PrmPersonalInfoAfterConfig.config)\r\n//   .component(PrmRequestsAfterConfig.name, PrmRequestsAfterConfig.config)\r\n//   .component(PrmRequestsOverviewAfterConfig.name, PrmRequestsOverviewAfterConfig.config)\r\n  .component(PrmRequestServicesAfterConfig.name, PrmRequestServicesAfterConfig.config)\r\n// .component(PrmExploreMainAfterConfig.name, PrmExploreMainAfterConfig.config)\r\n// .component(PrmBriefResultAfterConfig.name, PrmBriefResultAfterConfig.config)\r\n\r\n// Pre-ES2015 code.\r\nrequire('./angularLoadMonkeyPatched');\r\n//require('./prmBriefResultAfter.component');\r\n\r\n\r\n","class PrmRequestServicesAfterController {\r\n\r\n  constructor($scope, $element) {\r\n    this.$scope = $scope;\r\n    this.$element = $element;\r\n  }\r\n\r\n  $onInit() {\r\n\r\n    this.parentElement = this.$element.parent();\r\n\r\n    // Customize the request link to be a button, and remove the redundant second link.\r\n    // Do this when the user is logged in, and the links are properly loaded.\r\n    this.$scope.$watch(() => this.parentCtrl.isLoggedIn() && this.parentElement[0].querySelector('.links-block-item prm-service-button button'),\r\n      (newVal, oldVal) => {\r\n        if (newVal && !oldVal) {\r\n          // Find the links.\r\n          let linkElements = this.parentElement[0].querySelectorAll('.links-block-item');\r\n\r\n          // It seems that there should always be two matched links,\r\n          // if not, log it but do not throw an exception\r\n          // as the code might still do the job.\r\n          if (linkElements.length != 2) {\r\n            console.log('An unhandled case is encountered in prm-request-services.');\r\n          }\r\n\r\n          // If the first link is the ILL link, \r\n          // we remove prm-request-services element all together.\r\n          if (linkElements[0].querySelector('span[translate=\"ILL\"]')) {\r\n            this.parentElement.remove();\r\n          }\r\n          // Else, the first one should be the request link \r\n          // and the second the ILL link.\r\n          else {\r\n            // Customize the request link to be a button.\r\n            angular.element(linkElements[0]).find('button').removeClass('button-as-link');\r\n            angular.element(linkElements[0]).find('button').addClass('request-button');\r\n\r\n            // Remove the redundant ILL link.\r\n            linkElements[1].remove();\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nPrmRequestServicesAfterController.$inject = ['$scope', '$element'];\r\n\r\nexport let PrmRequestServicesAfterConfig = {\r\n  name: 'prmRequestServicesAfter',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<',\r\n    },\r\n    controller: PrmRequestServicesAfterController\r\n  }\r\n}","class PrmTopbarAfterController {\r\n  constructor(announcementService, $scope, $element, $translate) {\r\n    this.announcementService = announcementService;\r\n    this.$scope = $scope;\r\n    this.$element = $element;\r\n    this.$translate = $translate;\r\n  }\r\n\r\n  $onInit() {\r\n    // Announcement displayed.\r\n    this.announcementService.display(() => this.hideCallback())\r\n      .then(() => this.displayCallback())\r\n      .catch((e) => {\r\n        if (e) console.log(e);\r\n      });\r\n\r\n    let nameElements = this.$element.parent()[0].getElementsByClassName('user-name');\r\n\r\n    // Replace the 'Guest' label with 'Log in' to cue the user where to login.\r\n    // TODO: Test this on each new release to see if it is still needed,\r\n    // and remove otherwise.\r\n    this.$scope.$watch(nameElements.length, (newVal, oldVal) => {\r\n      Array.prototype.forEach.call(nameElements, (element) => {\r\n        if (this.primoExploreCtrl.userSessionManagerService.isGuest()) {\r\n          this.$translate('eshelf.signin.title').then((translation) => {\r\n            element.textContent = translation;\r\n          });\r\n        };\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  displayCallback() {\r\n    this.$element.parent().addClass('shifted-topbar');\r\n  };\r\n\r\n  hideCallback() {\r\n    this.$element.parent().removeClass('shifted-topbar');\r\n  };\r\n\r\n}\r\n\r\nPrmTopbarAfterController.$inject = ['announcementService', '$scope', '$element', '$translate'];\r\n\r\nexport let PrmTopbarAfterConfig = {\r\n  name: 'prmTopbarAfter',\r\n  config: {\r\n    controller: PrmTopbarAfterController,\r\n    require: {\r\n      primoExploreCtrl: '^primoExplore'\r\n    }\r\n  }\r\n};","// Define the view name here.\r\nexport let viewName = \"NUI\";"],"sourceRoot":"/source/"}