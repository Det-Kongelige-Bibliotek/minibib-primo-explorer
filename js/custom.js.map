{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/process/browser.js","primo-explore/custom/ANK/js/altmetrics.component.js","primo-explore/custom/ANK/js/angularLoadMonkeyPatched.js","primo-explore/custom/ANK/js/announcement.service.js","primo-explore/custom/ANK/js/googleAnalytics.service.js","primo-explore/custom/ANK/js/linkedPerson.js","primo-explore/custom/ANK/js/linkedPersons.component.js","primo-explore/custom/ANK/js/linkedPersons.service.js","primo-explore/custom/ANK/js/locale.service.js","primo-explore/custom/ANK/js/main.js","primo-explore/custom/ANK/js/navigation.service.js","primo-explore/custom/ANK/js/openingHours.component.js","primo-explore/custom/ANK/js/pickUpNumbers.service.js","primo-explore/custom/ANK/js/prmExploreMainAfter.component.js","primo-explore/custom/ANK/js/prmFinesAfter.component.js","primo-explore/custom/ANK/js/prmFullViewAfter.component.js","primo-explore/custom/ANK/js/prmLogoAfter.component.js","primo-explore/custom/ANK/js/prmPersonalInfoAfter.component.js","primo-explore/custom/ANK/js/prmRequestServicesAfter.component.js","primo-explore/custom/ANK/js/prmRequestsAfter.component.js","primo-explore/custom/ANK/js/prmRequestsOverviewAfter.component.js","primo-explore/custom/ANK/js/prmSearchBarAfter.component.js","primo-explore/custom/ANK/js/prmTopbarAfter.component.js","primo-explore/custom/ANK/js/scriptLoader.service.js","primo-explore/custom/ANK/js/searchTips.component.js","primo-explore/custom/ANK/js/viewName.js","primo-explore/custom/ANK/node_modules/es6-promise/dist/es6-promise.js","primo-explore/custom/ANK/node_modules/jsonld/js/jsonld.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","prototype","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","AltmetricsController","scriptLoaderService","$window","$http","_classCallCheck","loadBadge","then","onLoad","catch","console","log","ctrl","Promise","resolve","reject","doi","get","loadBadgeScript","load","_altmetric","unload","$inject","AltmetricsConfig","config","template","bindings","controller","angular","service","$document","$q","$timeout","document","promises","loader","createElement","url","deferred","defer","element","onload","onreadystatechange","readyState","onerror","promise","loadScript","src","script","body","appendChild","loadCSS","href","style","rel","type","head","unloadCSS","docHead","targetCss","querySelector","remove","_viewName","AnnouncementService","$translate","$mdToast","$rootScope","_this","_dismissed","$on","_toastPromise","hideCallback","translation","includes","hide","show","hideDelay","position","close","controllerAs","templateUrl","viewName","_dismiss","GoogleAnalyticsService","$location","trackingId","_loadGa","ga","event","location","s","m","q","l","Date","getElementsByTagName","async","parentNode","insertBefore","targetProperties","description","altLabel","sameAs","pseudonym","image","usedLanguage","placeOfBirth","placeOfDeath","gender","countryOfcitizenship","nativeLanguage","occupation","dateOfBirth","dateOfDeath","LinkedPerson","uri","data","mainResource","findInData","find","object","localeId","undefined","localeData","namesOfExistingProperties","forEach","propertyName","getPropertyInLocale","convertDates","cleanData","_this2","Object","keys","filter","propertyUri","property","propertyValue","getFullYear","filtered","Boolean","transformValues","_this3","map","value","transformValue","transformUriValue","transformLiteralValue","shouldLiteralValueStay","resource","nameInLocale","getNameInLocale","_this4","found","nameValue","LinkedPersonsController","linkedPersonsService","$mdDialog","persons","uris","loadPersons","getMultiple","LinkedPersonsConfig","_jsonld","_linkedPerson","LinkedPersonsService","localeService","webServiceUrlBase","jsonld","_jsonld2","default","all","getForRelativeUri","relativeUri","encodeURIComponent","getData","person","getLocaleData","getLocaleId","current","getAndSave","fetchAndFlatten","save","fetch","flatten","_this5","request","method","targetUrl","headers","Accept","response","relative_uri","err","flattened","LocaleService","search","lang","_navigation","_announcement","_scriptLoader","_pickUpNumbers","_linkedPersons","_googleAnalytics","_locale","_openingHours","_searchTips","_altmetrics","_linkedPersons2","_prmFinesAfter","_prmLogoAfter","_prmTopbarAfter","_prmSearchBarAfter","_prmFullViewAfter","_prmPersonalInfoAfter","_prmRequestsAfter","_prmRequestsOverviewAfter","_prmRequestServicesAfter","_prmExploreMainAfter","googleAnalyticsService","initialize","trackPageViews","NavigationService","ScriptLoaderService","PickUpNumbersService","component","OpeningHoursConfig","SearchTipsConfig","PrmFinesAfterConfig","PrmLogoAfterConfig","PrmTopbarAfterConfig","PrmSearchBarAfterConfig","PrmFullViewAfterConfig","PrmPersonalInfoAfterConfig","PrmRequestsAfterConfig","PrmRequestsOverviewAfterConfig","PrmRequestServicesAfterConfig","PrmExploreMainAfterConfig","navigateToHomePage","open","params","vid","split","absUrl","baseUrl","OpeningHoursController","_danish_i18n","library","openHourToday","openHour","closed","allDay","weekdays","weekdaysAbbr","info","allWeek","allLibraries","The Black Diamond - Reading Rooms","Black Diamond - Reading Room West","KUB South Campus","RUb staffed hours","Danish National Art Library - Nyhavn","DKB Study Room","ampm","_english_i18n","byAppointment","Diamantens l√¶sesale","Den Sorte Diamant","KUB Nord","loadOpeningHoursWidget","unloadOpeningHoursWidget","i18n","OpeningHours","timespan","colorScheme","allLibraryColor","useLibraryColors","loadAdditionalJavascript","openingHours","openingHoursModalDiv","getElementById","outerHTML","parentCtrl","_serviceBaseUrl","host","_pickUpNumbersForIds","_ongoingInsertions","_runningPromise","$scope","$watch","selector","parentElement","newVal","oldVal","insertPickUpNumbers","requestsService","requestsDisplay","targetContainer","requests","_insert","targetElements","requestObjects","_composeRequestObjects","_insertForRequest","regex","requestId","target","textContent","match","RegExp","id","expandedDisplay","_replaceIdText","field","label","_retrievePickUpNumber","pickUpNumber","_removeIdText","serviceURL","titleMatch","slice","text","replace","PrmFullViewAfterController","$element","parent","retrieveDoiIfPresent","retrieveViafIdsIfPresent","item","pnx","addata","viafUris","lad06","altmetricsSectionElement","insertSection","scrollId","serviceName","authorsSectionElement","sectionData","sectionElement","sectionTitleSelector","waitForTargetThenMoveSection","insertSectionData","unbindWatcher","moveSectionElement","identifierElement","targetElement","children","services","splice","PrmLogoAfterController","navigationService","iconLink","PrmPersonalInfoAfterController","editDetails","navigateTo","PrmRequestServicesAfterController","isLoggedIn","linkElements","querySelectorAll","removeClass","addClass","PrmRequestsAfterController","pickUpNumbersService","waitForIdsAndInsertPickUpNumbers","PrmRequestsOverviewAfterController","PrmSearchBarAfterController","append","searchBarElement","focus","PrmTopbarAfterController","announcementService","display","displayCallback","nameElements","getElementsByClassName","primoExploreCtrl","userSessionManagerService","isGuest","angularLoadMonkeyPatched","fileName","fileType","targetAttr","allSuspects","getAttribute","indexOf","removeChild","SearchTipsController","cancel","targetEvent","clickOutsideToClose","fullscreen","lib$es6$promise$utils$$isFunction","x","lib$es6$promise$asap$$vertxNext","lib$es6$promise$asap$$customSchedulerFn","lib$es6$promise$utils$$isArray","isArray","toString","lib$es6$promise$asap$$len","lib$es6$promise$asap$$asap","callback","arg","lib$es6$promise$asap$$queue","lib$es6$promise$asap$$flush","lib$es6$promise$asap$$scheduleFlush","lib$es6$promise$asap$$browserWindow","window","lib$es6$promise$asap$$browserGlobal","lib$es6$promise$asap$$BrowserMutationObserver","MutationObserver","WebKitMutationObserver","lib$es6$promise$asap$$isNode","lib$es6$promise$asap$$isWorker","Uint8ClampedArray","importScripts","MessageChannel","lib$es6$promise$asap$$useSetTimeout","channel","iterations","observer","node","lib$es6$promise$$internal$$noop","setImmediate","createTextNode","observe","characterData","port1","onmessage","port2","postMessage","vertx","runOnLoop","runOnContext","lib$es6$promise$asap$$attemptVertex","lib$es6$promise$$internal$$PENDING","lib$es6$promise$$internal$$FULFILLED","lib$es6$promise$$internal$$REJECTED","lib$es6$promise$$internal$$GET_THEN_ERROR","lib$es6$promise$$internal$$ErrorObject","lib$es6$promise$$internal$$handleMaybeThenable","maybeThenable","constructor","thenable","_state","lib$es6$promise$$internal$$fulfill","_result","lib$es6$promise$$internal$$reject","lib$es6$promise$$internal$$subscribe","lib$es6$promise$$internal$$resolve","reason","error","lib$es6$promise$$internal$$getThen","sealed","fulfillmentHandler","rejectionHandler","lib$es6$promise$$internal$$tryThen","_label","TypeError","lib$es6$promise$$internal$$publishRejection","_onerror","lib$es6$promise$$internal$$publish","_subscribers","child","onFulfillment","onRejection","subscribers","settled","detail","lib$es6$promise$$internal$$invokeCallback","lib$es6$promise$$internal$$TRY_CATCH_ERROR","succeeded","failed","hasCallback","lib$es6$promise$$internal$$tryCatch","lib$es6$promise$enumerator$$Enumerator","Constructor","input","enumerator","_instanceConstructor","_validateInput","_input","_remaining","_init","_enumerate","_validationError","lib$es6$promise$enumerator$$default","_eachEntry","entry","_settledAt","_willSettleAt","state","lib$es6$promise$promise$race$$default","entries","lib$es6$promise$promise$resolve$$default","lib$es6$promise$promise$reject$$default","lib$es6$promise$promise$$counter","lib$es6$promise$promise$$default","lib$es6$promise$promise$$Promise","resolver","_id","lib$es6$promise$promise$$needsResolver","lib$es6$promise$promise$$needsNew","lib$es6$promise$$internal$$initializePromise","race","_setScheduler","scheduleFn","_setAsap","asapFn","_asap","result","lib$es6$promise$polyfill$$default","local","global","self","Function","P","cast","lib$es6$promise$umd$$ES6Promise","polyfill","define","_nodejs","_browser","$","wrapper","JsonLdProcessor","compact","ctx","options","JsonLdError","base","compactArrays","graph","skipExpansion","documentLoader","loadDocument","link","expand","expanded","cause","activeCtx","_getInitialContext","processContext","compacted","Processor","ex","_isArray","_isObject","_clone","tmp","hasContext","kwgraph","_compactIri","key","@context","cleanup","remoteDoc","documentUrl","remoteContext","contextUrl","expandContext","_retrieveContextUrls","processor","keepFreeFloatingNodes","done","JSON","parse","bind","frame","doFrame","remoteFrame","opts","isFrame","expandedFrame","framed","_removePreserve","output","_isValue","_isList","idAlias","idx","prop","container","getContextValue","embed","explicit","requireAll","omitDefault","objectify","top","recurse","subject","visited","k","obj","isid","_isString","sid","of_type","types","normalize","algorithm","inputFormat","parsedInput","_parseNQuads","format","produceGeneralizedRdf","toRDF","dataset","fromRDF","useRdfType","useNativeTypes","rdfParser","_rdfParsers","callbackCalled","quads","graphName","triples","ti","triple","_toNQuad","sort","join","_toNQuads","createNodeMap","nodeMap","merge","docs","count","expandComplete","mergeNodes","defaultGraph","issuer","namer","IdentifierIssuer","graphs","@default","doc","relabelBlankNodes","_graphs","_createNodeMap","_nodeMap","_mergeNodeMaps","ki","_isSubjectReference","_labelBlankNodes","_isBlankNode","getId","prependBase","iri","transform","protocol","authority","path","query","substr","lastIndexOf","_removeDotSegments","rval","fragment","_prependBase","promisify","api","op","canDefineProperty","defineProperty","writable","enumerable","configurable","_setImmediate","_delay","fn","parseLinkHeader","header","rLinkHeader","rParams","exec","RequestQueue","_requests","wrapLoader","_loader","_usePromise","add","callbacks","DocumentCache","size","order","cache","expires","set","shift","ActiveContextCache","localCtx","key1","stringify","key2","level1","documentLoaders","jquery","usePromise","secure","ajax","accepts","json","dataType","crossDomain","success","textStatus","jqXHR","contentType","getResponseHeader","linkHeader","LINK_HEADER_REL","strictSSL","maxRedirects","acceptHeader","http","RangeError","redirects","followRedirect","res","statusText","STATUS_CODES","statusCode","httpStatusCode","xhr","rlink","req","XMLHttpRequest","status","test","getAllResponseHeaders","setRequestHeader","send","useDocumentLoader","callbackArg","hasProperty","hasValue","val","isList","compareValues","addValue","propertyIsArray","allowDuplicate","getValues","removeProperty","removeValue","values","v1","v2","mappings","_isUndefined","registerRDFParser","parser","unregisterRDFParser","XMLSerializer","Node","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","XSD_BOOLEAN","XSD_DOUBLE","XSD_INTEGER","XSD_STRING","RDF","RDF_FIRST","RDF_REST","RDF_NIL","RDF_TYPE","RDF_PLAIN_LITERAL","RDF_XML_LITERAL","RDF_OBJECT","RDF_LANGSTRING","MAX_CONTEXT_URLS","msg","details","captureStackTrace","stack","message","inherits","_expandLanguageMap","languageMap","vi","@value","@language","toLowerCase","_graphToRDF","ids","properties","pi","items","_isKeyword","ii","_isAbsoluteIri","predicate","_listToRDF","_objectToRDF","list","first","rest","nil","blankNode","v","datatype","_isDouble","parseFloat","toExponential","_isNumber","toFixed","language","_RDFToObject","@id","isNaN","isFinite","parseInt","_compareRDFTriples","t1","t2","attrs","attr","activeProperty","linked","preserveIndex","keyCount","isValueOnlyKey","hasDefaultLanguage","isValueString","hasNullMapping","vocab","expandedProperty","_expandIri","_compactValue","insideReverse","expandedValue","alias","itemActiveProperty","expandedItem","compactedItem","mapObject","compactedValue","compactedProperty","reverse","useArray","insideList","_expandValue","expandedActiveProperty","keyword","_validateTypeValue","nextActiveProperty","@list","reverseMap","validCount","@merged","subjectStack","subjects","_frame","_validateFrame","flags","_getFrameFlag","matches","_filterSubject","_filterSubjects","_addFrameOutput","uniqueEmbeds","_createsCircularReference","_removeEmbed","props","objects","oi","subframe","_createImplicitFrame","next","omitDefaultOn","preserve","@preserve","pop","URDNA2015","main","URGNA2012","graphMap","referencedOnce","objectIsId","usages","graphObject","usage","listNodes","nodeKeyCount","j","subjects_","si","node_","graphNames","ctxs","clone","context","cached","defined","_createTermDefinition","POSITIONS","Normalize","blankNodeInfo","hashToBlankNodes","canonicalIssuer","schedule","MAX_DEPTH","maxCallStackDepth","MAX_TOTAL_DEPTH","depth","totalDepth","timeSlice","doWork","work","running","now","getTime","start","deadline","iterable","iterator","iterate","waterfall","fns","whilst","condition","loop","nonNormalized","quad","forEachComponent","simple","hashFirstDegreeQuads","hash","hashes","idList","hashPathList","hasId","hashNDegreeQuads","b","existing","normalized","prefix","nquads","copy","modifyFirstDegreeComponent","NormalizeHash","hashNQuads","hashRelatedBlankNode","related","md","update","getRelatedPredicate","digest","hashToRelated","createHashToRelated","chosenIssuer","chosenPath","permutator","Permutator","hasNext","nextPermutation","permutation","issuerCopy","recursionList","_isSubject","_list","g","referencedNode","reverseProperty","itemName","@graph","subjectToEmbed","flag","wildcard","matchesSome","hasDefault","embeds","removeDependents","_compareShortestLeast","relativeTo","inverseCtx","getInverse","defaultLanguage","containers","typeOrLanguage","typeOrLanguageValue","commonLanguage","commonType","itemLanguage","itemType","term","prefs","containerMap","inverse","ci","typeOrLanguageValueMap","pref","_selectTerm","suffix","choice","partialMatches","iriMap","fastCurieMap","maxPartialLength","terms","curie","root","baseSegments","normalizedPath","iriSegments","last","_removeBase","mapping","colon","_termHasColon","String","@base","irisToTerms","isKeyword","fastCurieEntry","@type","_addPreferredTerm","_buildIriMap","letter","isValid","_findContextUrls","urls","_ctx","retrieve","cycles","max","finished","_cycles","comment","wso","empty","lines","lineNumber","li","line","unescaped","unique","counter","hasOwnProperty","getSubjects","getSubjectTriples","predicates","_defineXMLSerializer","serializer","nodeType","serializeToString","nodeValue","UniqueNamer","old","identifier","getName","isNamed","left","pos","swap","crypto","createHash","sha256","Algorithm","sha1","MessageDigest","toHex","_algorithm","_padding","blockSize","fromCharCode","messageLength","fullMessageLength","int32s","messageLengthSize","ByteBuffer","unescape","putBytes","bytes","read","finalBlock","overflow","putInt32","writeMessageLength","write","getInt32","charCodeAt","_w","digestLength","_createState","d","h0","h1","h2","h3","h4","buffer","_k","s0","maj","h","h5","h6","h7","hasAuthority","parsers","full","str","parsed","use","extension","_module","filename","__dirname","factory","amd","jsonldjs"],"mappings":"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","file":"custom.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","/**\r\n * The altmetrics component controller.\r\n */\r\nclass AltmetricsController {\r\n\r\n  constructor(scriptLoaderService, $window, $http) {\r\n    this.scriptLoaderService = scriptLoaderService;\r\n    this.$window = $window;\r\n    this.$http = $http;\r\n  }\r\n\r\n  $onInit() {\r\n    return this.loadBadge().then(this.onLoad).catch((e) => console.log(e));\r\n  }\r\n\r\n  /**\r\n   *  Method to load the altmetrics badge.\r\n   *  @return {Promise} A Promise to be fulfilled if the badge is loaded, \r\n   *  and to be rejected if it could not be loaded.\r\n   */\r\n  loadBadge() {\r\n    let ctrl = this;\r\n    return new Promise((resolve, reject) => {\r\n      if (ctrl.doi) {\r\n        ctrl.$http.get('https://api.altmetric.com/v1/doi/' + ctrl.doi).then(() => {\r\n          try {\r\n            ctrl.loadBadgeScript();\r\n          } catch (e) {\r\n            console.log(e);\r\n            reject('Altmetrics onLoad error.');\r\n            return;\r\n          }\r\n          resolve();\r\n        }).catch((e) =>\r\n          reject('REX: Altmetrics badge cannot be loaded.')\r\n        );\r\n      } else {\r\n        reject('REX: Altmetrics badge cannot be loaded as no DOI is present.');\r\n      }\r\n    });\r\n  };\r\n\r\n  loadBadgeScript() {\r\n    return this.scriptLoaderService.load('https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js');\r\n  };\r\n\r\n  $onDestroy() {\r\n    if (this.$window._altmetric) {\r\n      delete this.$window._altmetric;\r\n    }\r\n\r\n    // TODO: Remove any other JS or CSS files that are loaded. The URLs below may change!\r\n    this.scriptLoaderService.unload('https://d1bxh8uas1mnw7.cloudfront.net/assets/embed.js', 'js');\r\n    this.scriptLoaderService.unload('https://d1bxh8uas1mnw7.cloudfront.net/assets/altmetric_badges-8f271adb184c21cc5169a7f67f7fe5ab.js', 'js');\r\n    this.scriptLoaderService.unload('https://d1bxh8uas1mnw7.cloudfront.net/assets/embed-2c47105b6381604898bbf8ae8a680350.css', 'css');\r\n\r\n    console.log('REX: Altmetrics badge is destroyed!.');\r\n  };\r\n};\r\n\r\nAltmetricsController.$inject = ['scriptLoaderService', '$window', '$http'];\r\n\r\nexport let AltmetricsConfig = {\r\n  name: 'rexAltmetrics',\r\n  config: {\r\n    // template: '<div ng-if=\"$ctrl.doi\" data-badge-type=\"donut\" class=\"altmetric-embed\" data-badge-popover=\"left\" data-doi=\"{{$ctrl.doi}}\"></div>',\r\n    template: '<div ng-if=\"$ctrl.doi\" class=\"altmetric-embed\" data-badge-type=\"medium-donut\" data-badge-details=\"right\" data-doi=\"{{$ctrl.doi}}\"></div>',\r\n    bindings: {\r\n      doi: '<',\r\n      onLoad: '&',\r\n    },\r\n    controller: AltmetricsController,\r\n  }\r\n}","/** \r\n* This is a monkey patched version of the AngularLoad service, that can reload scripts.\r\n*/\r\n\r\n\r\n/* angular-load.js / v0.4.1 / (c) 2014, 2015, 2016 Uri Shaked / MIT Licence */\r\n\r\n(function () {\r\n  'use strict';\r\nconsole.log('xxxx');\r\n  angular.module('angularLoadMonkeyPatched', [])\r\n    .service('angularLoadMonkeyPatched', ['$document', '$q', '$timeout', function ($document, $q, $timeout) {\r\n      var document = $document[0];\r\n      var promises = {};\r\n\r\n      function loader(createElement) {\r\n        return function(url) {\r\n        // This check prevents us from reloading scripts.\r\n        // if (typeof promises[url] === 'undefined') {\r\n        if (true) {\r\n            var deferred = $q.defer();\r\n            var element = createElement(url);\r\n\r\n            element.onload = element.onreadystatechange = function (e) {\r\n              if (element.readyState && element.readyState !== 'complete' && element.readyState !== 'loaded') {\r\n                return;\r\n              }\r\n\r\n              $timeout(function () {\r\n                deferred.resolve(e);\r\n              });\r\n            };\r\n            element.onerror = function (e) {\r\n              $timeout(function () {\r\n                deferred.reject(e);\r\n              });\r\n            };\r\n\r\n            promises[url] = deferred.promise;\r\n          }\r\n\r\n          return promises[url];\r\n        };\r\n      }\r\n\r\n      /**\r\n       * Dynamically loads the given script\r\n       * @param src The url of the script to load dynamically\r\n       * @returns {*} Promise that will be resolved once the script has been loaded.\r\n       */\r\n      this.loadScript = loader(function (src) {\r\n        var script = document.createElement('script');\r\n\r\n        script.src = src;\r\n\r\n        document.body.appendChild(script);\r\n        return script;\r\n      });\r\n\r\n      /**\r\n       * Dynamically loads the given CSS file\r\n       * @param href The url of the CSS to load dynamically\r\n       * @returns {*} Promise that will be resolved once the CSS file has been loaded.\r\n       */\r\n      this.loadCSS = loader(function (href) {\r\n        var style = document.createElement('link');\r\n\r\n        style.rel = 'stylesheet';\r\n        style.type = 'text/css';\r\n        style.href = href;\r\n\r\n        document.head.appendChild(style);\r\n        return style;\r\n      });\r\n\r\n      /**\r\n       * Dynamically unloads the given CSS file\r\n       * @param href The url of the CSS to unload dynamically\r\n       * @returns boolean that will be true once the CSS file has been unloaded successfully or otherwise false.\r\n       */\r\n      this.unloadCSS = function (href) {\r\n        delete promises[href];\r\n        var docHead = document.head;\r\n        if(docHead) {\r\n          var targetCss = docHead.querySelector('[href=\"' + href + '\"]');\r\n          if(targetCss) {\r\n            targetCss.remove();\r\n            return true;\r\n          }\r\n        }\r\n        return false;\r\n      };\r\n\r\n    }]);\r\n})();","import {\r\n  viewName\r\n} from './viewName';\r\n\r\n/**\r\n * Annoncement service.\r\n * Displays a md-toast on top of the view, containing an announcement retrieved from the code tables.\r\n */\r\nexport class AnnouncementService {\r\n  constructor($translate, $mdToast, $rootScope) {\r\n    this.$translate = $translate;\r\n    this.$mdToast = $mdToast;\r\n    this.$rootScope = $rootScope;\r\n\r\n    this._dismissed = false;\r\n\r\n    // Forget the dismissal if the language is changed.\r\n    this.$rootScope.$on('$translateChangeSuccess', () => {\r\n      this._dismissed = false;\r\n    });\r\n  };\r\n\r\n  // The announcement has been dismissed.\r\n  _dismiss() {\r\n    this._dismissed = true;\r\n    this._toastPromise = null;\r\n  };\r\n\r\n  /** \r\n   *  Displays the announcement if it has not been dismissed.\r\n   *  @param {function} [hideCallback] - A function to be called \r\n   *    when the announcement is hidden.\r\n   *  @return {Promise} A Promise to be fulfilled \r\n   *    if the announcement is displayed, and to be \r\n   *    rejected when the announcement cannot be displayed.\r\n   */\r\n  display(hideCallback) {\r\n    let ctrl = this;\r\n\r\n    return new Promise((resolve, reject) => {\r\n\r\n      if (ctrl._dismissed === true) {\r\n        reject('The announcement has been dismissed.');\r\n        return;\r\n      };\r\n\r\n      ctrl.$translate('nui.message.announcement').then((translation) => {\r\n        // If there is no announcement to be displayed.\r\n        if ((!translation) || ['announcement', '&nbsp;', ''].includes(translation)) {\r\n          // translation is assigned 'announcement' in the absence of a matching entry.\r\n\r\n          // If there is already a toast, and no \r\n          // announcement, hide the toast.\r\n          // This happens when the language is changed.\r\n          if (ctrl._toastPromise && !ctrl._dismissed) {\r\n            ctrl.$mdToast.hide();\r\n          }\r\n          reject('No announcement found.');\r\n          return;\r\n        }\r\n\r\n        // If there is already a toast promise,\r\n        // avoid creating a new one.\r\n        ctrl._toastPromise = ctrl._toastPromise || ctrl.$mdToast.show({\r\n          // Timeout duration in msecs. false implies no timeout.\r\n          hideDelay: false,\r\n          position: 'top',\r\n          controller: () => {\r\n            return {\r\n              close: () => {\r\n                ctrl.$mdToast.hide();\r\n              }\r\n            }\r\n          },\r\n          controllerAs: '$ctrl',\r\n          templateUrl: 'custom/' + viewName + '/html/announcement.html',\r\n        });\r\n\r\n        ctrl._toastPromise.then(hideCallback).catch(hideCallback).then(() => ctrl._dismiss());\r\n\r\n        resolve();\r\n\r\n      });\r\n\r\n    });\r\n  };\r\n\r\n};\r\n\r\nAnnouncementService.$inject = ['$translate', '$mdToast', '$rootScope'];","/**\r\n * A service that injects the google analytics. \r\n */\r\nexport class GoogleAnalyticsService {\r\n  constructor($rootScope, $location, $window) {\r\n    this.$rootScope = $rootScope;\r\n    this.$location = $location;\r\n    this.$window = $window;\r\n  }\r\n\r\n  /**\r\n   * Initialize google analytics.\r\n   * @param {string} trackingId - The GA tracking ID for our application.\r\n   * @return {Promise} Promise that resolves if GA is initialized properly, \r\n   *  and rejects if it fails to do so.\r\n   **/\r\n  initialize(trackingId) {\r\n    let ctrl = this;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      ctrl._loadGa();\r\n      ctrl.$window.ga('create', trackingId, 'auto');\r\n      ctrl.$window.ga('set', 'anonymizeIp', true);\r\n      resolve();\r\n    });\r\n  \r\n  }\r\n\r\n  /**\r\n   * Enable tracking of the page views.\r\n   **/\r\n  trackPageViews() {\r\n    let ctrl = this;\r\n\r\n    ctrl.$rootScope.$on('$locationChangeSuccess', function(event){\r\n      ctrl.$window.ga('send', 'pageview', {location: ctrl.$location.url()});\r\n    });\r\n  }\r\n\r\n  _loadGa() {\r\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n    })(this.$window,this.$window.document,'script','https://www.google-analytics.com/analytics.js','ga');\r\n  }\r\n\r\n} \r\n\r\nGoogleAnalyticsService.$inject = ['$rootScope', '$location', '$window'];","let targetProperties = {\r\n  name: 'http://schema.org/name',\r\n  description: 'http://schema.org/description',\r\n  altLabel: 'http://www.w3.org/2004/02/skos/core#altLabel',\r\n  sameAs: 'http://schema.org/sameAs',\r\n  pseudonym: 'http://www.wikidata.org/prop/direct/P742',\r\n  image: 'http://www.wikidata.org/prop/direct/P18',\r\n  usedLanguage: 'http://www.wikidata.org/prop/direct/P1412',\r\n  placeOfBirth: 'http://www.wikidata.org/prop/direct/P19',\r\n  placeOfDeath: 'http://www.wikidata.org/prop/direct/P20',\r\n  gender: 'http://www.wikidata.org/prop/direct/P21',\r\n  countryOfcitizenship: 'http://www.wikidata.org/prop/direct/P27',\r\n  nativeLanguage: 'http://www.wikidata.org/prop/direct/P103',\r\n  occupation: 'http://www.wikidata.org/prop/direct/P106',\r\n  dateOfBirth: 'http://www.wikidata.org/prop/direct/P569',\r\n  dateOfDeath: 'http://www.wikidata.org/prop/direct/P570',\r\n}\r\n\r\n\r\n/**\r\n * Model representing a person whose data is fetched \r\n * from the Linked Persons Web service.\r\n *  \r\n * @see https://github.com/Det-Kongelige-Bibliotek/linked_persons\r\n */\r\nexport class LinkedPerson {\r\n  /**\r\n   * @param {String} uri - A URI identifying the person.\r\n   * @param {Array} data - An array of flattened JSON-LD objects.\r\n   */\r\n  constructor(uri, data) {\r\n    this.uri = uri;\r\n    this.data = data;\r\n\r\n    this.targetProperties = targetProperties;\r\n\r\n    this.mainResource = this.findInData(this.uri);\r\n  }\r\n\r\n  findInData(uri) {\r\n    return this.data.find((object) => object['@id'] == uri);\r\n  }\r\n\r\n  /**\r\n   * Transforms the person data to make it locale specific \r\n   * and easier to consume.\r\n   *\r\n   * @param {String} localeId - 'da' or 'en'. Defaults to 'en'.\r\n   * \r\n   * @return {Object} An object containing the transformed data.\r\n   *\r\n   */\r\n  getLocaleData(localeId = 'en') {\r\n\r\n    let localeData = {}\r\n    let propertyNames = this.namesOfExistingProperties();\r\n    propertyNames.forEach((propertyName) => {\r\n      localeData[propertyName] = this.getPropertyInLocale(propertyName, localeId);\r\n    });\r\n    \r\n    localeData = this.convertDates(localeData);\r\n    return this.cleanData(localeData);\r\n  }\r\n\r\n  namesOfExistingProperties() {\r\n    return Object.keys(this.targetProperties).filter((propertyName) => {\r\n      let propertyUri = this.targetProperties[propertyName];\r\n      return this.mainResource[propertyUri];\r\n    });\r\n  }\r\n\r\n  convertDates(data) {\r\n    let datePropertyNames = ['dateOfBirth', 'dateOfDeath'];\r\n    let dateProperties = datePropertyNames.filter((propertyName) => data[propertyName]);\r\n    \r\n    dateProperties.forEach((property) => {\r\n      let propertyValue = property[0];\r\n      if(propertyValue)\r\n        data[property][0] = new Date(propertyValue).getFullYear(); \r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  cleanData(data) {\r\n    Object.keys(data).forEach((property) => {\r\n      let filtered = data[property].filter(Boolean);\r\n\r\n      if (filtered.length == 0)\r\n        delete data[property];\r\n      else\r\n        data[property] = filtered;\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  getPropertyInLocale(propertyName, localeId) {\r\n    let propertyUri = this.targetProperties[propertyName];\r\n\r\n    return this.transformValues(propertyUri, localeId);\r\n  }\r\n\r\n  transformValues(propertyUri, localeId) {\r\n    return this.mainResource[propertyUri].map((value) =>\r\n      this.transformValue(value, localeId)\r\n    );\r\n  }\r\n\r\n  transformValue(value, localeId) {\r\n    if (value['@id']) {\r\n      return this.transformUriValue(value['@id'], localeId);\r\n    } else {\r\n      return this.transformLiteralValue(value, localeId);\r\n    }\r\n  }\r\n\r\n  transformLiteralValue(value, localeId) {\r\n    return this.shouldLiteralValueStay(value, localeId) ? value['@value'] : null\r\n  }\r\n\r\n  shouldLiteralValueStay(value, localeId) {\r\n    return (value['@type'] || (value['@language'] == localeId));\r\n  }\r\n\r\n  transformUriValue(uri, localeId) {\r\n    let resource = this.findInData(uri);\r\n    let nameInLocale;\r\n\r\n    if (resource) {\r\n      nameInLocale = this.getNameInLocale(resource, localeId);\r\n    }\r\n\r\n    return nameInLocale || uri;\r\n  }\r\n\r\n  getNameInLocale(resource, localeId) {\r\n    let found = resource['http://schema.org/name'].find((nameValue) =>\r\n      this.shouldLiteralValueStay(nameValue, localeId)\r\n    );\r\n\r\n    return found ? found['@value'] : false;\r\n  }\r\n\r\n}","import {\r\n  viewName\r\n} from './viewName';\r\n\r\nclass LinkedPersonsController {\r\n  constructor(linkedPersonsService, $mdDialog) {\r\n    this.linkedPersonsService = linkedPersonsService;\r\n    this.$mdDialog = $mdDialog;\r\n  };\r\n\r\n  $onInit() {\r\n    this.persons = [];\r\n\r\n    if (this.uris) {\r\n      this.loadPersons().then(this.onLoad).catch(() => {\r\n        console.log('Could not fetch data about the author.');\r\n      });\r\n    }    \r\n  }\r\n\r\n  /**\r\n   * Loads data about the persons from the  \r\n   * Linked Persons service.\r\n   *\r\n   * @return {Promise} A promise that resolves if all persons are \r\n   * loaded, and rejects if any of them fails to be loaded.\r\n   */\r\n  loadPersons() {\r\n    return this.linkedPersonsService.getMultiple(this.uris).then(persons => {\r\n      this.persons = persons;\r\n    });\r\n  }\r\n\r\n}\r\n\r\nLinkedPersonsController.$inject = ['linkedPersonsService', '$mdDialog'];\r\n\r\nexport let LinkedPersonsConfig = {\r\n  name: 'rexLinkedPersons',\r\n  config: {\r\n    bindings: {\r\n      uris: '<',\r\n      onLoad: '&',\r\n    },\r\n    controller: LinkedPersonsController,\r\n    templateUrl: 'custom/' + viewName + '/html/linkedPersons.component.html',\r\n  }\r\n}","import jsonld from 'jsonld';\r\nimport {\r\n  LinkedPerson\r\n} from './linkedPerson';\r\n\r\n/**\r\n * Service that retrieves structured data about persons\r\n * from the Linked Persons Web service and compiles it in\r\n * according to the current locale.\r\n *\r\n * @see https://github.com/Det-Kongelige-Bibliotek/linked_persons \r\n */\r\nexport class LinkedPersonsService {\r\n\r\n  constructor($http, localeService) {\r\n    this.$http = $http;\r\n    this.localeService = localeService;\r\n\r\n    // The URL base for the Web service.\r\n    // this.webServiceUrlBase = 'http://0.0.0.0:9292/persons/'\r\n    this.webServiceUrlBase = 'https://ec2-54-229-3-116.eu-west-1.compute.amazonaws.com/persons/'\r\n\r\n    this.jsonld = jsonld;\r\n    this.persons = {};\r\n  }\r\n\r\n  /**\r\n   * Gets data for the given URIs from the web service,\r\n   * using the cached data if it was retrieved before, and then\r\n   * compiles the data in accoring to the current locale.\r\n   *.\r\n   * @param {Array<String>} uris - URIs identifying the authors whose \r\n   * data is to be fetched.\r\n   * \r\n   * @return {Promise<Array>} A promise that resolves with\r\n   * an array of objects containing data for corresponding authors.\r\n   *\r\n   */\r\n  getMultiple(uris) {\r\n    return Promise.all(uris.map(uri => this.get(uri)));\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets the data for the given URI from the web service,\r\n   * using the cached data if it was retrieved before, and then\r\n   * compiles the data in accoring to the current locale.\r\n   *.\r\n   * @param {String} uri - URI identifying the author whose \r\n   * data is to be fetched.\r\n   * \r\n   * @return {Promise<Object>} A promise that resolves with\r\n   * an object containing data for corresponding authors.\r\n   *\r\n   */\r\n  get(uri) {\r\n    return this.getForRelativeUri(this.relativeUri(uri));\r\n  }\r\n\r\n  relativeUri(uri) {\r\n    return '?uri=' + encodeURIComponent(uri);\r\n  }\r\n\r\n  getForRelativeUri(uri) {\r\n    return this.getData(uri).then((person) => this.getLocaleData(person));\r\n  }\r\n\r\n  getLocaleData(person) {\r\n    let localeId = this.getLocaleId();\r\n\r\n    return Promise.resolve(person.getLocaleData(localeId));\r\n  }\r\n\r\n  getLocaleId() {\r\n    return this.localeService.current() == 'da_DK' ? 'da' : 'en';\r\n  }\r\n\r\n  getData(uri) {\r\n    let person = this.persons[uri];\r\n\r\n    if (person)\r\n      return Promise.resolve(person);\r\n    else\r\n      return this.getAndSave(uri);\r\n  }\r\n\r\n  getAndSave(uri) {\r\n    return this.fetchAndFlatten(uri).then((value) => this.save(uri, value));\r\n  }\r\n\r\n  fetchAndFlatten(uri) {\r\n    return this.fetch(uri).then((data) => this.flatten(data));\r\n  }\r\n\r\n  fetch(uri) {\r\n\r\n    let request = {\r\n      method: 'GET',\r\n      url: this.targetUrl(uri),\r\n      headers: {\r\n        'Accept': 'application/ld+json'\r\n      },\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      this.$http(request).then((response) => {\r\n        if (response.data) {\r\n          resolve(response.data);\r\n        } else {\r\n          reject('Received a blank response.');\r\n        };\r\n      }).catch(reject);\r\n    });\r\n\r\n    // return this.$http(request).then((response) => response.data);\r\n  }\r\n\r\n  targetUrl(relative_uri) {\r\n    return this.webServiceUrlBase + relative_uri;\r\n  }\r\n\r\n  flatten(data) {\r\n    return new Promise((resolve, reject) => {\r\n      jsonld.flatten(data, (err, flattened) => {\r\n        resolve(flattened);\r\n      });\r\n    });\r\n  }\r\n\r\n  save(uri, data) {\r\n    return this.persons[uri] = new LinkedPerson(uri, data);\r\n  }\r\n\r\n}\r\n\r\nLinkedPersonsService.$inject = ['$http', 'localeService'];","export class LocaleService {\r\n  constructor($location) {\r\n    this.$location = $location;\r\n  }\r\n\r\n  current() {\r\n    return this.$location.search().lang;\r\n  }\r\n}\r\n\r\nLocaleService.$inject = ['$location'];","import { viewName } from './viewName';\r\n\r\nimport { NavigationService } from './navigation.service';\r\nimport { AnnouncementService } from './announcement.service';\r\nimport { ScriptLoaderService } from './scriptLoader.service';\r\nimport { PickUpNumbersService } from './pickUpNumbers.service';\r\nimport { LinkedPersonsService } from './linkedPersons.service';\r\nimport { GoogleAnalyticsService } from './googleAnalytics.service';\r\nimport { LocaleService } from './locale.service';\r\n\r\nimport { OpeningHoursConfig } from './openingHours.component';\r\nimport { SearchTipsConfig } from './searchTips.component';\r\nimport { AltmetricsConfig } from './altmetrics.component';\r\nimport { LinkedPersonsConfig } from './linkedPersons.component';\r\n// import { ChatBoxConfig } from './chatBox.component';\r\n\r\nimport { PrmFinesAfterConfig } from './prmFinesAfter.component';\r\nimport { PrmLogoAfterConfig } from './prmLogoAfter.component';\r\nimport { PrmTopbarAfterConfig } from './prmTopbarAfter.component';\r\nimport { PrmSearchBarAfterConfig } from './prmSearchBarAfter.component';\r\nimport { PrmFullViewAfterConfig } from './prmFullViewAfter.component';\r\nimport { PrmPersonalInfoAfterConfig } from './prmPersonalInfoAfter.component';\r\nimport { PrmRequestsAfterConfig } from './prmRequestsAfter.component';\r\nimport { PrmRequestsOverviewAfterConfig } from './prmRequestsOverviewAfter.component';\r\nimport { PrmRequestServicesAfterConfig } from './prmRequestServicesAfter.component';\r\nimport { PrmExploreMainAfterConfig } from './prmExploreMainAfter.component';\r\n// import { PrmBriefResultAfterConfig } from './prmBriefResultAfter.component';\r\n\r\nangular.module('viewCustom', [\r\n  'angularLoadMonkeyPatched',\r\n  'ngMaterial'\r\n])\r\n.run(['$rootScope', ($rootScope) => {\r\n  $rootScope.viewName = viewName;\r\n}])\r\n.run(['googleAnalyticsService', (googleAnalyticsService) => {\r\n  let trackingId =  'UA-77177865-1';\r\n  googleAnalyticsService.initialize(trackingId)\r\n  .then(() => googleAnalyticsService.trackPageViews())\r\n  .catch((e) => {\r\n    console.log('Google anayltics could not be initialized.');\r\n    console.log(e);\r\n  });\r\n}]);\r\n\r\nangular.module('viewCustom')\r\n  .service('navigationService', NavigationService)\r\n  .service('announcementService', AnnouncementService)\r\n  .service('scriptLoaderService', ScriptLoaderService)\r\n  .service('pickUpNumbersService', PickUpNumbersService)\r\n  .service('linkedPersonsService', LinkedPersonsService)\r\n  .service('googleAnalyticsService', GoogleAnalyticsService)\r\n  .service('localeService', LocaleService)\r\n  .component(OpeningHoursConfig.name, OpeningHoursConfig.config)\r\n  .component(SearchTipsConfig.name, SearchTipsConfig.config)\r\n  .component(AltmetricsConfig.name, AltmetricsConfig.config)\r\n  .component(LinkedPersonsConfig.name, LinkedPersonsConfig.config)\r\n//  .component(ChatBoxConfig.name, ChatBoxConfig.config)\r\n  .component(PrmFinesAfterConfig.name, PrmFinesAfterConfig.config)\r\n  .component(PrmLogoAfterConfig.name, PrmLogoAfterConfig.config)\r\n  .component(PrmTopbarAfterConfig.name, PrmTopbarAfterConfig.config)\r\n  .component(PrmSearchBarAfterConfig.name, PrmSearchBarAfterConfig.config)\r\n  .component(PrmFullViewAfterConfig.name, PrmFullViewAfterConfig.config)\r\n  .component(PrmPersonalInfoAfterConfig.name, PrmPersonalInfoAfterConfig.config)\r\n  .component(PrmRequestsAfterConfig.name, PrmRequestsAfterConfig.config)\r\n  .component(PrmRequestsOverviewAfterConfig.name, PrmRequestsOverviewAfterConfig.config)\r\n  .component(PrmRequestServicesAfterConfig.name, PrmRequestServicesAfterConfig.config)\r\n  .component(PrmExploreMainAfterConfig.name, PrmExploreMainAfterConfig.config)\r\n// .component(PrmBriefResultAfterConfig.name, PrmBriefResultAfterConfig.config)\r\n\r\n// Pre-ES2015 code.\r\nrequire('./angularLoadMonkeyPatched');\r\n//require('./prmBriefResultAfter.component');\r\nrequire('./cookie');\r\n\r\n\r\n","import { viewName } from './viewName';\r\n\r\n/**\r\n * A service handling navigation logic. \r\n */\r\nexport class NavigationService {\r\n  \r\n  constructor($location, $window) {\r\n    this.$location = $location;\r\n    this.$window = $window;\r\n  }\r\n\r\n  /**\r\n   * Opens the given url in a new tab, \r\n   * or navigates to the home page if the url is blank.\r\n   * @param {string} url- The URL to be navigated to.\r\n   */\r\n  navigateTo(url) {\r\n    if (typeof url === 'undefined' || url === \"\")\r\n      this.navigateToHomePage();\r\n    else\r\n      this.$window.open(url, '_blank');\r\n  };\r\n\r\n  /**\r\n   * Navigates to the home page with a reload.\r\n   * @return {boolean} Booelan value indicating if the navigation was successful.\r\n   */\r\n  navigateToHomePage() {\r\n    let params = this.$location.search();\r\n    let vid = params.vid || viewName;\r\n    let lang = params.lang || \"da_DK\";\r\n    let split = this.$location.absUrl().split('/primo-explore/');\r\n\r\n    if (split.length === 1) {\r\n      console.log('Could not process the URL : ' + split[0]);\r\n      return false;\r\n    }\r\n\r\n    let baseUrl = split[0];\r\n    this.$window.location.href = baseUrl + '/primo-explore/search?vid=' + vid + '&lang=' + lang;\r\n    return true;\r\n  };\r\n\r\n}\r\n\r\nNavigationService.$inject = ['$location', '$window'];","/**\r\n * The opening hours widget component controller.\r\n */\r\nclass OpeningHoursController {\r\n\r\n  constructor(scriptLoaderService, $window, localeService) {\r\n    this.scriptLoaderService = scriptLoaderService;\r\n    this.localeService = localeService;\r\n    this.$window = $window;\r\n  }\r\n\r\n  $onInit() {\r\n\r\n    this._danish_i18n = {\r\n      library: 'Bibliotek',\r\n      openHourToday: 'Dagens √Öbningstid',\r\n      openHour: '√Öbningstid',\r\n      closed: 'Lukket',\r\n      allDay: 'D√∏gn√•bent',\r\n      weekdays: ['Mandag', 'Tirsdag', 'Onsdag', 'Torsdag', 'Fredag', 'L√∏rdag', 'S√∏ndag'],\r\n      weekdaysAbbr: ['man', 'tirs', 'ons', 'tors', 'fre', 'l√∏r', 's√∏n'],\r\n      info: 'Info',\r\n      map: 'Kort',\r\n      allWeek: 'Hele ugen',\r\n      allLibraries: 'Alle biblioteker',\r\n      'The Black Diamond - Reading Rooms': 'Diamantens l√¶sesale',\r\n      'Black Diamond - Reading Room West': 'Diamanten - L√¶sesal Vest',\r\n      'KUB South Campus': 'KUB S√∏ndre Campus',\r\n      'RUb staffed hours': 'RUb personlig betjening',\r\n      'Danish National Art Library - Nyhavn': 'Danmarks Kunstbibliotek - Nyhavn',\r\n      'DKB Study Room': 'DKB Studiesal S√∏borg',\r\n      ampm: false\r\n    };\r\n\r\n    this._english_i18n = {\r\n      library: 'Library',\r\n      openHourToday: 'Open',\r\n      openHour: 'Opening hours',\r\n      closed: 'Closed',\r\n      weekdays: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'],\r\n      weekdaysAbbr: ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'],\r\n      info: 'Info',\r\n      map: 'Map',\r\n      allWeek: 'All Week',\r\n      allLibraries: 'All Libraries',\r\n      byAppointment: 'By appointment',\r\n      'Diamantens l√¶sesale': 'The Black Diamond - Reading Rooms',\r\n      'Den Sorte Diamant': 'The Black Diamond',\r\n      'KUB Nord': 'KUB North',\r\n      ampm: false\r\n    };\r\n\r\n    this.loadOpeningHoursWidget().catch((e) => {\r\n      console.log(e);\r\n      return this.loadOpeningHoursWidget();\r\n    }).catch((e) => {\r\n      console.log(e);\r\n      return this.loadOpeningHoursWidget();\r\n    }).catch((e) => {\r\n      console.log(e);\r\n    });\r\n\r\n  };\r\n\r\n  $onDestroy() {\r\n    this.unloadOpeningHoursWidget();\r\n    console.log('Opening hours widget destroyed!.');\r\n  };\r\n\r\n  /**\r\n   * Method to load the opening hours widget.\r\n   */\r\n  loadOpeningHoursWidget() {\r\n    return new Promise((resolve, reject) => {\r\n\r\n      this.scriptLoaderService.load('https://static.kb.dk/libcal/openingHours_min.js').then(() => {\r\n\r\n        let i18n = (this.localeService.current() === \"da_DK\") ? this._danish_i18n : this._english_i18n;\r\n\r\n        this._openingHours = OpeningHours;\r\n\r\n        if (!this._openingHours) throw 'Opening hours widget could not be loaded!';\r\n\r\n        this._openingHours.config = {\r\n          // Please notice that the view library: 'all', timespan: 'week' is to wide to put in one column!\r\n          library: 'all', // 'all' or the library name as it is defined in LibCal (eg. 'HUM', 'KUB Nord' etc.) This can also be a comma separated list of libraries (eg. 'Den Sorte Diamant, HUM, KUB Nord'), in which case it will only show the listed libraries (and the first one in the list initially, if timespan is 'week')\r\n          // libraryWhitelist: ['Den Sorte Diamant', 'Diamantens l√¶sesale', 'TEOL', 'SAMF'], // Optional whitelist of all libraries that are to be shown (this option will be overriden by library, if library includes more than one library)\r\n          timespan: 'day', // 'week' or 'day'\r\n          colorScheme: 'standard03', // 'standard01', 'standard02', 'standard03' - used for headers if no other color is set\r\n          allLibraryColor: '#6a6864', // overrides the standardColor if defined\r\n          useLibraryColors: true, // use library specific colors (defined in libGuides) - overrides colorScheme if defined\r\n          i18n: i18n\r\n        };\r\n\r\n        this.scriptLoaderService.load('https://api3-eu.libcal.com/api_hours_grid.php?iid=1069&format=json&weeks=1&callback=OpeningHours.loadOpeningHours')\r\n          .then(resolve)\r\n          .catch(() => {\r\n            this.unloadOpeningHoursWidget();\r\n            return reject('Opening hours data could not be loaded!');\r\n          });\r\n\r\n      }).catch(() => {\r\n        this.unloadOpeningHoursWidget();\r\n        return reject('Opening hours widget could not be loaded!');\r\n      });\r\n\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Method to unload the opening hours widget.\r\n   */\r\n   unloadOpeningHoursWidget() {\r\n    this.$window.loadAdditionalJavascript = undefined;\r\n    this.$window.OpeningHours = undefined;\r\n    delete this.$window.openingHours;\r\n    delete this._openingHours;\r\n\r\n    let openingHoursModalDiv = this.$window.document.getElementById(\"openingHoursModalDiv\");\r\n    if (openingHoursModalDiv) openingHoursModalDiv.outerHTML = \"\";\r\n\r\n    this.scriptLoaderService.unload('callback=OpeningHours.loadOpeningHours', 'js');\r\n    this.scriptLoaderService.unload('callback=OpeningHours.initializeGMaps', 'js');\r\n    this.scriptLoaderService.unload('openingHours_min.js', 'js');\r\n    this.scriptLoaderService.unload('openingHoursStyles_min.css', 'css');\r\n   }\r\n\r\n}\r\n\r\nOpeningHoursController.$inject = ['scriptLoaderService', '$window', 'localeService'];\r\n\r\nexport let OpeningHoursConfig = {\r\n  name: 'rexOpeningHours',\r\n  config: {\r\n    template: '<div id=\"openingHoursContainer\"></div>',\r\n    bindings: {\r\n      parentCtrl: '<',\r\n    },\r\n    controller: OpeningHoursController,\r\n  }\r\n}\r\n","/** \r\n * Service to insert the pick up numbers for the requested items.\r\n */\r\nexport class PickUpNumbersService {\r\n  constructor($http, $location) {\r\n    this.$http = $http;\r\n    this.$location = $location;\r\n\r\n    this._serviceBaseUrl = (this.$location.host() === \"localhost\") ?\r\n      \"https://rex.kb.dk/cgi-bin/\" :\r\n      this.$location.absUrl().split(\"/primo-explore/\")[0] + \"/cgi-bin/\";\r\n\r\n    this._pickUpNumbersForIds = {};\r\n    this._ongoingInsertions = 0;\r\n    this._runningPromise;\r\n  }\r\n\r\n  /**\r\n    * Binds a watcher to the given controller.\r\n    * The watcher watches for the elements\r\n    * containing the request IDs, and when the \r\n    * elements become available, inserts the pickup \r\n    * numbers if they exist.  \r\n    */\r\n  waitForIdsAndInsertPickUpNumbers(ctrl) {\r\n    ctrl.$scope.$watch(() => ctrl.selector(ctrl.parentElement).length, \r\n      (newVal, oldVal) => {\r\n        if (newVal && newVal !== oldVal) {\r\n          this.insertPickUpNumbers(ctrl.parentElement, ctrl.parentCtrl.requestsService.requestsDisplay, ctrl.selector);\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  /** \r\n   *  Method to retrieve and insert the pick-up numbers\r\n   *  into the given DOM element.\r\n   *  If the method is called when a previous run\r\n   *  has not finished, it chains the new insertion\r\n   *  into the promise of the previous call.\r\n   *  @param {Object} targetContainer - A DOM element \r\n   *    containing the elements the pick-up\r\n   *    numbers are to be inserted.\r\n   *  @param {Array} requests - An array of request items, \r\n   *    pick-up numbers of which are to be retrieved.\r\n   *  @param {function} selector - A selector function to return \r\n   *    the target DOM elements when called with a\r\n   *    ancestor DOM element.\r\n   *  @return {Promise} A Promise to be resolved \r\n   *    when the pick-up numbers are inserted. \r\n   */\r\n  insertPickUpNumbers(targetContainer, requests, selector) {\r\n    if (this._runningPromise) {\r\n      // If there is an ongoing insertion, \r\n      // perform the new insertion when the former is done. \r\n      return this._runningPromise.then(() => {\r\n        return this._insert(targetContainer, requests, selector);\r\n      });\r\n    } else {\r\n      // Else, perform the insertion.\r\n      return this._insert(targetContainer, requests, selector);\r\n    }\r\n  }\r\n\r\n  _insert(targetContainer, requests, selector) {\r\n    let ctrl = this;\r\n\r\n    ctrl._runningPromise = new Promise((resolve, reject) => {\r\n\r\n      let targetElements = selector(targetContainer);\r\n      let requestObjects = ctrl._composeRequestObjects(targetElements, requests);\r\n\r\n      ctrl._ongoingInsertions = requestObjects.length;\r\n\r\n      requestObjects.forEach((request) => {\r\n\r\n        ctrl._insertForRequest(request).then(() => {\r\n          ctrl._ongoingInsertions = ctrl._ongoingInsertions - 1;\r\n          if (ctrl._ongoingInsertions === 0) {\r\n            resolve();\r\n            return;\r\n          }\r\n        });\r\n      });\r\n\r\n    });\r\n\r\n    // TODO: This looks weird, but seems to work OK.\r\n    this._runningPromise.then(() => {\r\n      this._runningPromise = null;\r\n    });\r\n\r\n    return this._runningPromise;\r\n\r\n  }\r\n\r\n  // Returns an array of objects with request related data.\r\n  _composeRequestObjects(targetElements, requests) {\r\n    return requests.map((request) => {\r\n      let regex = request.requestId + \"$\";\r\n      return {\r\n        element: Array.prototype.find.call(targetElements, (target) => {\r\n          return target.textContent.match(new RegExp(regex))\r\n        }),\r\n        id: request.requestId,\r\n        expandedDisplay: request.expandedDisplay\r\n      }\r\n    });\r\n  };\r\n\r\n  // Inserts the pickup number for given request.\r\n  _insertForRequest(request) {\r\n    let ctrl = this;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // If there is no DOM element to be altered,\r\n      // do nothing.\r\n      if (!request.element) {\r\n        resolve();\r\n        return;\r\n      }\r\n\r\n      if (ctrl._pickUpNumbersForIds[request.id]) {\r\n        // If the pick-up number for the request is already known, use it.  \r\n        ctrl._replaceIdText(request, ctrl._pickUpNumbersForIds[request.id]);\r\n        resolve();\r\n      } else if (request.expandedDisplay.find((field) => field.label === \"request.holds.end_hold_date\")) {\r\n        // Else, if it has a hold deadline, retrieve and insert the pick-up number.\r\n        // The requested item can only have a pick up number if it has a hold deadline.\r\n        ctrl._retrievePickUpNumber(request.id).then((response) => {\r\n          // Insert the pick-up number text.\r\n          let pickUpNumber = response.data.split(/<body>|<\\/body>/)[1];\r\n          ctrl._pickUpNumbersForIds[request.id] = pickUpNumber;\r\n          ctrl._replaceIdText(request, pickUpNumber);\r\n          resolve();\r\n        }).catch(() => {\r\n          ctrl._removeIdText(request);\r\n          console.log('REX: Could not retrieve the pick up number.');\r\n          resolve();\r\n        });\r\n\r\n      } else {\r\n        // Else, remove the request ID from the view.\r\n        ctrl._removeIdText(request);\r\n        resolve();\r\n      }\r\n\r\n    });\r\n\r\n  }\r\n\r\n  // Removes the request ID.\r\n  _removeIdText(request) {\r\n    this._replaceIdText(request, \"\");\r\n  };\r\n\r\n  // Retrieves the pick up numbers from the associated service. \r\n  // Request URL may look like the following.\r\n  // https://rex.kb.dk/cgi-bin/get_pickup_number_text?z37_rec_key=0078814230000100001\r\n  // 'https://rex-test.kb.dk/cgi-bin/get_pickup_number_title_kgl?z370_rec_key=000000371\r\n  _retrievePickUpNumber(requestId) {\r\n    let serviceURL = this._serviceBaseUrl;\r\n    let titleMatch = requestId.match(/^TITLE([0-9]*)/);\r\n\r\n    if (titleMatch && titleMatch.length === 2) {\r\n      serviceURL += \"get_pickup_number_title_kgl?z370_rec_key=\" + titleMatch[1];\r\n    } else {\r\n      serviceURL += \"get_pickup_number_text?z37_rec_key=\" + requestId.slice(-19);\r\n    }\r\n\r\n    return this.$http.get(serviceURL);\r\n  };\r\n\r\n  // Replaces the request ID text with the given string.\r\n  _replaceIdText(request, text) {\r\n    request.element.textContent = request.element.textContent.replace(\"-\" + request.id, text);\r\n  };\r\n\r\n}\r\n\r\nPickUpNumbersService.$inject = ['$http', '$location'];","import { viewName } from './viewName';\r\n\r\nexport let PrmExploreMainAfterConfig = {\r\n  name: 'prmExploreMainAfter',\r\n  config: {\r\n    templateUrl: 'custom/' + viewName + '/html/prmExploreMainAfter.component.html',\r\n  }\r\n};","import { viewName } from './viewName';\r\n\r\nexport let PrmFinesAfterConfig = {\r\n  name: 'prmFinesAfter',\r\n  config: {\r\n    templateUrl: 'custom/' + viewName + '/html/prmFinesAfter.component.html',\r\n  }\r\n};","import {\r\n  viewName\r\n} from './viewName';\r\n\r\nclass PrmFullViewAfterController {\r\n  constructor($element, $scope) {\r\n    this.$element = $element;\r\n    this.$scope = $scope;\r\n  }\r\n\r\n  $onInit() {\r\n    this.parentElement = this.$element.parent()[0];\r\n\r\n    this.retrieveDoiIfPresent();\r\n    this.retrieveViafIdsIfPresent();\r\n\r\n  }\r\n\r\n  retrieveDoiIfPresent() {\r\n    try {\r\n      this.doi = this.parentCtrl.item.pnx.addata.doi[0];\r\n    } catch (e) {\r\n      console.log('DOI not found.');\r\n    };\r\n  }\r\n\r\n  retrieveViafIdsIfPresent() {\r\n    try {\r\n      // This does not seem to fail when no VIAF URI is present.\r\n      this.viafUris = this.parentCtrl.item.pnx.addata.lad06;\r\n    } catch (e) {\r\n      console.log('No VIAF URI found.');\r\n    };\r\n  }\r\n\r\n  insertAltmetricsSection() {\r\n    let altmetricsSectionData = {\r\n      scrollId: \"altmetrics\",\r\n      serviceName: \"altmetrics\",\r\n      title: \"brief.results.tabs.Altmetrics\"\r\n    };\r\n    let altmetricsSectionElement = this.$element.find('rex-altmetrics')[0];\r\n\r\n    this.insertSection(altmetricsSectionData, altmetricsSectionElement);\r\n  }\r\n\r\n  insertAuthorsSection() {\r\n    let authorsSectionData = {\r\n      scrollId: \"authors\",\r\n      serviceName: \"authors\",\r\n      title: \"brief.results.tabs.Authors\"\r\n    };\r\n    let authorsSectionElement = this.$element.find('rex-linked-persons')[0];\r\n\r\n    this.insertSection(authorsSectionData, authorsSectionElement);\r\n  }\r\n\r\n  insertSection(sectionData, sectionElement) {\r\n    // The title of the new section is used to idenitfy the section\r\n    // element.\r\n    let sectionTitleSelector = 'h4[translate=\"' + sectionData.title + '\"]';\r\n\r\n    // We set up the watcher before inserting the section data,\r\n    // to ensure that the watcher catches the change.\r\n    this.waitForTargetThenMoveSection(sectionTitleSelector, sectionElement);\r\n    this.insertSectionData(sectionData);\r\n  }\r\n\r\n  // Wait for the target element to be created.\r\n  waitForTargetThenMoveSection(sectionTitleSelector, sectionElement) {\r\n    let unbindWatcher = this.$scope.$watch(() =>\r\n      this.parentElement.querySelector(sectionTitleSelector),\r\n      (newVal, oldVal) => {\r\n        if (newVal) {\r\n          this.moveSectionElement(newVal, sectionElement);\r\n          unbindWatcher();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  moveSectionElement(identifierElement, sectionElement) {\r\n    let targetElement = identifierElement.parentElement.parentElement.parentElement.parentElement.children[1];\r\n\r\n    // Move the section into the target element.\r\n    if (targetElement && targetElement.appendChild) {\r\n      targetElement.appendChild(sectionElement);\r\n      // targetElement.appendChild(this.$element.children()[0]);\r\n    }\r\n  }\r\n\r\n  insertSectionData(sectionData) {\r\n    this.parentCtrl.services.splice(this.parentCtrl.services.length - 1, 0, sectionData);\r\n  }\r\n\r\n}\r\n\r\nPrmFullViewAfterController.$inject = ['$element', '$scope'];\r\n\r\nexport let PrmFullViewAfterConfig = {\r\n  name: 'prmFullViewAfter',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<',\r\n    },\r\n    controller: PrmFullViewAfterController,\r\n    templateUrl: 'custom/' + viewName + '/html/prmFullViewAfter.component.html',\r\n  }\r\n};","import { viewName } from './viewName';\r\n\r\n// Clickable logo.\r\nclass PrmLogoAfterController {\r\n  constructor(navigationService) {\r\n    this.navigationService = navigationService;\r\n  }\r\n\r\n  getIconLink() {\r\n    return this.parentCtrl.iconLink;\r\n  };\r\n}\r\n\r\nPrmLogoAfterController.$inject = ['navigationService'];\r\n\r\nexport let PrmLogoAfterConfig = {\r\n  name: 'prmLogoAfter',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<'\r\n    },\r\n    controller: PrmLogoAfterController,\r\n    templateUrl: 'custom/' + viewName + '/html/prmLogoAfter.component.html'\r\n  }\r\n};","class PrmPersonalInfoAfterController {\r\n\r\n  constructor(navigationService) {\r\n    this.navigationService = navigationService;\r\n  }\r\n\r\n  $onInit() {\r\n    // Overwrite the functionality of the 'Edit' button.\r\n    // It now navigates to the corresponding editing page for the user database.\r\n    this.parentCtrl.editDetails = () => {\r\n      this.navigationService.navigateTo('https://user.kb.dk/user/edit')\r\n    };\r\n  }\r\n\r\n}\r\n\r\nPrmPersonalInfoAfterController.$inject = ['navigationService'];\r\n\r\nexport let PrmPersonalInfoAfterConfig = {\r\n  name: 'prmPersonalInfoAfter',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<'\r\n    },\r\n    controller: PrmPersonalInfoAfterController,    \r\n  }\r\n}","class PrmRequestServicesAfterController {\r\n\r\n  constructor($scope, $element) {\r\n    this.$scope = $scope;\r\n    this.$element = $element;\r\n  }\r\n\r\n  $onInit() {\r\n\r\n    this.parentElement = this.$element.parent();\r\n\r\n    // Customize the request link to be a button, and remove the redundant second link.\r\n    // Do this when the user is logged in, and the links are properly loaded.\r\n    this.$scope.$watch(() => this.parentCtrl.isLoggedIn() && this.parentElement[0].querySelector('.links-block-item prm-service-button button'),\r\n      (newVal, oldVal) => {\r\n        if (newVal && !oldVal) {\r\n          // Find the links.\r\n          let linkElements = this.parentElement[0].querySelectorAll('.links-block-item');\r\n\r\n          // It seems that there should always be two matched links,\r\n          // if not, log it but do not throw an exception\r\n          // as the code might still do the job.\r\n          if (linkElements.length != 2) {\r\n            console.log('An unhandled case is encountered in prm-request-services.');\r\n          }\r\n\r\n          // If the first link is the ILL link, \r\n          // we remove prm-request-services element all together.\r\n          if (linkElements[0].querySelector('span[translate=\"ILL\"]')) {\r\n            this.parentElement.remove();\r\n          }\r\n          // Else, the first one should be the request link \r\n          // and the second the ILL link.\r\n          else {\r\n            // Customize the request link to be a button.\r\n            angular.element(linkElements[0]).find('button').removeClass('button-as-link');\r\n            angular.element(linkElements[0]).find('button').addClass('request-button');\r\n\r\n            // Remove the redundant ILL link.\r\n            linkElements[1].remove();\r\n          }\r\n        }\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n}\r\n\r\nPrmRequestServicesAfterController.$inject = ['$scope', '$element'];\r\n\r\nexport let PrmRequestServicesAfterConfig = {\r\n  name: 'prmRequestServicesAfter',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<',\r\n    },\r\n    controller: PrmRequestServicesAfterController\r\n  }\r\n}","class PrmRequestsAfterController {\r\n\r\n  constructor($scope, $element, pickUpNumbersService) {\r\n    this.$scope = $scope;\r\n    this.$element = $element;\r\n    this.pickUpNumbersService = pickUpNumbersService;\r\n  }\r\n\r\n  $onInit() {\r\n    this.parentElement = this.$element.parent()[0];\r\n    this.pickUpNumbersService.waitForIdsAndInsertPickUpNumbers(this);     \r\n  }\r\n\r\n  selector(element) {\r\n    return element.querySelectorAll('p[ng-if=\"::requestDisplay.secondLineRight\"]');\r\n  }\r\n\r\n}\r\n\r\nPrmRequestsAfterController.$inject = ['$scope', '$element', 'pickUpNumbersService'];\r\n\r\nexport let PrmRequestsAfterConfig = {\r\n  name: 'prmRequestsAfter',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<'\r\n    },\r\n    controller: PrmRequestsAfterController,\r\n  }\r\n}\r\n","class PrmRequestsOverviewAfterController {\r\n  \r\n  constructor($scope, $element, pickUpNumbersService) {\r\n    this.$scope = $scope;\r\n    this.$element = $element;\r\n    this.pickUpNumbersService = pickUpNumbersService;\r\n  }\r\n\r\n  $onInit() {\r\n    this.parentElement = this.$element.parent()[0];\r\n    this.pickUpNumbersService.waitForIdsAndInsertPickUpNumbers(this);    \r\n  }\r\n\r\n  selector(element) {\r\n    return element.querySelectorAll('p[ng-if=\"::request.secondLineRight\"] span');\r\n  }\r\n\r\n}\r\n\r\nPrmRequestsOverviewAfterController.$inject = ['$scope', '$element', 'pickUpNumbersService'];\r\n\r\nexport let PrmRequestsOverviewAfterConfig = {\r\n  name: 'prmRequestsOverviewAfter',\r\n  config: {\r\n    bindings: {\r\n      parentCtrl: '<'\r\n    },\r\n    controller: PrmRequestsOverviewAfterController,\r\n  }\r\n}\r\n","import { viewName } from './viewName';\r\n\r\nclass PrmSearchBarAfterController {\r\n  constructor($element) {\r\n    this.$element = $element;\r\n  };\r\n\r\n  $postLink() {\r\n\r\n    let parentElement = this.$element.parent();\r\n\r\n    // Move the search tips.\r\n    let container = angular.element(parentElement.children()[0].children[0]);\r\n    container.append(this.$element.children()[0]);\r\n\r\n    let searchBarElement = parentElement[0].querySelector('#searchBar');\r\n    \r\n    // Focus on the search bar, if it exists.\r\n    // Note that, when the language is changed, \r\n    // the search bar is not available yet here.\r\n    // We can watch for the element and then focus on it,\r\n    // but it does not seem to worth it.\r\n    if (searchBarElement) {\r\n      searchBarElement.focus();\r\n    }\r\n\r\n  };\r\n}\r\n\r\nPrmSearchBarAfterController.$inject = ['$element'];\r\n\r\nexport let PrmSearchBarAfterConfig = {\r\n  name: 'prmSearchBarAfter',\r\n  config: {\r\n    templateUrl: 'custom/' + viewName + '/html/prmSearchBarAfter.component.html',\r\n    controller: PrmSearchBarAfterController,\r\n  }\r\n}","class PrmTopbarAfterController {\r\n  constructor(announcementService, $scope, $element, $translate) {\r\n    this.announcementService = announcementService;\r\n    this.$scope = $scope;\r\n    this.$element = $element;\r\n    this.$translate = $translate;\r\n  }\r\n\r\n  $onInit() {\r\n    // Announcement displayed.\r\n    this.announcementService.display(() => this.hideCallback())\r\n      .then(() => this.displayCallback())\r\n      .catch((e) => {\r\n        if (e) console.log(e);\r\n      });\r\n\r\n    let nameElements = this.$element.parent()[0].getElementsByClassName('user-name');\r\n\r\n    // Replace the 'Guest' label with 'Log in' to cue the user where to login.\r\n    // TODO: Test this on each new release to see if it is still needed,\r\n    // and remove otherwise.\r\n    this.$scope.$watch(nameElements.length, (newVal, oldVal) => {\r\n      Array.prototype.forEach.call(nameElements, (element) => {\r\n        if (this.primoExploreCtrl.userSessionManagerService.isGuest()) {\r\n          this.$translate('eshelf.signin.title').then((translation) => {\r\n            element.textContent = translation;\r\n          });\r\n        };\r\n      });\r\n    });\r\n\r\n  };\r\n\r\n  displayCallback() {\r\n    this.$element.parent().addClass('shifted-topbar');\r\n  };\r\n\r\n  hideCallback() {\r\n    this.$element.parent().removeClass('shifted-topbar');\r\n  };\r\n\r\n}\r\n\r\nPrmTopbarAfterController.$inject = ['announcementService', '$scope', '$element', '$translate'];\r\n\r\nexport let PrmTopbarAfterConfig = {\r\n  name: 'prmTopbarAfter',\r\n  config: {\r\n    controller: PrmTopbarAfterController,\r\n    require: {\r\n      primoExploreCtrl: '^primoExplore'\r\n    }\r\n  }\r\n};","/**\r\n * A service to load and unload JS scripts.\r\n */\r\nexport class ScriptLoaderService {\r\n  constructor(angularLoadMonkeyPatched) {\r\n    this.angularLoadMonkeyPatched = angularLoadMonkeyPatched;\r\n  }\r\n\r\n  /**\r\n   * Loads the JS script with given URL.\r\n   * @param {string} url - The URL of the script to be loaded.\r\n   */\r\n  load(url) { \r\n    return this.angularLoadMonkeyPatched.loadScript(url);\r\n  }\r\n\r\n  /**\r\n   * Removes the JS or CSS file with the given file name from the DOM. \r\n   * See: http://stackoverflow.com/questions/9425910/load-and-unload-javascript-at-runtime/9425964#9425964\r\n   * @param {string} fileName- The name of the file to be removed.\r\n   * @param {string} fileType- The type of the file to be removed.\r\n   */\r\n  unload(fileName, fileType) {\r\n    // Determine element type to create nodelist from\r\n    var targetElement = (fileType == \"js\") ? \"script\" : (fileType == \"css\") ? \"link\" : \"none\"\r\n      // Determine corresponding attribute to test for\r\n    var targetAttr = (fileType == \"js\") ? \"src\" : (fileType == \"css\") ? \"href\" : \"none\"\r\n    var allSuspects = document.getElementsByTagName(targetElement)\r\n      // Search backwards within nodelist for matching elements to remove\r\n    for (var i = allSuspects.length; i >= 0; i--) {\r\n      if (allSuspects[i] && allSuspects[i].getAttribute(targetAttr) != null && allSuspects[i].getAttribute(targetAttr).indexOf(fileName) != -1)\r\n      // Remove element by calling parentNode.removeChild()\r\n        allSuspects[i].parentNode.removeChild(allSuspects[i])\r\n    }\r\n  }\r\n\r\n}\r\n\r\nScriptLoaderService.$inject = ['angularLoadMonkeyPatched'];","import { viewName } from './viewName';\r\n\r\nclass SearchTipsController {\r\n  constructor($mdDialog, localeService) {\r\n    this.$mdDialog = $mdDialog;\r\n    this.localeService = localeService;\r\n  };\r\n\r\n  /**\r\n   * Pops up a dialog message containing \r\n   * the search tips in the selected language.\r\n   */\r\n  showSearchTips(event) {\r\n    this.$mdDialog.show({\r\n      controller: () => {\r\n        return {\r\n          hide: () => { this.$mdDialog.hide() },\r\n          cancel: () => { this.$mdDialog.cancel() },\r\n        }\r\n      },\r\n      controllerAs: '$ctrl',\r\n      templateUrl: 'custom/' + viewName + '/html/searchTips_' + this.localeService.current() + '.html',\r\n      parent: angular.element(document.body),\r\n      targetEvent: event,\r\n      clickOutsideToClose: true,\r\n      fullscreen: false // Only for -xs, -sm breakpoints.\r\n    });\r\n  };\r\n\r\n}\r\n\r\nSearchTipsController.$inject = ['$mdDialog', 'localeService'];\r\n\r\nexport let SearchTipsConfig = {\r\n  name: 'rexSearchTips',\r\n  config: {\r\n    controller: SearchTipsController,\r\n    templateUrl: 'custom/' + viewName + '/html/searchTips.component.html'\r\n  }\r\n}","// Define the view name here.\r\nexport let viewName = \"NUI\";","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/jakearchibald/es6-promise/master/LICENSE\n * @version   2.3.0\n */\n\n(function() {\n    \"use strict\";\n    function lib$es6$promise$utils$$objectOrFunction(x) {\n      return typeof x === 'function' || (typeof x === 'object' && x !== null);\n    }\n\n    function lib$es6$promise$utils$$isFunction(x) {\n      return typeof x === 'function';\n    }\n\n    function lib$es6$promise$utils$$isMaybeThenable(x) {\n      return typeof x === 'object' && x !== null;\n    }\n\n    var lib$es6$promise$utils$$_isArray;\n    if (!Array.isArray) {\n      lib$es6$promise$utils$$_isArray = function (x) {\n        return Object.prototype.toString.call(x) === '[object Array]';\n      };\n    } else {\n      lib$es6$promise$utils$$_isArray = Array.isArray;\n    }\n\n    var lib$es6$promise$utils$$isArray = lib$es6$promise$utils$$_isArray;\n    var lib$es6$promise$asap$$len = 0;\n    var lib$es6$promise$asap$$toString = {}.toString;\n    var lib$es6$promise$asap$$vertxNext;\n    var lib$es6$promise$asap$$customSchedulerFn;\n\n    var lib$es6$promise$asap$$asap = function asap(callback, arg) {\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len] = callback;\n      lib$es6$promise$asap$$queue[lib$es6$promise$asap$$len + 1] = arg;\n      lib$es6$promise$asap$$len += 2;\n      if (lib$es6$promise$asap$$len === 2) {\n        // If len is 2, that means that we need to schedule an async flush.\n        // If additional callbacks are queued before the queue is flushed, they\n        // will be processed by this flush that we are scheduling.\n        if (lib$es6$promise$asap$$customSchedulerFn) {\n          lib$es6$promise$asap$$customSchedulerFn(lib$es6$promise$asap$$flush);\n        } else {\n          lib$es6$promise$asap$$scheduleFlush();\n        }\n      }\n    }\n\n    function lib$es6$promise$asap$$setScheduler(scheduleFn) {\n      lib$es6$promise$asap$$customSchedulerFn = scheduleFn;\n    }\n\n    function lib$es6$promise$asap$$setAsap(asapFn) {\n      lib$es6$promise$asap$$asap = asapFn;\n    }\n\n    var lib$es6$promise$asap$$browserWindow = (typeof window !== 'undefined') ? window : undefined;\n    var lib$es6$promise$asap$$browserGlobal = lib$es6$promise$asap$$browserWindow || {};\n    var lib$es6$promise$asap$$BrowserMutationObserver = lib$es6$promise$asap$$browserGlobal.MutationObserver || lib$es6$promise$asap$$browserGlobal.WebKitMutationObserver;\n    var lib$es6$promise$asap$$isNode = typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n    // test for web worker but not in IE10\n    var lib$es6$promise$asap$$isWorker = typeof Uint8ClampedArray !== 'undefined' &&\n      typeof importScripts !== 'undefined' &&\n      typeof MessageChannel !== 'undefined';\n\n    // node\n    function lib$es6$promise$asap$$useNextTick() {\n      var nextTick = process.nextTick;\n      // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n      // setImmediate should be used instead instead\n      var version = process.versions.node.match(/^(?:(\\d+)\\.)?(?:(\\d+)\\.)?(\\*|\\d+)$/);\n      if (Array.isArray(version) && version[1] === '0' && version[2] === '10') {\n        nextTick = setImmediate;\n      }\n      return function() {\n        nextTick(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    // vertx\n    function lib$es6$promise$asap$$useVertxTimer() {\n      return function() {\n        lib$es6$promise$asap$$vertxNext(lib$es6$promise$asap$$flush);\n      };\n    }\n\n    function lib$es6$promise$asap$$useMutationObserver() {\n      var iterations = 0;\n      var observer = new lib$es6$promise$asap$$BrowserMutationObserver(lib$es6$promise$asap$$flush);\n      var node = document.createTextNode('');\n      observer.observe(node, { characterData: true });\n\n      return function() {\n        node.data = (iterations = ++iterations % 2);\n      };\n    }\n\n    // web worker\n    function lib$es6$promise$asap$$useMessageChannel() {\n      var channel = new MessageChannel();\n      channel.port1.onmessage = lib$es6$promise$asap$$flush;\n      return function () {\n        channel.port2.postMessage(0);\n      };\n    }\n\n    function lib$es6$promise$asap$$useSetTimeout() {\n      return function() {\n        setTimeout(lib$es6$promise$asap$$flush, 1);\n      };\n    }\n\n    var lib$es6$promise$asap$$queue = new Array(1000);\n    function lib$es6$promise$asap$$flush() {\n      for (var i = 0; i < lib$es6$promise$asap$$len; i+=2) {\n        var callback = lib$es6$promise$asap$$queue[i];\n        var arg = lib$es6$promise$asap$$queue[i+1];\n\n        callback(arg);\n\n        lib$es6$promise$asap$$queue[i] = undefined;\n        lib$es6$promise$asap$$queue[i+1] = undefined;\n      }\n\n      lib$es6$promise$asap$$len = 0;\n    }\n\n    function lib$es6$promise$asap$$attemptVertex() {\n      try {\n        var r = require;\n        var vertx = r('vertx');\n        lib$es6$promise$asap$$vertxNext = vertx.runOnLoop || vertx.runOnContext;\n        return lib$es6$promise$asap$$useVertxTimer();\n      } catch(e) {\n        return lib$es6$promise$asap$$useSetTimeout();\n      }\n    }\n\n    var lib$es6$promise$asap$$scheduleFlush;\n    // Decide what async method to use to triggering processing of queued callbacks:\n    if (lib$es6$promise$asap$$isNode) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useNextTick();\n    } else if (lib$es6$promise$asap$$BrowserMutationObserver) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMutationObserver();\n    } else if (lib$es6$promise$asap$$isWorker) {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useMessageChannel();\n    } else if (lib$es6$promise$asap$$browserWindow === undefined && typeof require === 'function') {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$attemptVertex();\n    } else {\n      lib$es6$promise$asap$$scheduleFlush = lib$es6$promise$asap$$useSetTimeout();\n    }\n\n    function lib$es6$promise$$internal$$noop() {}\n\n    var lib$es6$promise$$internal$$PENDING   = void 0;\n    var lib$es6$promise$$internal$$FULFILLED = 1;\n    var lib$es6$promise$$internal$$REJECTED  = 2;\n\n    var lib$es6$promise$$internal$$GET_THEN_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$selfFullfillment() {\n      return new TypeError(\"You cannot resolve a promise with itself\");\n    }\n\n    function lib$es6$promise$$internal$$cannotReturnOwn() {\n      return new TypeError('A promises callback cannot return that same promise.');\n    }\n\n    function lib$es6$promise$$internal$$getThen(promise) {\n      try {\n        return promise.then;\n      } catch(error) {\n        lib$es6$promise$$internal$$GET_THEN_ERROR.error = error;\n        return lib$es6$promise$$internal$$GET_THEN_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$tryThen(then, value, fulfillmentHandler, rejectionHandler) {\n      try {\n        then.call(value, fulfillmentHandler, rejectionHandler);\n      } catch(e) {\n        return e;\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleForeignThenable(promise, thenable, then) {\n       lib$es6$promise$asap$$asap(function(promise) {\n        var sealed = false;\n        var error = lib$es6$promise$$internal$$tryThen(then, thenable, function(value) {\n          if (sealed) { return; }\n          sealed = true;\n          if (thenable !== value) {\n            lib$es6$promise$$internal$$resolve(promise, value);\n          } else {\n            lib$es6$promise$$internal$$fulfill(promise, value);\n          }\n        }, function(reason) {\n          if (sealed) { return; }\n          sealed = true;\n\n          lib$es6$promise$$internal$$reject(promise, reason);\n        }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n        if (!sealed && error) {\n          sealed = true;\n          lib$es6$promise$$internal$$reject(promise, error);\n        }\n      }, promise);\n    }\n\n    function lib$es6$promise$$internal$$handleOwnThenable(promise, thenable) {\n      if (thenable._state === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, thenable._result);\n      } else if (thenable._state === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, thenable._result);\n      } else {\n        lib$es6$promise$$internal$$subscribe(thenable, undefined, function(value) {\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      }\n    }\n\n    function lib$es6$promise$$internal$$handleMaybeThenable(promise, maybeThenable) {\n      if (maybeThenable.constructor === promise.constructor) {\n        lib$es6$promise$$internal$$handleOwnThenable(promise, maybeThenable);\n      } else {\n        var then = lib$es6$promise$$internal$$getThen(maybeThenable);\n\n        if (then === lib$es6$promise$$internal$$GET_THEN_ERROR) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$GET_THEN_ERROR.error);\n        } else if (then === undefined) {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        } else if (lib$es6$promise$utils$$isFunction(then)) {\n          lib$es6$promise$$internal$$handleForeignThenable(promise, maybeThenable, then);\n        } else {\n          lib$es6$promise$$internal$$fulfill(promise, maybeThenable);\n        }\n      }\n    }\n\n    function lib$es6$promise$$internal$$resolve(promise, value) {\n      if (promise === value) {\n        lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$selfFullfillment());\n      } else if (lib$es6$promise$utils$$objectOrFunction(value)) {\n        lib$es6$promise$$internal$$handleMaybeThenable(promise, value);\n      } else {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publishRejection(promise) {\n      if (promise._onerror) {\n        promise._onerror(promise._result);\n      }\n\n      lib$es6$promise$$internal$$publish(promise);\n    }\n\n    function lib$es6$promise$$internal$$fulfill(promise, value) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n\n      promise._result = value;\n      promise._state = lib$es6$promise$$internal$$FULFILLED;\n\n      if (promise._subscribers.length !== 0) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, promise);\n      }\n    }\n\n    function lib$es6$promise$$internal$$reject(promise, reason) {\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) { return; }\n      promise._state = lib$es6$promise$$internal$$REJECTED;\n      promise._result = reason;\n\n      lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publishRejection, promise);\n    }\n\n    function lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection) {\n      var subscribers = parent._subscribers;\n      var length = subscribers.length;\n\n      parent._onerror = null;\n\n      subscribers[length] = child;\n      subscribers[length + lib$es6$promise$$internal$$FULFILLED] = onFulfillment;\n      subscribers[length + lib$es6$promise$$internal$$REJECTED]  = onRejection;\n\n      if (length === 0 && parent._state) {\n        lib$es6$promise$asap$$asap(lib$es6$promise$$internal$$publish, parent);\n      }\n    }\n\n    function lib$es6$promise$$internal$$publish(promise) {\n      var subscribers = promise._subscribers;\n      var settled = promise._state;\n\n      if (subscribers.length === 0) { return; }\n\n      var child, callback, detail = promise._result;\n\n      for (var i = 0; i < subscribers.length; i += 3) {\n        child = subscribers[i];\n        callback = subscribers[i + settled];\n\n        if (child) {\n          lib$es6$promise$$internal$$invokeCallback(settled, child, callback, detail);\n        } else {\n          callback(detail);\n        }\n      }\n\n      promise._subscribers.length = 0;\n    }\n\n    function lib$es6$promise$$internal$$ErrorObject() {\n      this.error = null;\n    }\n\n    var lib$es6$promise$$internal$$TRY_CATCH_ERROR = new lib$es6$promise$$internal$$ErrorObject();\n\n    function lib$es6$promise$$internal$$tryCatch(callback, detail) {\n      try {\n        return callback(detail);\n      } catch(e) {\n        lib$es6$promise$$internal$$TRY_CATCH_ERROR.error = e;\n        return lib$es6$promise$$internal$$TRY_CATCH_ERROR;\n      }\n    }\n\n    function lib$es6$promise$$internal$$invokeCallback(settled, promise, callback, detail) {\n      var hasCallback = lib$es6$promise$utils$$isFunction(callback),\n          value, error, succeeded, failed;\n\n      if (hasCallback) {\n        value = lib$es6$promise$$internal$$tryCatch(callback, detail);\n\n        if (value === lib$es6$promise$$internal$$TRY_CATCH_ERROR) {\n          failed = true;\n          error = value.error;\n          value = null;\n        } else {\n          succeeded = true;\n        }\n\n        if (promise === value) {\n          lib$es6$promise$$internal$$reject(promise, lib$es6$promise$$internal$$cannotReturnOwn());\n          return;\n        }\n\n      } else {\n        value = detail;\n        succeeded = true;\n      }\n\n      if (promise._state !== lib$es6$promise$$internal$$PENDING) {\n        // noop\n      } else if (hasCallback && succeeded) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      } else if (failed) {\n        lib$es6$promise$$internal$$reject(promise, error);\n      } else if (settled === lib$es6$promise$$internal$$FULFILLED) {\n        lib$es6$promise$$internal$$fulfill(promise, value);\n      } else if (settled === lib$es6$promise$$internal$$REJECTED) {\n        lib$es6$promise$$internal$$reject(promise, value);\n      }\n    }\n\n    function lib$es6$promise$$internal$$initializePromise(promise, resolver) {\n      try {\n        resolver(function resolvePromise(value){\n          lib$es6$promise$$internal$$resolve(promise, value);\n        }, function rejectPromise(reason) {\n          lib$es6$promise$$internal$$reject(promise, reason);\n        });\n      } catch(e) {\n        lib$es6$promise$$internal$$reject(promise, e);\n      }\n    }\n\n    function lib$es6$promise$enumerator$$Enumerator(Constructor, input) {\n      var enumerator = this;\n\n      enumerator._instanceConstructor = Constructor;\n      enumerator.promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (enumerator._validateInput(input)) {\n        enumerator._input     = input;\n        enumerator.length     = input.length;\n        enumerator._remaining = input.length;\n\n        enumerator._init();\n\n        if (enumerator.length === 0) {\n          lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n        } else {\n          enumerator.length = enumerator.length || 0;\n          enumerator._enumerate();\n          if (enumerator._remaining === 0) {\n            lib$es6$promise$$internal$$fulfill(enumerator.promise, enumerator._result);\n          }\n        }\n      } else {\n        lib$es6$promise$$internal$$reject(enumerator.promise, enumerator._validationError());\n      }\n    }\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validateInput = function(input) {\n      return lib$es6$promise$utils$$isArray(input);\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._validationError = function() {\n      return new Error('Array Methods must be provided an Array');\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._init = function() {\n      this._result = new Array(this.length);\n    };\n\n    var lib$es6$promise$enumerator$$default = lib$es6$promise$enumerator$$Enumerator;\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._enumerate = function() {\n      var enumerator = this;\n\n      var length  = enumerator.length;\n      var promise = enumerator.promise;\n      var input   = enumerator._input;\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        enumerator._eachEntry(input[i], i);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._eachEntry = function(entry, i) {\n      var enumerator = this;\n      var c = enumerator._instanceConstructor;\n\n      if (lib$es6$promise$utils$$isMaybeThenable(entry)) {\n        if (entry.constructor === c && entry._state !== lib$es6$promise$$internal$$PENDING) {\n          entry._onerror = null;\n          enumerator._settledAt(entry._state, i, entry._result);\n        } else {\n          enumerator._willSettleAt(c.resolve(entry), i);\n        }\n      } else {\n        enumerator._remaining--;\n        enumerator._result[i] = entry;\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._settledAt = function(state, i, value) {\n      var enumerator = this;\n      var promise = enumerator.promise;\n\n      if (promise._state === lib$es6$promise$$internal$$PENDING) {\n        enumerator._remaining--;\n\n        if (state === lib$es6$promise$$internal$$REJECTED) {\n          lib$es6$promise$$internal$$reject(promise, value);\n        } else {\n          enumerator._result[i] = value;\n        }\n      }\n\n      if (enumerator._remaining === 0) {\n        lib$es6$promise$$internal$$fulfill(promise, enumerator._result);\n      }\n    };\n\n    lib$es6$promise$enumerator$$Enumerator.prototype._willSettleAt = function(promise, i) {\n      var enumerator = this;\n\n      lib$es6$promise$$internal$$subscribe(promise, undefined, function(value) {\n        enumerator._settledAt(lib$es6$promise$$internal$$FULFILLED, i, value);\n      }, function(reason) {\n        enumerator._settledAt(lib$es6$promise$$internal$$REJECTED, i, reason);\n      });\n    };\n    function lib$es6$promise$promise$all$$all(entries) {\n      return new lib$es6$promise$enumerator$$default(this, entries).promise;\n    }\n    var lib$es6$promise$promise$all$$default = lib$es6$promise$promise$all$$all;\n    function lib$es6$promise$promise$race$$race(entries) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n\n      if (!lib$es6$promise$utils$$isArray(entries)) {\n        lib$es6$promise$$internal$$reject(promise, new TypeError('You must pass an array to race.'));\n        return promise;\n      }\n\n      var length = entries.length;\n\n      function onFulfillment(value) {\n        lib$es6$promise$$internal$$resolve(promise, value);\n      }\n\n      function onRejection(reason) {\n        lib$es6$promise$$internal$$reject(promise, reason);\n      }\n\n      for (var i = 0; promise._state === lib$es6$promise$$internal$$PENDING && i < length; i++) {\n        lib$es6$promise$$internal$$subscribe(Constructor.resolve(entries[i]), undefined, onFulfillment, onRejection);\n      }\n\n      return promise;\n    }\n    var lib$es6$promise$promise$race$$default = lib$es6$promise$promise$race$$race;\n    function lib$es6$promise$promise$resolve$$resolve(object) {\n      /*jshint validthis:true */\n      var Constructor = this;\n\n      if (object && typeof object === 'object' && object.constructor === Constructor) {\n        return object;\n      }\n\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$resolve(promise, object);\n      return promise;\n    }\n    var lib$es6$promise$promise$resolve$$default = lib$es6$promise$promise$resolve$$resolve;\n    function lib$es6$promise$promise$reject$$reject(reason) {\n      /*jshint validthis:true */\n      var Constructor = this;\n      var promise = new Constructor(lib$es6$promise$$internal$$noop);\n      lib$es6$promise$$internal$$reject(promise, reason);\n      return promise;\n    }\n    var lib$es6$promise$promise$reject$$default = lib$es6$promise$promise$reject$$reject;\n\n    var lib$es6$promise$promise$$counter = 0;\n\n    function lib$es6$promise$promise$$needsResolver() {\n      throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n    }\n\n    function lib$es6$promise$promise$$needsNew() {\n      throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n    }\n\n    var lib$es6$promise$promise$$default = lib$es6$promise$promise$$Promise;\n    /**\n      Promise objects represent the eventual result of an asynchronous operation. The\n      primary way of interacting with a promise is through its `then` method, which\n      registers callbacks to receive either a promise's eventual value or the reason\n      why the promise cannot be fulfilled.\n\n      Terminology\n      -----------\n\n      - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n      - `thenable` is an object or function that defines a `then` method.\n      - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n      - `exception` is a value that is thrown using the throw statement.\n      - `reason` is a value that indicates why a promise was rejected.\n      - `settled` the final resting state of a promise, fulfilled or rejected.\n\n      A promise can be in one of three states: pending, fulfilled, or rejected.\n\n      Promises that are fulfilled have a fulfillment value and are in the fulfilled\n      state.  Promises that are rejected have a rejection reason and are in the\n      rejected state.  A fulfillment value is never a thenable.\n\n      Promises can also be said to *resolve* a value.  If this value is also a\n      promise, then the original promise's settled state will match the value's\n      settled state.  So a promise that *resolves* a promise that rejects will\n      itself reject, and a promise that *resolves* a promise that fulfills will\n      itself fulfill.\n\n\n      Basic Usage:\n      ------------\n\n      ```js\n      var promise = new Promise(function(resolve, reject) {\n        // on success\n        resolve(value);\n\n        // on failure\n        reject(reason);\n      });\n\n      promise.then(function(value) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Advanced Usage:\n      ---------------\n\n      Promises shine when abstracting away asynchronous interactions such as\n      `XMLHttpRequest`s.\n\n      ```js\n      function getJSON(url) {\n        return new Promise(function(resolve, reject){\n          var xhr = new XMLHttpRequest();\n\n          xhr.open('GET', url);\n          xhr.onreadystatechange = handler;\n          xhr.responseType = 'json';\n          xhr.setRequestHeader('Accept', 'application/json');\n          xhr.send();\n\n          function handler() {\n            if (this.readyState === this.DONE) {\n              if (this.status === 200) {\n                resolve(this.response);\n              } else {\n                reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n              }\n            }\n          };\n        });\n      }\n\n      getJSON('/posts.json').then(function(json) {\n        // on fulfillment\n      }, function(reason) {\n        // on rejection\n      });\n      ```\n\n      Unlike callbacks, promises are great composable primitives.\n\n      ```js\n      Promise.all([\n        getJSON('/posts'),\n        getJSON('/comments')\n      ]).then(function(values){\n        values[0] // => postsJSON\n        values[1] // => commentsJSON\n\n        return values;\n      });\n      ```\n\n      @class Promise\n      @param {function} resolver\n      Useful for tooling.\n      @constructor\n    */\n    function lib$es6$promise$promise$$Promise(resolver) {\n      this._id = lib$es6$promise$promise$$counter++;\n      this._state = undefined;\n      this._result = undefined;\n      this._subscribers = [];\n\n      if (lib$es6$promise$$internal$$noop !== resolver) {\n        if (!lib$es6$promise$utils$$isFunction(resolver)) {\n          lib$es6$promise$promise$$needsResolver();\n        }\n\n        if (!(this instanceof lib$es6$promise$promise$$Promise)) {\n          lib$es6$promise$promise$$needsNew();\n        }\n\n        lib$es6$promise$$internal$$initializePromise(this, resolver);\n      }\n    }\n\n    lib$es6$promise$promise$$Promise.all = lib$es6$promise$promise$all$$default;\n    lib$es6$promise$promise$$Promise.race = lib$es6$promise$promise$race$$default;\n    lib$es6$promise$promise$$Promise.resolve = lib$es6$promise$promise$resolve$$default;\n    lib$es6$promise$promise$$Promise.reject = lib$es6$promise$promise$reject$$default;\n    lib$es6$promise$promise$$Promise._setScheduler = lib$es6$promise$asap$$setScheduler;\n    lib$es6$promise$promise$$Promise._setAsap = lib$es6$promise$asap$$setAsap;\n    lib$es6$promise$promise$$Promise._asap = lib$es6$promise$asap$$asap;\n\n    lib$es6$promise$promise$$Promise.prototype = {\n      constructor: lib$es6$promise$promise$$Promise,\n\n    /**\n      The primary way of interacting with a promise is through its `then` method,\n      which registers callbacks to receive either a promise's eventual value or the\n      reason why the promise cannot be fulfilled.\n\n      ```js\n      findUser().then(function(user){\n        // user is available\n      }, function(reason){\n        // user is unavailable, and you are given the reason why\n      });\n      ```\n\n      Chaining\n      --------\n\n      The return value of `then` is itself a promise.  This second, 'downstream'\n      promise is resolved with the return value of the first promise's fulfillment\n      or rejection handler, or rejected if the handler throws an exception.\n\n      ```js\n      findUser().then(function (user) {\n        return user.name;\n      }, function (reason) {\n        return 'default name';\n      }).then(function (userName) {\n        // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n        // will be `'default name'`\n      });\n\n      findUser().then(function (user) {\n        throw new Error('Found user, but still unhappy');\n      }, function (reason) {\n        throw new Error('`findUser` rejected and we're unhappy');\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n        // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n      });\n      ```\n      If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n\n      ```js\n      findUser().then(function (user) {\n        throw new PedagogicalException('Upstream error');\n      }).then(function (value) {\n        // never reached\n      }).then(function (value) {\n        // never reached\n      }, function (reason) {\n        // The `PedgagocialException` is propagated all the way down to here\n      });\n      ```\n\n      Assimilation\n      ------------\n\n      Sometimes the value you want to propagate to a downstream promise can only be\n      retrieved asynchronously. This can be achieved by returning a promise in the\n      fulfillment or rejection handler. The downstream promise will then be pending\n      until the returned promise is settled. This is called *assimilation*.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // The user's comments are now available\n      });\n      ```\n\n      If the assimliated promise rejects, then the downstream promise will also reject.\n\n      ```js\n      findUser().then(function (user) {\n        return findCommentsByAuthor(user);\n      }).then(function (comments) {\n        // If `findCommentsByAuthor` fulfills, we'll have the value here\n      }, function (reason) {\n        // If `findCommentsByAuthor` rejects, we'll have the reason here\n      });\n      ```\n\n      Simple Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var result;\n\n      try {\n        result = findResult();\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n      findResult(function(result, err){\n        if (err) {\n          // failure\n        } else {\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findResult().then(function(result){\n        // success\n      }, function(reason){\n        // failure\n      });\n      ```\n\n      Advanced Example\n      --------------\n\n      Synchronous Example\n\n      ```javascript\n      var author, books;\n\n      try {\n        author = findAuthor();\n        books  = findBooksByAuthor(author);\n        // success\n      } catch(reason) {\n        // failure\n      }\n      ```\n\n      Errback Example\n\n      ```js\n\n      function foundBooks(books) {\n\n      }\n\n      function failure(reason) {\n\n      }\n\n      findAuthor(function(author, err){\n        if (err) {\n          failure(err);\n          // failure\n        } else {\n          try {\n            findBoooksByAuthor(author, function(books, err) {\n              if (err) {\n                failure(err);\n              } else {\n                try {\n                  foundBooks(books);\n                } catch(reason) {\n                  failure(reason);\n                }\n              }\n            });\n          } catch(error) {\n            failure(err);\n          }\n          // success\n        }\n      });\n      ```\n\n      Promise Example;\n\n      ```javascript\n      findAuthor().\n        then(findBooksByAuthor).\n        then(function(books){\n          // found books\n      }).catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method then\n      @param {Function} onFulfilled\n      @param {Function} onRejected\n      Useful for tooling.\n      @return {Promise}\n    */\n      then: function(onFulfillment, onRejection) {\n        var parent = this;\n        var state = parent._state;\n\n        if (state === lib$es6$promise$$internal$$FULFILLED && !onFulfillment || state === lib$es6$promise$$internal$$REJECTED && !onRejection) {\n          return this;\n        }\n\n        var child = new this.constructor(lib$es6$promise$$internal$$noop);\n        var result = parent._result;\n\n        if (state) {\n          var callback = arguments[state - 1];\n          lib$es6$promise$asap$$asap(function(){\n            lib$es6$promise$$internal$$invokeCallback(state, child, callback, result);\n          });\n        } else {\n          lib$es6$promise$$internal$$subscribe(parent, child, onFulfillment, onRejection);\n        }\n\n        return child;\n      },\n\n    /**\n      `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n      as the catch block of a try/catch statement.\n\n      ```js\n      function findAuthor(){\n        throw new Error('couldn't find that author');\n      }\n\n      // synchronous\n      try {\n        findAuthor();\n      } catch(reason) {\n        // something went wrong\n      }\n\n      // async with promises\n      findAuthor().catch(function(reason){\n        // something went wrong\n      });\n      ```\n\n      @method catch\n      @param {Function} onRejection\n      Useful for tooling.\n      @return {Promise}\n    */\n      'catch': function(onRejection) {\n        return this.then(null, onRejection);\n      }\n    };\n    function lib$es6$promise$polyfill$$polyfill() {\n      var local;\n\n      if (typeof global !== 'undefined') {\n          local = global;\n      } else if (typeof self !== 'undefined') {\n          local = self;\n      } else {\n          try {\n              local = Function('return this')();\n          } catch (e) {\n              throw new Error('polyfill failed because global object is unavailable in this environment');\n          }\n      }\n\n      var P = local.Promise;\n\n      if (P && Object.prototype.toString.call(P.resolve()) === '[object Promise]' && !P.cast) {\n        return;\n      }\n\n      local.Promise = lib$es6$promise$promise$$default;\n    }\n    var lib$es6$promise$polyfill$$default = lib$es6$promise$polyfill$$polyfill;\n\n    var lib$es6$promise$umd$$ES6Promise = {\n      'Promise': lib$es6$promise$promise$$default,\n      'polyfill': lib$es6$promise$polyfill$$default\n    };\n\n    /* global define:true module:true window: true */\n    if (typeof define === 'function' && define['amd']) {\n      define(function() { return lib$es6$promise$umd$$ES6Promise; });\n    } else if (typeof module !== 'undefined' && module['exports']) {\n      module['exports'] = lib$es6$promise$umd$$ES6Promise;\n    } else if (typeof this !== 'undefined') {\n      this['ES6Promise'] = lib$es6$promise$umd$$ES6Promise;\n    }\n\n    lib$es6$promise$polyfill$$default();\n}).call(this);\n\n","/**\n * A JavaScript implementation of the JSON-LD API.\n *\n * @author Dave Longley\n *\n * @license BSD 3-Clause License\n * Copyright (c) 2011-2015 Digital Bazaar, Inc.\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * Redistributions of source code must retain the above copyright notice,\n * this list of conditions and the following disclaimer.\n *\n * Redistributions in binary form must reproduce the above copyright\n * notice, this list of conditions and the following disclaimer in the\n * documentation and/or other materials provided with the distribution.\n *\n * Neither the name of the Digital Bazaar, Inc. nor the names of its\n * contributors may be used to endorse or promote products derived from\n * this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\n * IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED\n * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\n * PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED\n * TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n * PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\n * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n(function() {\n\n// determine if in-browser or using node.js\nvar _nodejs = (\n  typeof process !== 'undefined' && process.versions && process.versions.node);\nvar _browser = !_nodejs &&\n  (typeof window !== 'undefined' || typeof self !== 'undefined');\nif(_browser) {\n  if(typeof global === 'undefined') {\n    if(typeof window !== 'undefined') {\n      global = window;\n    } else if(typeof self !== 'undefined') {\n      global = self;\n    } else if(typeof $ !== 'undefined') {\n      global = $;\n    }\n  }\n}\n\n// attaches jsonld API to the given object\nvar wrapper = function(jsonld) {\n\n/* Core API */\n\n/**\n * Performs JSON-LD compaction.\n *\n * @param input the JSON-LD input to compact.\n * @param ctx the context to compact with.\n * @param [options] options to use:\n *          [base] the base IRI to use.\n *          [compactArrays] true to compact arrays to single values when\n *            appropriate, false not to (default: true).\n *          [graph] true to always output a top-level graph (default: false).\n *          [expandContext] a context to expand with.\n *          [skipExpansion] true to assume the input is expanded and skip\n *            expansion, false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, compacted, ctx) called once the operation completes.\n */\njsonld.compact = function(input, ctx, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not compact, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  if(ctx === null) {\n    return jsonld.nextTick(function() {\n      callback(new JsonLdError(\n        'The compaction context must not be null.',\n        'jsonld.CompactError', {code: 'invalid local context'}));\n    });\n  }\n\n  // nothing to compact\n  if(input === null) {\n    return jsonld.nextTick(function() {\n      callback(null, null);\n    });\n  }\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('compactArrays' in options)) {\n    options.compactArrays = true;\n  }\n  if(!('graph' in options)) {\n    options.graph = false;\n  }\n  if(!('skipExpansion' in options)) {\n    options.skipExpansion = false;\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('link' in options)) {\n    options.link = false;\n  }\n  if(options.link) {\n    // force skip expansion when linking, \"link\" is not part of the public\n    // API, it should only be called from framing\n    options.skipExpansion = true;\n  }\n\n  var expand = function(input, options, callback) {\n    if(options.skipExpansion) {\n      return jsonld.nextTick(function() {\n        callback(null, input);\n      });\n    }\n    jsonld.expand(input, options, callback);\n  };\n\n  // expand input then do compaction\n  expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before compaction.',\n        'jsonld.CompactError', {cause: err}));\n    }\n\n    // process context\n    var activeCtx = _getInitialContext(options);\n    jsonld.processContext(activeCtx, ctx, options, function(err, activeCtx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not process context before compaction.',\n          'jsonld.CompactError', {cause: err}));\n      }\n\n      var compacted;\n      try {\n        // do compaction\n        compacted = new Processor().compact(activeCtx, null, expanded, options);\n      } catch(ex) {\n        return callback(ex);\n      }\n\n      cleanup(null, compacted, activeCtx, options);\n    });\n  });\n\n  // performs clean up after compaction\n  function cleanup(err, compacted, activeCtx, options) {\n    if(err) {\n      return callback(err);\n    }\n\n    if(options.compactArrays && !options.graph && _isArray(compacted)) {\n      if(compacted.length === 1) {\n        // simplify to a single item\n        compacted = compacted[0];\n      } else if(compacted.length === 0) {\n        // simplify to an empty object\n        compacted = {};\n      }\n    } else if(options.graph && _isObject(compacted)) {\n      // always use array if graph option is on\n      compacted = [compacted];\n    }\n\n    // follow @context key\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // build output context\n    ctx = _clone(ctx);\n    if(!_isArray(ctx)) {\n      ctx = [ctx];\n    }\n    // remove empty contexts\n    var tmp = ctx;\n    ctx = [];\n    for(var i = 0; i < tmp.length; ++i) {\n      if(!_isObject(tmp[i]) || Object.keys(tmp[i]).length > 0) {\n        ctx.push(tmp[i]);\n      }\n    }\n\n    // remove array if only one context\n    var hasContext = (ctx.length > 0);\n    if(ctx.length === 1) {\n      ctx = ctx[0];\n    }\n\n    // add context and/or @graph\n    if(_isArray(compacted)) {\n      // use '@graph' keyword\n      var kwgraph = _compactIri(activeCtx, '@graph');\n      var graph = compacted;\n      compacted = {};\n      if(hasContext) {\n        compacted['@context'] = ctx;\n      }\n      compacted[kwgraph] = graph;\n    } else if(_isObject(compacted) && hasContext) {\n      // reorder keys so @context is first\n      var graph = compacted;\n      compacted = {'@context': ctx};\n      for(var key in graph) {\n        compacted[key] = graph[key];\n      }\n    }\n\n    callback(null, compacted, activeCtx);\n  }\n};\n\n/**\n * Performs JSON-LD expansion.\n *\n * @param input the JSON-LD input to expand.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [keepFreeFloatingNodes] true to keep free-floating nodes,\n *            false not to, defaults to false.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, expanded) called once the operation completes.\n */\njsonld.expand = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not expand, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('keepFreeFloatingNodes' in options)) {\n    options.keepFreeFloatingNodes = false;\n  }\n\n  jsonld.nextTick(function() {\n    // if input is a string, attempt to dereference remote document\n    if(typeof input === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        expand(remoteDoc);\n      };\n      var promise = options.documentLoader(input, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    expand({contextUrl: null, documentUrl: null, document: input});\n  });\n\n  function expand(remoteDoc) {\n    // set default base\n    if(!('base' in options)) {\n      options.base = remoteDoc.documentUrl || '';\n    }\n    // build meta-object and retrieve all @context URLs\n    var input = {\n      document: _clone(remoteDoc.document),\n      remoteContext: {'@context': remoteDoc.contextUrl}\n    };\n    if('expandContext' in options) {\n      var expandContext = _clone(options.expandContext);\n      if(typeof expandContext === 'object' && '@context' in expandContext) {\n        input.expandContext = expandContext;\n      } else {\n        input.expandContext = {'@context': expandContext};\n      }\n    }\n    _retrieveContextUrls(input, options, function(err, input) {\n      if(err) {\n        return callback(err);\n      }\n\n      var expanded;\n      try {\n        var processor = new Processor();\n        var activeCtx = _getInitialContext(options);\n        var document = input.document;\n        var remoteContext = input.remoteContext['@context'];\n\n        // process optional expandContext\n        if(input.expandContext) {\n          activeCtx = processor.processContext(\n            activeCtx, input.expandContext['@context'], options);\n        }\n\n        // process remote context from HTTP Link Header\n        if(remoteContext) {\n          activeCtx = processor.processContext(\n            activeCtx, remoteContext, options);\n        }\n\n        // expand document\n        expanded = processor.expand(\n          activeCtx, null, document, options, false);\n\n        // optimize away @graph with no other properties\n        if(_isObject(expanded) && ('@graph' in expanded) &&\n          Object.keys(expanded).length === 1) {\n          expanded = expanded['@graph'];\n        } else if(expanded === null) {\n          expanded = [];\n        }\n\n        // normalize to an array\n        if(!_isArray(expanded)) {\n          expanded = [expanded];\n        }\n      } catch(ex) {\n        return callback(ex);\n      }\n      callback(null, expanded);\n    });\n  }\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the JSON-LD to flatten.\n * @param ctx the context to use to compact the flattened output, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, flattened) called once the operation completes.\n */\njsonld.flatten = function(input, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not flatten, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // do flattening\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output.',\n          'jsonld.FlattenError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the JSON-LD input to frame.\n * @param frame the JSON-LD frame to use.\n * @param [options] the framing options.\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [embed] default @embed flag: '@last', '@always', '@never', '@link'\n *            (default: '@last').\n *          [explicit] default @explicit flag (default: false).\n *          [requireAll] default @requireAll flag (default: true).\n *          [omitDefault] default @omitDefault flag (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, framed) called once the operation completes.\n */\njsonld.frame = function(input, frame, options, callback) {\n  if(arguments.length < 2) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not frame, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n  if(!('embed' in options)) {\n    options.embed = '@last';\n  }\n  options.explicit = options.explicit || false;\n  if(!('requireAll' in options)) {\n    options.requireAll = true;\n  }\n  options.omitDefault = options.omitDefault || false;\n\n  jsonld.nextTick(function() {\n    // if frame is a string, attempt to dereference remote document\n    if(typeof frame === 'string') {\n      var done = function(err, remoteDoc) {\n        if(err) {\n          return callback(err);\n        }\n        try {\n          if(!remoteDoc.document) {\n            throw new JsonLdError(\n              'No remote document found at the given URL.',\n              'jsonld.NullRemoteDocument');\n          }\n          if(typeof remoteDoc.document === 'string') {\n            remoteDoc.document = JSON.parse(remoteDoc.document);\n          }\n        } catch(ex) {\n          return callback(new JsonLdError(\n            'Could not retrieve a JSON-LD document from the URL. URL ' +\n            'dereferencing not implemented.', 'jsonld.LoadDocumentError', {\n              code: 'loading document failed',\n              cause: ex,\n              remoteDoc: remoteDoc\n          }));\n        }\n        doFrame(remoteDoc);\n      };\n      var promise = options.documentLoader(frame, done);\n      if(promise && 'then' in promise) {\n        promise.then(done.bind(null, null), done);\n      }\n      return;\n    }\n    // nothing to load\n    doFrame({contextUrl: null, documentUrl: null, document: frame});\n  });\n\n  function doFrame(remoteFrame) {\n    // preserve frame context and add any Link header context\n    var frame = remoteFrame.document;\n    var ctx;\n    if(frame) {\n      ctx = frame['@context'];\n      if(remoteFrame.contextUrl) {\n        if(!ctx) {\n          ctx = remoteFrame.contextUrl;\n        } else if(_isArray(ctx)) {\n          ctx.push(remoteFrame.contextUrl);\n        } else {\n          ctx = [ctx, remoteFrame.contextUrl];\n        }\n        frame['@context'] = ctx;\n      } else {\n        ctx = ctx || {};\n      }\n    } else {\n      ctx = {};\n    }\n\n    // expand input\n    jsonld.expand(input, options, function(err, expanded) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not expand input before framing.',\n          'jsonld.FrameError', {cause: err}));\n      }\n\n      // expand frame\n      var opts = _clone(options);\n      opts.isFrame = true;\n      opts.keepFreeFloatingNodes = true;\n      jsonld.expand(frame, opts, function(err, expandedFrame) {\n        if(err) {\n          return callback(new JsonLdError(\n            'Could not expand frame before framing.',\n            'jsonld.FrameError', {cause: err}));\n        }\n\n        var framed;\n        try {\n          // do framing\n          framed = new Processor().frame(expanded, expandedFrame, opts);\n        } catch(ex) {\n          return callback(ex);\n        }\n\n        // compact result (force @graph option to true, skip expansion,\n        // check for linked embeds)\n        opts.graph = true;\n        opts.skipExpansion = true;\n        opts.link = {};\n        jsonld.compact(framed, ctx, opts, function(err, compacted, ctx) {\n          if(err) {\n            return callback(new JsonLdError(\n              'Could not compact framed output.',\n              'jsonld.FrameError', {cause: err}));\n          }\n          // get graph alias\n          var graph = _compactIri(ctx, '@graph');\n          // remove @preserve from results\n          opts.link = {};\n          compacted[graph] = _removePreserve(ctx, compacted[graph], opts);\n          callback(null, compacted);\n        });\n      });\n    });\n  }\n};\n\n/**\n * **Experimental**\n *\n * Links a JSON-LD document's nodes in memory.\n *\n * @param input the JSON-LD document to link.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.link = function(input, ctx, options, callback) {\n  // API matches running frame with a wildcard frame and embed: '@link'\n  // get arguments\n  var frame = {};\n  if(ctx) {\n    frame['@context'] = ctx;\n  }\n  frame['@embed'] = '@link';\n  jsonld.frame(input, frame, options, callback);\n};\n\n/**\n * **Deprecated**\n *\n * Performs JSON-LD objectification.\n *\n * @param input the JSON-LD document to objectify.\n * @param ctx the JSON-LD context to apply.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, linked) called once the operation completes.\n */\njsonld.objectify = function(input, ctx, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before linking.',\n        'jsonld.LinkError', {cause: err}));\n    }\n\n    var flattened;\n    try {\n      // flatten the graph\n      flattened = new Processor().flatten(_input);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted, ctx) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact flattened output before linking.',\n          'jsonld.LinkError', {cause: err}));\n      }\n      // get graph alias\n      var graph = _compactIri(ctx, '@graph');\n      var top = compacted[graph][0];\n\n      var recurse = function(subject) {\n        // can't replace just a string\n        if(!_isObject(subject) && !_isArray(subject)) {\n          return;\n        }\n\n        // bottom out recursion on re-visit\n        if(_isObject(subject)) {\n          if(recurse.visited[subject['@id']]) {\n            return;\n          }\n          recurse.visited[subject['@id']] = true;\n        }\n\n        // each array element *or* object key\n        for(var k in subject) {\n          var obj = subject[k];\n          var isid = (jsonld.getContextValue(ctx, k, '@type') === '@id');\n\n          // can't replace a non-object or non-array unless it's an @id\n          if(!_isArray(obj) && !_isObject(obj) && !isid) {\n            continue;\n          }\n\n          if(_isString(obj) && isid) {\n            subject[k] = obj = top[obj];\n            recurse(obj);\n          } else if(_isArray(obj)) {\n            for(var i = 0; i < obj.length; ++i) {\n              if(_isString(obj[i]) && isid) {\n                obj[i] = top[obj[i]];\n              } else if(_isObject(obj[i]) && '@id' in obj[i]) {\n                obj[i] = top[obj[i]['@id']];\n              }\n              recurse(obj[i]);\n            }\n          } else if(_isObject(obj)) {\n            var sid = obj['@id'];\n            subject[k] = obj = top[sid];\n            recurse(obj);\n          }\n        }\n      };\n      recurse.visited = {};\n      recurse(top);\n\n      compacted.of_type = {};\n      for(var s in top) {\n        if(!('@type' in top[s])) {\n          continue;\n        }\n        var types = top[s]['@type'];\n        if(!_isArray(types)) {\n          types = [types];\n        }\n        for(var t = 0; t < types.length; ++t) {\n          if(!(types[t] in compacted.of_type)) {\n            compacted.of_type[types[t]] = [];\n          }\n          compacted.of_type[types[t]].push(top[s]);\n        }\n      }\n      callback(null, compacted);\n    });\n  });\n};\n\n/**\n * Performs RDF dataset normalization on the given input. The input is JSON-LD\n * unless the 'inputFormat' option is used. The output is an RDF dataset\n * unless the 'format' option is used.\n *\n * @param input the input to normalize as JSON-LD or as a format specified by\n *          the 'inputFormat' option.\n * @param [options] the options to use:\n *          [algorithm] the normalization algorithm to use, `URDNA2015` or\n *            `URGNA2012` (default: `URGNA2012`).\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [inputFormat] the format if input is not JSON-LD:\n *            'application/nquads' for N-Quads.\n *          [format] the format if output is a string:\n *            'application/nquads' for N-Quads.\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, normalized) called once the operation completes.\n */\njsonld.normalize = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not normalize, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('algorithm' in options)) {\n    options.algorithm = 'URGNA2012';\n  }\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  if('inputFormat' in options) {\n    if(options.inputFormat !== 'application/nquads') {\n      return callback(new JsonLdError(\n        'Unknown normalization input format.',\n        'jsonld.NormalizeError'));\n    }\n    var parsedInput = _parseNQuads(input);\n    // do normalization\n    new Processor().normalize(parsedInput, options, callback);\n  } else {\n    // convert to RDF dataset then do normalization\n    var opts = _clone(options);\n    delete opts.format;\n    opts.produceGeneralizedRdf = false;\n    jsonld.toRDF(input, opts, function(err, dataset) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not convert input to RDF dataset before normalization.',\n          'jsonld.NormalizeError', {cause: err}));\n      }\n      // do normalization\n      new Processor().normalize(dataset, options, callback);\n    });\n  }\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset a serialized string of RDF in a format specified by the\n *          format option or an RDF dataset to convert.\n * @param [options] the options to use:\n *          [format] the format if dataset param must first be parsed:\n *            'application/nquads' for N-Quads (default).\n *          [rdfParser] a custom RDF-parser to use to parse the dataset.\n *          [useRdfType] true to use rdf:type, false to use @type\n *            (default: false).\n *          [useNativeTypes] true to convert XSD types into native types\n *            (boolean, integer, double), false not to (default: false).\n * @param callback(err, output) called once the operation completes.\n */\njsonld.fromRDF = function(dataset, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert from RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('useRdfType' in options)) {\n    options.useRdfType = false;\n  }\n  if(!('useNativeTypes' in options)) {\n    options.useNativeTypes = false;\n  }\n\n  if(!('format' in options) && _isString(dataset)) {\n    // set default format to nquads\n    if(!('format' in options)) {\n      options.format = 'application/nquads';\n    }\n  }\n\n  jsonld.nextTick(function() {\n    // handle special format\n    var rdfParser;\n    if(options.format) {\n      // check supported formats\n      rdfParser = options.rdfParser || _rdfParsers[options.format];\n      if(!rdfParser) {\n        return callback(new JsonLdError(\n          'Unknown input format.',\n          'jsonld.UnknownFormat', {format: options.format}));\n      }\n    } else {\n      // no-op parser, assume dataset already parsed\n      rdfParser = function() {\n        return dataset;\n      };\n    }\n\n    var callbackCalled = false;\n    try {\n      // rdf parser may be async or sync, always pass callback\n      dataset = rdfParser(dataset, function(err, dataset) {\n        callbackCalled = true;\n        if(err) {\n          return callback(err);\n        }\n        fromRDF(dataset, options, callback);\n      });\n    } catch(e) {\n      if(!callbackCalled) {\n        return callback(e);\n      }\n      throw e;\n    }\n    // handle synchronous or promise-based parser\n    if(dataset) {\n      // if dataset is actually a promise\n      if('then' in dataset) {\n        return dataset.then(function(dataset) {\n          fromRDF(dataset, options, callback);\n        }, callback);\n      }\n      // parser is synchronous\n      fromRDF(dataset, options, callback);\n    }\n\n    function fromRDF(dataset, options, callback) {\n      // convert from RDF\n      new Processor().fromRDF(dataset, options, callback);\n    }\n  });\n};\n\n/**\n * Outputs the RDF dataset found in the given JSON-LD object.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [format] the format to use to output a string:\n *            'application/nquads' for N-Quads.\n *          [produceGeneralizedRdf] true to output generalized RDF, false\n *            to produce only standard RDF (default: false).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, dataset) called once the operation completes.\n */\njsonld.toRDF = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not convert to RDF, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, expanded) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before serialization to RDF.',\n        'jsonld.RdfError', {cause: err}));\n    }\n\n    var dataset;\n    try {\n      // output RDF dataset\n      dataset = Processor.prototype.toRDF(expanded, options);\n      if(options.format) {\n        if(options.format === 'application/nquads') {\n          return callback(null, _toNQuads(dataset));\n        }\n        throw new JsonLdError(\n          'Unknown output format.',\n          'jsonld.UnknownFormat', {format: options.format});\n      }\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, dataset);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Recursively flattens the nodes in the given JSON-LD input into a map of\n * node ID => node.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated)\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, nodeMap) called once the operation completes.\n */\njsonld.createNodeMap = function(input, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not create node map, too few arguments.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = (typeof input === 'string') ? input : '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // expand input\n  jsonld.expand(input, options, function(err, _input) {\n    if(err) {\n      return callback(new JsonLdError(\n        'Could not expand input before creating node map.',\n        'jsonld.CreateNodeMapError', {cause: err}));\n    }\n\n    var nodeMap;\n    try {\n      nodeMap = new Processor().createNodeMap(_input, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    callback(null, nodeMap);\n  });\n};\n\n/**\n * **Experimental**\n *\n * Merges two or more JSON-LD documents into a single flattened document.\n *\n * @param docs the JSON-LD documents to merge together.\n * @param ctx the context to use to compact the merged result, or null.\n * @param [options] the options to use:\n *          [base] the base IRI to use.\n *          [expandContext] a context to expand with.\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n *          [mergeNodes] true to merge properties for nodes with the same ID,\n *            false to ignore new properties for nodes with the same ID once\n *            the ID has been defined; note that this may not prevent merging\n *            new properties where a node is in the `object` position\n *            (default: true).\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, merged) called once the operation completes.\n */\njsonld.merge = function(docs, ctx, options, callback) {\n  if(arguments.length < 1) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, too few arguments.'));\n    });\n  }\n  if(!_isArray(docs)) {\n    return jsonld.nextTick(function() {\n      callback(new TypeError('Could not merge, \"docs\" must be an array.'));\n    });\n  }\n\n  // get arguments\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  } else if(typeof ctx === 'function') {\n    callback = ctx;\n    ctx = null;\n    options = {};\n  }\n  options = options || {};\n\n  // expand all documents\n  var expanded = [];\n  var error = null;\n  var count = docs.length;\n  for(var i = 0; i < docs.length; ++i) {\n    var opts = {};\n    for(var key in options) {\n      opts[key] = options[key];\n    }\n    jsonld.expand(docs[i], opts, expandComplete);\n  }\n\n  function expandComplete(err, _input) {\n    if(error) {\n      return;\n    }\n    if(err) {\n      error = err;\n      return callback(new JsonLdError(\n        'Could not expand input before flattening.',\n        'jsonld.FlattenError', {cause: err}));\n    }\n    expanded.push(_input);\n    if(--count === 0) {\n      merge(expanded);\n    }\n  }\n\n  function merge(expanded) {\n    var mergeNodes = true;\n    if('mergeNodes' in options) {\n      mergeNodes = options.mergeNodes;\n    }\n\n    var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n    var graphs = {'@default': {}};\n\n    var defaultGraph;\n    try {\n      for(var i = 0; i < expanded.length; ++i) {\n        // uniquely relabel blank nodes\n        var doc = expanded[i];\n        doc = jsonld.relabelBlankNodes(doc, {\n          issuer: new IdentifierIssuer('_:b' + i + '-')\n        });\n\n        // add nodes to the shared node map graphs if merging nodes, to a\n        // separate graph set if not\n        var _graphs = (mergeNodes || i === 0) ? graphs : {'@default': {}};\n        _createNodeMap(doc, _graphs, '@default', issuer);\n\n        if(_graphs !== graphs) {\n          // merge document graphs but don't merge existing nodes\n          for(var graphName in _graphs) {\n            var _nodeMap = _graphs[graphName];\n            if(!(graphName in graphs)) {\n              graphs[graphName] = _nodeMap;\n              continue;\n            }\n            var nodeMap = graphs[graphName];\n            for(var key in _nodeMap) {\n              if(!(key in nodeMap)) {\n                nodeMap[key] = _nodeMap[key];\n              }\n            }\n          }\n        }\n      }\n\n      // add all non-default graphs to default graph\n      defaultGraph = _mergeNodeMaps(graphs);\n    } catch(ex) {\n      return callback(ex);\n    }\n\n    // produce flattened output\n    var flattened = [];\n    var keys = Object.keys(defaultGraph).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var node = defaultGraph[keys[ki]];\n      // only add full subjects to top-level\n      if(!_isSubjectReference(node)) {\n        flattened.push(node);\n      }\n    }\n\n    if(ctx === null) {\n      return callback(null, flattened);\n    }\n\n    // compact result (force @graph option to true, skip expansion)\n    options.graph = true;\n    options.skipExpansion = true;\n    jsonld.compact(flattened, ctx, options, function(err, compacted) {\n      if(err) {\n        return callback(new JsonLdError(\n          'Could not compact merged output.',\n          'jsonld.MergeError', {cause: err}));\n      }\n      callback(null, compacted);\n    });\n  }\n};\n\n/**\n * Relabels all blank nodes in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n */\njsonld.relabelBlankNodes = function(input, options) {\n  options = options || {};\n  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n  return _labelBlankNodes(issuer, input);\n};\n\n/**\n * Prepends a base IRI to the given relative IRI.\n *\n * @param base the base IRI.\n * @param iri the relative IRI.\n *\n * @return the absolute IRI.\n */\njsonld.prependBase = function(base, iri) {\n  return _prependBase(base, iri);\n};\n\n/**\n * The default document loader for external documents. If the environment\n * is node.js, a callback-continuation-style document loader is used; otherwise,\n * a promises-style document loader is used.\n *\n * @param url the URL to load.\n * @param callback(err, remoteDoc) called once the operation completes,\n *          if using a non-promises API.\n *\n * @return a promise, if using a promises API.\n */\njsonld.documentLoader = function(url, callback) {\n  var err = new JsonLdError(\n    'Could not retrieve a JSON-LD document from the URL. URL ' +\n    'dereferencing not implemented.', 'jsonld.LoadDocumentError',\n    {code: 'loading document failed'});\n  if(_nodejs) {\n    return callback(err, {contextUrl: null, documentUrl: url, document: null});\n  }\n  return jsonld.promisify(function(callback) {\n    callback(err);\n  });\n};\n\n/**\n * Deprecated default document loader. Use or override jsonld.documentLoader\n * instead.\n */\njsonld.loadDocument = function(url, callback) {\n  var promise = jsonld.documentLoader(url, callback);\n  if(promise && 'then' in promise) {\n    promise.then(callback.bind(null, null), callback);\n  }\n};\n\n/* Promises API */\n\n/**\n * Creates a new promises API object.\n *\n * @param [options] the options to use:\n *          [api] an object to attach the API to.\n *          [version] 'json-ld-1.0' to output a standard JSON-LD 1.0 promises\n *            API, 'jsonld.js' to output the same with augmented proprietary\n *            methods (default: 'jsonld.js')\n *\n * @return the promises API object.\n */\njsonld.promises = function(options) {\n  options = options || {};\n  var slice = Array.prototype.slice;\n  var promisify = jsonld.promisify;\n\n  // handle 'api' option as version, set defaults\n  var api = options.api || {};\n  var version = options.version || 'jsonld.js';\n  if(typeof options.api === 'string') {\n    if(!options.version) {\n      version = options.api;\n    }\n    api = {};\n  }\n\n  // The Web IDL test harness will check the number of parameters defined in\n  // the functions below. The number of parameters must exactly match the\n  // required (non-optional) parameters of the JsonLdProcessor interface as\n  // defined here:\n  // https://www.w3.org/TR/json-ld-api/#the-jsonldprocessor-interface\n\n  api.expand = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not expand, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.expand].concat(slice.call(arguments)));\n  };\n  api.compact = function(input, ctx) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not compact, too few arguments.');\n    }\n    var compact = function(input, ctx, options, callback) {\n      if(typeof options === 'function') {\n        callback = options;\n        options = {};\n      }\n      options = options || {};\n      // ensure only one value is returned in callback\n      jsonld.compact(input, ctx, options, function(err, compacted) {\n        callback(err, compacted);\n      });\n    };\n    return promisify.apply(null, [compact].concat(slice.call(arguments)));\n  };\n  api.flatten = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not flatten, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.flatten].concat(slice.call(arguments)));\n  };\n  api.frame = function(input, frame) {\n    if(arguments.length < 2) {\n      throw new TypeError('Could not frame, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.frame].concat(slice.call(arguments)));\n  };\n  api.fromRDF = function(dataset) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert from RDF, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.fromRDF].concat(slice.call(arguments)));\n  };\n  api.toRDF = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not convert to RDF, too few arguments.');\n    }\n    return promisify.apply(null, [jsonld.toRDF].concat(slice.call(arguments)));\n  };\n  api.normalize = function(input) {\n    if(arguments.length < 1) {\n      throw new TypeError('Could not normalize, too few arguments.');\n    }\n    return promisify.apply(\n      null, [jsonld.normalize].concat(slice.call(arguments)));\n  };\n\n  if(version === 'jsonld.js') {\n    api.link = function(input, ctx) {\n      if(arguments.length < 2) {\n        throw new TypeError('Could not link, too few arguments.');\n      }\n      return promisify.apply(\n        null, [jsonld.link].concat(slice.call(arguments)));\n    };\n    api.objectify = function(input) {\n      return promisify.apply(\n        null, [jsonld.objectify].concat(slice.call(arguments)));\n    };\n    api.createNodeMap = function(input) {\n      return promisify.apply(\n        null, [jsonld.createNodeMap].concat(slice.call(arguments)));\n    };\n    api.merge = function(input) {\n      return promisify.apply(\n        null, [jsonld.merge].concat(slice.call(arguments)));\n    };\n  }\n\n  try {\n    jsonld.Promise = global.Promise || require('es6-promise').Promise;\n  } catch(e) {\n    var f = function() {\n      throw new Error('Unable to find a Promise implementation.');\n    };\n    for(var method in api) {\n      api[method] = f;\n    }\n  }\n\n  return api;\n};\n\n/**\n * Converts a node.js async op into a promise w/boxed resolved value(s).\n *\n * @param op the operation to convert.\n *\n * @return the promise.\n */\njsonld.promisify = function(op) {\n  if(!jsonld.Promise) {\n    try {\n      jsonld.Promise = global.Promise || require('es6-promise').Promise;\n    } catch(e) {\n      throw new Error('Unable to find a Promise implementation.');\n    }\n  }\n  var args = Array.prototype.slice.call(arguments, 1);\n  return new jsonld.Promise(function(resolve, reject) {\n    op.apply(null, args.concat(function(err, value) {\n      if(!err) {\n        resolve(value);\n      } else {\n        reject(err);\n      }\n    }));\n  });\n};\n\n// extend jsonld.promises w/jsonld.js methods\njsonld.promises({api: jsonld.promises});\n\n/* WebIDL API */\n\nfunction JsonLdProcessor() {}\nJsonLdProcessor.prototype = jsonld.promises({version: 'json-ld-1.0'});\nJsonLdProcessor.prototype.toString = function() {\n  if(this instanceof JsonLdProcessor) {\n    return '[object JsonLdProcessor]';\n  }\n  return '[object JsonLdProcessorPrototype]';\n};\njsonld.JsonLdProcessor = JsonLdProcessor;\n\n// IE8 has Object.defineProperty but it only\n// works on DOM nodes -- so feature detection\n// requires try/catch :-(\nvar canDefineProperty = !!Object.defineProperty;\nif(canDefineProperty) {\n  try {\n    Object.defineProperty({}, 'x', {});\n  } catch(e) {\n    canDefineProperty = false;\n  }\n}\n\nif(canDefineProperty) {\n  Object.defineProperty(JsonLdProcessor, 'prototype', {\n    writable: false,\n    enumerable: false\n  });\n  Object.defineProperty(JsonLdProcessor.prototype, 'constructor', {\n    writable: true,\n    enumerable: false,\n    configurable: true,\n    value: JsonLdProcessor\n  });\n}\n\n// setup browser global JsonLdProcessor\nif(_browser && typeof global.JsonLdProcessor === 'undefined') {\n  if(canDefineProperty) {\n    Object.defineProperty(global, 'JsonLdProcessor', {\n      writable: true,\n      enumerable: false,\n      configurable: true,\n      value: JsonLdProcessor\n    });\n  } else {\n    global.JsonLdProcessor = JsonLdProcessor;\n  }\n}\n\n/* Utility API */\n\n// define setImmediate and nextTick\n//// nextTick implementation with browser-compatible fallback ////\n// from https://github.com/caolan/async/blob/master/lib/async.js\n\n// capture the global reference to guard against fakeTimer mocks\nvar _setImmediate = typeof setImmediate === 'function' && setImmediate;\n\nvar _delay = _setImmediate ? function(fn) {\n  // not a direct alias (for IE10 compatibility)\n  _setImmediate(fn);\n} : function(fn) {\n  setTimeout(fn, 0);\n};\n\nif(typeof process === 'object' && typeof process.nextTick === 'function') {\n  jsonld.nextTick = process.nextTick;\n} else {\n  jsonld.nextTick = _delay;\n}\njsonld.setImmediate = _setImmediate ? _delay : jsonld.nextTick;\n\n/**\n * Parses a link header. The results will be key'd by the value of \"rel\".\n *\n * Link: <http://json-ld.org/contexts/person.jsonld>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"\n *\n * Parses as: {\n *   'http://www.w3.org/ns/json-ld#context': {\n *     target: http://json-ld.org/contexts/person.jsonld,\n *     type: 'application/ld+json'\n *   }\n * }\n *\n * If there is more than one \"rel\" with the same IRI, then entries in the\n * resulting map for that \"rel\" will be arrays.\n *\n * @param header the link header to parse.\n */\njsonld.parseLinkHeader = function(header) {\n  var rval = {};\n  // split on unbracketed/unquoted commas\n  var entries = header.match(/(?:<[^>]*?>|\"[^\"]*?\"|[^,])+/g);\n  var rLinkHeader = /\\s*<([^>]*?)>\\s*(?:;\\s*(.*))?/;\n  for(var i = 0; i < entries.length; ++i) {\n    var match = entries[i].match(rLinkHeader);\n    if(!match) {\n      continue;\n    }\n    var result = {target: match[1]};\n    var params = match[2];\n    var rParams = /(.*?)=(?:(?:\"([^\"]*?)\")|([^\"]*?))\\s*(?:(?:;\\s*)|$)/g;\n    while(match = rParams.exec(params)) {\n      result[match[1]] = (match[2] === undefined) ? match[3] : match[2];\n    }\n    var rel = result['rel'] || '';\n    if(_isArray(rval[rel])) {\n      rval[rel].push(result);\n    } else if(rel in rval) {\n      rval[rel] = [rval[rel], result];\n    } else {\n      rval[rel] = result;\n    }\n  }\n  return rval;\n};\n\n/**\n * Creates a simple queue for requesting documents.\n */\njsonld.RequestQueue = function() {\n  this._requests = {};\n};\njsonld.RequestQueue.prototype.wrapLoader = function(loader) {\n  this._loader = loader;\n  this._usePromise = (loader.length === 1);\n  return this.add.bind(this);\n};\njsonld.RequestQueue.prototype.add = function(url, callback) {\n  var self = this;\n\n  // callback must be given if not using promises\n  if(!callback && !self._usePromise) {\n    throw new Error('callback must be specified.');\n  }\n\n  // Promise-based API\n  if(self._usePromise) {\n    return new jsonld.Promise(function(resolve, reject) {\n      var load = self._requests[url];\n      if(!load) {\n        // load URL then remove from queue\n        load = self._requests[url] = self._loader(url)\n          .then(function(remoteDoc) {\n            delete self._requests[url];\n            return remoteDoc;\n          }).catch(function(err) {\n            delete self._requests[url];\n            throw err;\n          });\n      }\n      // resolve/reject promise once URL has been loaded\n      load.then(function(remoteDoc) {\n        resolve(remoteDoc);\n      }).catch(function(err) {\n        reject(err);\n      });\n    });\n  }\n\n  // callback-based API\n  if(url in self._requests) {\n    self._requests[url].push(callback);\n  } else {\n    self._requests[url] = [callback];\n    self._loader(url, function(err, remoteDoc) {\n      var callbacks = self._requests[url];\n      delete self._requests[url];\n      for(var i = 0; i < callbacks.length; ++i) {\n        callbacks[i](err, remoteDoc);\n      }\n    });\n  }\n};\n\n/**\n * Creates a simple document cache that retains documents for a short\n * period of time.\n *\n * FIXME: Implement simple HTTP caching instead.\n *\n * @param size the maximum size of the cache.\n */\njsonld.DocumentCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 50;\n  this.expires = 30 * 1000;\n};\njsonld.DocumentCache.prototype.get = function(url) {\n  if(url in this.cache) {\n    var entry = this.cache[url];\n    if(entry.expires >= +new Date()) {\n      return entry.ctx;\n    }\n    delete this.cache[url];\n    this.order.splice(this.order.indexOf(url), 1);\n  }\n  return null;\n};\njsonld.DocumentCache.prototype.set = function(url, ctx) {\n  if(this.order.length === this.size) {\n    delete this.cache[this.order.shift()];\n  }\n  this.order.push(url);\n  this.cache[url] = {ctx: ctx, expires: (+new Date() + this.expires)};\n};\n\n/**\n * Creates an active context cache.\n *\n * @param size the maximum size of the cache.\n */\njsonld.ActiveContextCache = function(size) {\n  this.order = [];\n  this.cache = {};\n  this.size = size || 100;\n};\njsonld.ActiveContextCache.prototype.get = function(activeCtx, localCtx) {\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  var level1 = this.cache[key1];\n  if(level1 && key2 in level1) {\n    return level1[key2];\n  }\n  return null;\n};\njsonld.ActiveContextCache.prototype.set = function(\n  activeCtx, localCtx, result) {\n  if(this.order.length === this.size) {\n    var entry = this.order.shift();\n    delete this.cache[entry.activeCtx][entry.localCtx];\n  }\n  var key1 = JSON.stringify(activeCtx);\n  var key2 = JSON.stringify(localCtx);\n  this.order.push({activeCtx: key1, localCtx: key2});\n  if(!(key1 in this.cache)) {\n    this.cache[key1] = {};\n  }\n  this.cache[key1][key2] = _clone(result);\n};\n\n/**\n * Default JSON-LD cache.\n */\njsonld.cache = {\n  activeCtx: new jsonld.ActiveContextCache()\n};\n\n/**\n * Document loaders.\n */\njsonld.documentLoaders = {};\n\n/**\n * Creates a built-in jquery document loader.\n *\n * @param $ the jquery instance to use.\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *\n * @return the jquery document loader.\n */\njsonld.documentLoaders.jquery = function($, options) {\n  options = options || {};\n  var queue = new jsonld.RequestQueue();\n\n  // use option or, by default, use Promise when its defined\n  var usePromise = ('usePromise' in options ?\n    options.usePromise : (typeof Promise !== 'undefined'));\n  if(usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loader, url);\n    });\n  }\n  return queue.wrapLoader(loader);\n\n  function loader(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    $.ajax({\n      url: url,\n      accepts: {\n        json: 'application/ld+json, application/json'\n      },\n      // ensure Accept header is very specific for JSON-LD/JSON\n      headers: {\n        'Accept': 'application/ld+json, application/json'\n      },\n      dataType: 'json',\n      crossDomain: true,\n      success: function(data, textStatus, jqXHR) {\n        var doc = {contextUrl: null, documentUrl: url, document: data};\n\n        // handle Link Header\n        var contentType = jqXHR.getResponseHeader('Content-Type');\n        var linkHeader = jqXHR.getResponseHeader('Link');\n        if(linkHeader && contentType !== 'application/ld+json') {\n          // only 1 related link header permitted\n          linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n          if(_isArray(linkHeader)) {\n            return callback(new JsonLdError(\n              'URL could not be dereferenced, it has more than one ' +\n              'associated HTTP Link Header.',\n              'jsonld.InvalidUrl',\n              {code: 'multiple context link headers', url: url}), doc);\n          }\n          if(linkHeader) {\n            doc.contextUrl = linkHeader.target;\n          }\n        }\n\n        callback(null, doc);\n      },\n      error: function(jqXHR, textStatus, err) {\n        callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}),\n          {contextUrl: null, documentUrl: url, document: null});\n      }\n    });\n  }\n};\n\n/**\n * Creates a built-in node document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          strictSSL: true to require SSL certificates to be valid,\n *            false not to (default: true).\n *          maxRedirects: the maximum number of redirects to permit, none by\n *            default.\n *          request: the object which will make the request, default is\n *            provided by `https://www.npmjs.com/package/request`.\n *          headers: an array of headers which will be passed as request\n *            headers for the requested document. Accept is not allowed.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; false by default.\n *\n * @return the node document loader.\n */\njsonld.documentLoaders.node = function(options) {\n  options = options || {};\n  var strictSSL = ('strictSSL' in options) ? options.strictSSL : true;\n  var maxRedirects = ('maxRedirects' in options) ? options.maxRedirects : -1;\n  var request = ('request' in options) ? options.request : require('request');\n  var acceptHeader = 'application/ld+json, application/json';\n  var http = require('http');\n  // TODO: disable cache until HTTP caching implemented\n  //var cache = new jsonld.DocumentCache();\n\n  var queue = new jsonld.RequestQueue();\n  if(options.usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loadDocument, url, []);\n    });\n  }\n  var headers = options.headers || {};\n  if('Accept' in headers || 'accept' in headers) {\n    throw new RangeError(\n      'Accept header may not be specified as an option; only \"' +\n      acceptHeader + '\" is supported.');\n  }\n  return queue.wrapLoader(function(url, callback) {\n    loadDocument(url, [], callback);\n  });\n\n  function loadDocument(url, redirects, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    // TODO: disable cache until HTTP caching implemented\n    var doc = null;//cache.get(url);\n    if(doc !== null) {\n      return callback(null, doc);\n    }\n    var headers = {'Accept': acceptHeader};\n    for(var k in options.headers) { headers[k] = options.headers[k]; }\n    request({\n      url: url,\n      headers: headers,\n      strictSSL: strictSSL,\n      followRedirect: false\n    }, handleResponse);\n\n    function handleResponse(err, res, body) {\n      doc = {contextUrl: null, documentUrl: url, document: body || null};\n\n      // handle error\n      if(err) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced, an error occurred.',\n          'jsonld.LoadDocumentError',\n          {code: 'loading document failed', url: url, cause: err}), doc);\n      }\n      var statusText = http.STATUS_CODES[res.statusCode];\n      if(res.statusCode >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + statusText,\n          'jsonld.InvalidUrl', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: res.statusCode\n          }), doc);\n      }\n\n      // handle Link Header\n      if(res.headers.link &&\n        res.headers['content-type'] !== 'application/ld+json') {\n        // only 1 related link header permitted\n        var linkHeader = jsonld.parseLinkHeader(\n          res.headers.link)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one associated ' +\n            'HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      // handle redirect\n      if(res.statusCode >= 300 && res.statusCode < 400 &&\n        res.headers.location) {\n        if(redirects.length === maxRedirects) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; there were too many redirects.',\n            'jsonld.TooManyRedirects', {\n              code: 'loading document failed',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        if(redirects.indexOf(url) !== -1) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced; infinite redirection was detected.',\n            'jsonld.InfiniteRedirectDetected', {\n              code: 'recursive context inclusion',\n              url: url,\n              httpStatusCode: res.statusCode,\n              redirects: redirects\n            }), doc);\n        }\n        redirects.push(url);\n        return loadDocument(res.headers.location, redirects, callback);\n      }\n      // cache for each redirected URL\n      redirects.push(url);\n      // TODO: disable cache until HTTP caching implemented\n      /*for(var i = 0; i < redirects.length; ++i) {\n        cache.set(\n          redirects[i],\n          {contextUrl: null, documentUrl: redirects[i], document: body});\n      }*/\n      callback(err, doc);\n    }\n  }\n};\n\n/**\n * Creates a built-in XMLHttpRequest document loader.\n *\n * @param options the options to use:\n *          secure: require all URLs to use HTTPS.\n *          usePromise: true to use a promises API, false for a\n *            callback-continuation-style API; defaults to true if Promise\n *            is globally defined, false if not.\n *          [xhr]: the XMLHttpRequest API to use.\n *\n * @return the XMLHttpRequest document loader.\n */\njsonld.documentLoaders.xhr = function(options) {\n  options = options || {};\n  var rlink = /(^|(\\r\\n))link:/i;\n  var queue = new jsonld.RequestQueue();\n\n  // use option or, by default, use Promise when its defined\n  var usePromise = ('usePromise' in options ?\n    options.usePromise : (typeof Promise !== 'undefined'));\n  if(usePromise) {\n    return queue.wrapLoader(function(url) {\n      return jsonld.promisify(loader, url);\n    });\n  }\n  return queue.wrapLoader(loader);\n\n  function loader(url, callback) {\n    if(url.indexOf('http:') !== 0 && url.indexOf('https:') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; only \"http\" and \"https\" URLs are ' +\n        'supported.',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    if(options.secure && url.indexOf('https') !== 0) {\n      return callback(new JsonLdError(\n        'URL could not be dereferenced; secure mode is enabled and ' +\n        'the URL\\'s scheme is not \"https\".',\n        'jsonld.InvalidUrl', {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    }\n    var xhr = options.xhr || XMLHttpRequest;\n    var req = new xhr();\n    req.onload = function() {\n      if(req.status >= 400) {\n        return callback(new JsonLdError(\n          'URL could not be dereferenced: ' + req.statusText,\n          'jsonld.LoadDocumentError', {\n            code: 'loading document failed',\n            url: url,\n            httpStatusCode: req.status\n          }), {contextUrl: null, documentUrl: url, document: null});\n      }\n\n      var doc = {contextUrl: null, documentUrl: url, document: req.response};\n\n      // handle Link Header (avoid unsafe header warning by existence testing)\n      var contentType = req.getResponseHeader('Content-Type');\n      var linkHeader;\n      if(rlink.test(req.getAllResponseHeaders())) {\n        linkHeader = req.getResponseHeader('Link');\n      }\n      if(linkHeader && contentType !== 'application/ld+json') {\n        // only 1 related link header permitted\n        linkHeader = jsonld.parseLinkHeader(linkHeader)[LINK_HEADER_REL];\n        if(_isArray(linkHeader)) {\n          return callback(new JsonLdError(\n            'URL could not be dereferenced, it has more than one ' +\n            'associated HTTP Link Header.',\n            'jsonld.InvalidUrl',\n            {code: 'multiple context link headers', url: url}), doc);\n        }\n        if(linkHeader) {\n          doc.contextUrl = linkHeader.target;\n        }\n      }\n\n      callback(null, doc);\n    };\n    req.onerror = function() {\n      callback(new JsonLdError(\n        'URL could not be dereferenced, an error occurred.',\n        'jsonld.LoadDocumentError',\n        {code: 'loading document failed', url: url}),\n        {contextUrl: null, documentUrl: url, document: null});\n    };\n    req.open('GET', url, true);\n    req.setRequestHeader('Accept', 'application/ld+json, application/json');\n    req.send();\n  }\n};\n\n/**\n * Assigns the default document loader for external document URLs to a built-in\n * default. Supported types currently include: 'jquery' and 'node'.\n *\n * To use the jquery document loader, the first parameter must be a reference\n * to the main jquery object.\n *\n * @param type the type to set.\n * @param [params] the parameters required to use the document loader.\n */\njsonld.useDocumentLoader = function(type) {\n  if(!(type in jsonld.documentLoaders)) {\n    throw new JsonLdError(\n      'Unknown document loader type: \"' + type + '\"',\n      'jsonld.UnknownDocumentLoader',\n      {type: type});\n  }\n\n  // set document loader\n  jsonld.documentLoader = jsonld.documentLoaders[type].apply(\n    jsonld, Array.prototype.slice.call(arguments, 1));\n};\n\n/**\n * Processes a local context, resolving any URLs as necessary, and returns a\n * new active context in its callback.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param [options] the options to use:\n *          [documentLoader(url, callback(err, remoteDoc))] the document loader.\n * @param callback(err, ctx) called once the operation completes.\n */\njsonld.processContext = function(activeCtx, localCtx) {\n  // get arguments\n  var options = {};\n  var callbackArg = 2;\n  if(arguments.length > 3) {\n    options = arguments[2] || {};\n    callbackArg += 1;\n  }\n  var callback = arguments[callbackArg];\n\n  // set default options\n  if(!('base' in options)) {\n    options.base = '';\n  }\n  if(!('documentLoader' in options)) {\n    options.documentLoader = jsonld.loadDocument;\n  }\n\n  // return initial context early for null context\n  if(localCtx === null) {\n    return callback(null, _getInitialContext(options));\n  }\n\n  // retrieve URLs in localCtx\n  localCtx = _clone(localCtx);\n  if(!(_isObject(localCtx) && '@context' in localCtx)) {\n    localCtx = {'@context': localCtx};\n  }\n  _retrieveContextUrls(localCtx, options, function(err, ctx) {\n    if(err) {\n      return callback(err);\n    }\n    try {\n      // process context\n      ctx = new Processor().processContext(activeCtx, ctx, options);\n    } catch(ex) {\n      return callback(ex);\n    }\n    callback(null, ctx);\n  });\n};\n\n/**\n * Returns true if the given subject has the given property.\n *\n * @param subject the subject to check.\n * @param property the property to look for.\n *\n * @return true if the subject has the given property, false if not.\n */\njsonld.hasProperty = function(subject, property) {\n  var rval = false;\n  if(property in subject) {\n    var value = subject[property];\n    rval = (!_isArray(value) || value.length > 0);\n  }\n  return rval;\n};\n\n/**\n * Determines if the given value is a property of the given subject.\n *\n * @param subject the subject to check.\n * @param property the property to check.\n * @param value the value to check.\n *\n * @return true if the value exists, false if not.\n */\njsonld.hasValue = function(subject, property, value) {\n  var rval = false;\n  if(jsonld.hasProperty(subject, property)) {\n    var val = subject[property];\n    var isList = _isList(val);\n    if(_isArray(val) || isList) {\n      if(isList) {\n        val = val['@list'];\n      }\n      for(var i = 0; i < val.length; ++i) {\n        if(jsonld.compareValues(value, val[i])) {\n          rval = true;\n          break;\n        }\n      }\n    } else if(!_isArray(value)) {\n      // avoid matching the set of values with an array value parameter\n      rval = jsonld.compareValues(value, val);\n    }\n  }\n  return rval;\n};\n\n/**\n * Adds a value to a subject. If the value is an array, all values in the\n * array will be added.\n *\n * @param subject the subject to add the value to.\n * @param property the property that relates the value to the subject.\n * @param value the value to add.\n * @param [options] the options to use:\n *        [propertyIsArray] true if the property is always an array, false\n *          if not (default: false).\n *        [allowDuplicate] true to allow duplicates, false not to (uses a\n *          simple shallow comparison of subject ID or value) (default: true).\n */\njsonld.addValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n  if(!('allowDuplicate' in options)) {\n    options.allowDuplicate = true;\n  }\n\n  if(_isArray(value)) {\n    if(value.length === 0 && options.propertyIsArray &&\n      !(property in subject)) {\n      subject[property] = [];\n    }\n    for(var i = 0; i < value.length; ++i) {\n      jsonld.addValue(subject, property, value[i], options);\n    }\n  } else if(property in subject) {\n    // check if subject already has value if duplicates not allowed\n    var hasValue = (!options.allowDuplicate &&\n      jsonld.hasValue(subject, property, value));\n\n    // make property an array if value not present or always an array\n    if(!_isArray(subject[property]) &&\n      (!hasValue || options.propertyIsArray)) {\n      subject[property] = [subject[property]];\n    }\n\n    // add new value\n    if(!hasValue) {\n      subject[property].push(value);\n    }\n  } else {\n    // add new value as set or single value\n    subject[property] = options.propertyIsArray ? [value] : value;\n  }\n};\n\n/**\n * Gets all of the values for a subject's property as an array.\n *\n * @param subject the subject.\n * @param property the property.\n *\n * @return all of the values for a subject's property as an array.\n */\njsonld.getValues = function(subject, property) {\n  var rval = subject[property] || [];\n  if(!_isArray(rval)) {\n    rval = [rval];\n  }\n  return rval;\n};\n\n/**\n * Removes a property from a subject.\n *\n * @param subject the subject.\n * @param property the property.\n */\njsonld.removeProperty = function(subject, property) {\n  delete subject[property];\n};\n\n/**\n * Removes a value from a subject.\n *\n * @param subject the subject.\n * @param property the property that relates the value to the subject.\n * @param value the value to remove.\n * @param [options] the options to use:\n *          [propertyIsArray] true if the property is always an array, false\n *            if not (default: false).\n */\njsonld.removeValue = function(subject, property, value, options) {\n  options = options || {};\n  if(!('propertyIsArray' in options)) {\n    options.propertyIsArray = false;\n  }\n\n  // filter out value\n  var values = jsonld.getValues(subject, property).filter(function(e) {\n    return !jsonld.compareValues(e, value);\n  });\n\n  if(values.length === 0) {\n    jsonld.removeProperty(subject, property);\n  } else if(values.length === 1 && !options.propertyIsArray) {\n    subject[property] = values[0];\n  } else {\n    subject[property] = values;\n  }\n};\n\n/**\n * Compares two JSON-LD values for equality. Two JSON-LD values will be\n * considered equal if:\n *\n * 1. They are both primitives of the same type and value.\n * 2. They are both @values with the same @value, @type, @language,\n *   and @index, OR\n * 3. They both have @ids they are the same.\n *\n * @param v1 the first value.\n * @param v2 the second value.\n *\n * @return true if v1 and v2 are considered equal, false if not.\n */\njsonld.compareValues = function(v1, v2) {\n  // 1. equal primitives\n  if(v1 === v2) {\n    return true;\n  }\n\n  // 2. equal @values\n  if(_isValue(v1) && _isValue(v2) &&\n    v1['@value'] === v2['@value'] &&\n    v1['@type'] === v2['@type'] &&\n    v1['@language'] === v2['@language'] &&\n    v1['@index'] === v2['@index']) {\n    return true;\n  }\n\n  // 3. equal @ids\n  if(_isObject(v1) && ('@id' in v1) && _isObject(v2) && ('@id' in v2)) {\n    return v1['@id'] === v2['@id'];\n  }\n\n  return false;\n};\n\n/**\n * Gets the value for the given active context key and type, null if none is\n * set.\n *\n * @param ctx the active context.\n * @param key the context key.\n * @param [type] the type of value to get (eg: '@id', '@type'), if not\n *          specified gets the entire entry for a key, null if not found.\n *\n * @return the value.\n */\njsonld.getContextValue = function(ctx, key, type) {\n  var rval = null;\n\n  // return null for invalid key\n  if(key === null) {\n    return rval;\n  }\n\n  // get default language\n  if(type === '@language' && (type in ctx)) {\n    rval = ctx[type];\n  }\n\n  // get specific entry information\n  if(ctx.mappings[key]) {\n    var entry = ctx.mappings[key];\n\n    if(_isUndefined(type)) {\n      // return whole entry\n      rval = entry;\n    } else if(type in entry) {\n      // return entry value for type\n      rval = entry[type];\n    }\n  }\n\n  return rval;\n};\n\n/** Registered RDF dataset parsers hashed by content-type. */\nvar _rdfParsers = {};\n\n/**\n * Registers an RDF dataset parser by content-type, for use with\n * jsonld.fromRDF. An RDF dataset parser will always be given two parameters,\n * a string of input and a callback. An RDF dataset parser can be synchronous\n * or asynchronous.\n *\n * If the parser function returns undefined or null then it will be assumed to\n * be asynchronous w/a continuation-passing style and the callback parameter\n * given to the parser MUST be invoked.\n *\n * If it returns a Promise, then it will be assumed to be asynchronous, but the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * If it returns an RDF dataset, it will be assumed to be synchronous and the\n * callback parameter MUST NOT be invoked. It should instead be ignored.\n *\n * @param contentType the content-type for the parser.\n * @param parser(input, callback(err, dataset)) the parser function (takes a\n *          string as a parameter and either returns null/undefined and uses\n *          the given callback, returns a Promise, or returns an RDF dataset).\n */\njsonld.registerRDFParser = function(contentType, parser) {\n  _rdfParsers[contentType] = parser;\n};\n\n/**\n * Unregisters an RDF dataset parser by content-type.\n *\n * @param contentType the content-type for the parser.\n */\njsonld.unregisterRDFParser = function(contentType) {\n  delete _rdfParsers[contentType];\n};\n\nif(_nodejs) {\n  // needed for serialization of XML literals\n  if(typeof XMLSerializer === 'undefined') {\n    var XMLSerializer = null;\n  }\n  if(typeof Node === 'undefined') {\n    var Node = {\n      ELEMENT_NODE: 1,\n      ATTRIBUTE_NODE: 2,\n      TEXT_NODE: 3,\n      CDATA_SECTION_NODE: 4,\n      ENTITY_REFERENCE_NODE: 5,\n      ENTITY_NODE: 6,\n      PROCESSING_INSTRUCTION_NODE: 7,\n      COMMENT_NODE: 8,\n      DOCUMENT_NODE: 9,\n      DOCUMENT_TYPE_NODE: 10,\n      DOCUMENT_FRAGMENT_NODE: 11,\n      NOTATION_NODE:12\n    };\n  }\n}\n\n// constants\nvar XSD_BOOLEAN = 'http://www.w3.org/2001/XMLSchema#boolean';\nvar XSD_DOUBLE = 'http://www.w3.org/2001/XMLSchema#double';\nvar XSD_INTEGER = 'http://www.w3.org/2001/XMLSchema#integer';\nvar XSD_STRING = 'http://www.w3.org/2001/XMLSchema#string';\n\nvar RDF = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\nvar RDF_LIST = RDF + 'List';\nvar RDF_FIRST = RDF + 'first';\nvar RDF_REST = RDF + 'rest';\nvar RDF_NIL = RDF + 'nil';\nvar RDF_TYPE = RDF + 'type';\nvar RDF_PLAIN_LITERAL = RDF + 'PlainLiteral';\nvar RDF_XML_LITERAL = RDF + 'XMLLiteral';\nvar RDF_OBJECT = RDF + 'object';\nvar RDF_LANGSTRING = RDF + 'langString';\n\nvar LINK_HEADER_REL = 'http://www.w3.org/ns/json-ld#context';\nvar MAX_CONTEXT_URLS = 10;\n\n/**\n * A JSON-LD Error.\n *\n * @param msg the error message.\n * @param type the error type.\n * @param details the error details.\n */\nvar JsonLdError = function(msg, type, details) {\n  if(_nodejs) {\n    Error.call(this);\n    Error.captureStackTrace(this, this.constructor);\n  } else if(typeof Error !== 'undefined') {\n    this.stack = (new Error()).stack;\n  }\n  this.name = type || 'jsonld.Error';\n  this.message = msg || 'An unspecified JSON-LD error occurred.';\n  this.details = details || {};\n};\nif(_nodejs) {\n  require('util').inherits(JsonLdError, Error);\n} else if(typeof Error !== 'undefined') {\n  JsonLdError.prototype = new Error();\n}\n\n/**\n * Constructs a new JSON-LD Processor.\n */\nvar Processor = function() {};\n\n/**\n * Recursively compacts an element using the given active context. All values\n * must be in expanded form before this method is called.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the compacted property associated with the element\n *          to compact, null for none.\n * @param element the element to compact.\n * @param options the compaction options.\n *\n * @return the compacted value.\n */\nProcessor.prototype.compact = function(\n  activeCtx, activeProperty, element, options) {\n  // recursively compact array\n  if(_isArray(element)) {\n    var rval = [];\n    for(var i = 0; i < element.length; ++i) {\n      // compact, dropping any null values\n      var compacted = this.compact(\n        activeCtx, activeProperty, element[i], options);\n      if(compacted !== null) {\n        rval.push(compacted);\n      }\n    }\n    if(options.compactArrays && rval.length === 1) {\n      // use single element if no container is specified\n      var container = jsonld.getContextValue(\n        activeCtx, activeProperty, '@container');\n      if(container === null) {\n        rval = rval[0];\n      }\n    }\n    return rval;\n  }\n\n  // recursively compact object\n  if(_isObject(element)) {\n    if(options.link && '@id' in element && element['@id'] in options.link) {\n      // check for a linked element to reuse\n      var linked = options.link[element['@id']];\n      for(var i = 0; i < linked.length; ++i) {\n        if(linked[i].expanded === element) {\n          return linked[i].compacted;\n        }\n      }\n    }\n\n    // do value compaction on @values and subject references\n    if(_isValue(element) || _isSubjectReference(element)) {\n      var rval = _compactValue(activeCtx, activeProperty, element);\n      if(options.link && _isSubjectReference(element)) {\n        // store linked element\n        if(!(element['@id'] in options.link)) {\n          options.link[element['@id']] = [];\n        }\n        options.link[element['@id']].push({expanded: element, compacted: rval});\n      }\n      return rval;\n    }\n\n    // FIXME: avoid misuse of active property as an expanded property?\n    var insideReverse = (activeProperty === '@reverse');\n\n    var rval = {};\n\n    if(options.link && '@id' in element) {\n      // store linked element\n      if(!(element['@id'] in options.link)) {\n        options.link[element['@id']] = [];\n      }\n      options.link[element['@id']].push({expanded: element, compacted: rval});\n    }\n\n    // process element keys in order\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var expandedProperty = keys[ki];\n      var expandedValue = element[expandedProperty];\n\n      // compact @id and @type(s)\n      if(expandedProperty === '@id' || expandedProperty === '@type') {\n        var compactedValue;\n\n        // compact single @id\n        if(_isString(expandedValue)) {\n          compactedValue = _compactIri(\n            activeCtx, expandedValue, null,\n            {vocab: (expandedProperty === '@type')});\n        } else {\n          // expanded value must be a @type array\n          compactedValue = [];\n          for(var vi = 0; vi < expandedValue.length; ++vi) {\n            compactedValue.push(_compactIri(\n              activeCtx, expandedValue[vi], null, {vocab: true}));\n          }\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        var isArray = (_isArray(compactedValue) && expandedValue.length === 0);\n        jsonld.addValue(\n          rval, alias, compactedValue, {propertyIsArray: isArray});\n        continue;\n      }\n\n      // handle @reverse\n      if(expandedProperty === '@reverse') {\n        // recursively compact expanded value\n        var compactedValue = this.compact(\n          activeCtx, '@reverse', expandedValue, options);\n\n        // handle double-reversed properties\n        for(var compactedProperty in compactedValue) {\n          if(activeCtx.mappings[compactedProperty] &&\n            activeCtx.mappings[compactedProperty].reverse) {\n            var value = compactedValue[compactedProperty];\n            var container = jsonld.getContextValue(\n              activeCtx, compactedProperty, '@container');\n            var useArray = (container === '@set' || !options.compactArrays);\n            jsonld.addValue(\n              rval, compactedProperty, value, {propertyIsArray: useArray});\n            delete compactedValue[compactedProperty];\n          }\n        }\n\n        if(Object.keys(compactedValue).length > 0) {\n          // use keyword alias and add value\n          var alias = _compactIri(activeCtx, expandedProperty);\n          jsonld.addValue(rval, alias, compactedValue);\n        }\n\n        continue;\n      }\n\n      // handle @index property\n      if(expandedProperty === '@index') {\n        // drop @index if inside an @index container\n        var container = jsonld.getContextValue(\n          activeCtx, activeProperty, '@container');\n        if(container === '@index') {\n          continue;\n        }\n\n        // use keyword alias and add value\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // skip array processing for keywords that aren't @graph or @list\n      if(expandedProperty !== '@graph' && expandedProperty !== '@list' &&\n        _isKeyword(expandedProperty)) {\n        // use keyword alias and add value as is\n        var alias = _compactIri(activeCtx, expandedProperty);\n        jsonld.addValue(rval, alias, expandedValue);\n        continue;\n      }\n\n      // Note: expanded value must be an array due to expansion algorithm.\n\n      // preserve empty arrays\n      if(expandedValue.length === 0) {\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedValue, {vocab: true},\n          insideReverse);\n        jsonld.addValue(\n          rval, itemActiveProperty, expandedValue, {propertyIsArray: true});\n      }\n\n      // recusively process array values\n      for(var vi = 0; vi < expandedValue.length; ++vi) {\n        var expandedItem = expandedValue[vi];\n\n        // compact property and get container type\n        var itemActiveProperty = _compactIri(\n          activeCtx, expandedProperty, expandedItem, {vocab: true},\n          insideReverse);\n        var container = jsonld.getContextValue(\n          activeCtx, itemActiveProperty, '@container');\n\n        // get @list value if appropriate\n        var isList = _isList(expandedItem);\n        var list = null;\n        if(isList) {\n          list = expandedItem['@list'];\n        }\n\n        // recursively compact expanded item\n        var compactedItem = this.compact(\n          activeCtx, itemActiveProperty, isList ? list : expandedItem, options);\n\n        // handle @list\n        if(isList) {\n          // ensure @list value is an array\n          if(!_isArray(compactedItem)) {\n            compactedItem = [compactedItem];\n          }\n\n          if(container !== '@list') {\n            // wrap using @list alias\n            var wrapper = {};\n            wrapper[_compactIri(activeCtx, '@list')] = compactedItem;\n            compactedItem = wrapper;\n\n            // include @index from expanded @list, if any\n            if('@index' in expandedItem) {\n              compactedItem[_compactIri(activeCtx, '@index')] =\n                expandedItem['@index'];\n            }\n          } else if(itemActiveProperty in rval) {\n            // can't use @list container for more than 1 list\n            throw new JsonLdError(\n              'JSON-LD compact error; property has a \"@list\" @container ' +\n              'rule but there is more than a single @list that matches ' +\n              'the compacted term in the document. Compaction might mix ' +\n              'unwanted items into the list.',\n              'jsonld.SyntaxError', {code: 'compaction to list of lists'});\n          }\n        }\n\n        // handle language and index maps\n        if(container === '@language' || container === '@index') {\n          // get or create the map object\n          var mapObject;\n          if(itemActiveProperty in rval) {\n            mapObject = rval[itemActiveProperty];\n          } else {\n            rval[itemActiveProperty] = mapObject = {};\n          }\n\n          // if container is a language map, simplify compacted value to\n          // a simple string\n          if(container === '@language' && _isValue(compactedItem)) {\n            compactedItem = compactedItem['@value'];\n          }\n\n          // add compact value to map object using key from expanded value\n          // based on the container type\n          jsonld.addValue(mapObject, expandedItem[container], compactedItem);\n        } else {\n          // use an array if: compactArrays flag is false,\n          // @container is @set or @list , value is an empty\n          // array, or key is @graph\n          var isArray = (!options.compactArrays || container === '@set' ||\n            container === '@list' ||\n            (_isArray(compactedItem) && compactedItem.length === 0) ||\n            expandedProperty === '@list' || expandedProperty === '@graph');\n\n          // add compact value\n          jsonld.addValue(\n            rval, itemActiveProperty, compactedItem,\n            {propertyIsArray: isArray});\n        }\n      }\n    }\n\n    return rval;\n  }\n\n  // only primitives remain which are already compact\n  return element;\n};\n\n/**\n * Recursively expands an element using the given context. Any context in\n * the element will be removed. All context URLs must have been retrieved\n * before calling this method.\n *\n * @param activeCtx the context to use.\n * @param activeProperty the property for the element, null for none.\n * @param element the element to expand.\n * @param options the expansion options.\n * @param insideList true if the element is a list, false if not.\n *\n * @return the expanded value.\n */\nProcessor.prototype.expand = function(\n  activeCtx, activeProperty, element, options, insideList) {\n  var self = this;\n\n  // nothing to expand\n  if(element === null || element === undefined) {\n    return null;\n  }\n\n  if(!_isArray(element) && !_isObject(element)) {\n    // drop free-floating scalars that are not in lists\n    if(!insideList && (activeProperty === null ||\n      _expandIri(activeCtx, activeProperty, {vocab: true}) === '@graph')) {\n      return null;\n    }\n\n    // expand element according to value expansion rules\n    return _expandValue(activeCtx, activeProperty, element);\n  }\n\n  // recursively expand array\n  if(_isArray(element)) {\n    var rval = [];\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n    insideList = insideList || container === '@list';\n    for(var i = 0; i < element.length; ++i) {\n      // expand element\n      var e = self.expand(activeCtx, activeProperty, element[i], options);\n      if(insideList && (_isArray(e) || _isList(e))) {\n        // lists of lists are illegal\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; lists of lists are not permitted.',\n          'jsonld.SyntaxError', {code: 'list of lists'});\n      }\n      // drop null values\n      if(e !== null) {\n        if(_isArray(e)) {\n          rval = rval.concat(e);\n        } else {\n          rval.push(e);\n        }\n      }\n    }\n    return rval;\n  }\n\n  // recursively expand object:\n\n  // if element has a context, process it\n  if('@context' in element) {\n    activeCtx = self.processContext(activeCtx, element['@context'], options);\n  }\n\n  // expand the active property\n  var expandedActiveProperty = _expandIri(\n    activeCtx, activeProperty, {vocab: true});\n\n  var rval = {};\n  var keys = Object.keys(element).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var value = element[key];\n    var expandedValue;\n\n    // skip @context\n    if(key === '@context') {\n      continue;\n    }\n\n    // expand property\n    var expandedProperty = _expandIri(activeCtx, key, {vocab: true});\n\n    // drop non-absolute IRI keys that aren't keywords\n    if(expandedProperty === null ||\n      !(_isAbsoluteIri(expandedProperty) || _isKeyword(expandedProperty))) {\n      continue;\n    }\n\n    if(_isKeyword(expandedProperty)) {\n      if(expandedActiveProperty === '@reverse') {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a keyword cannot be used as a @reverse ' +\n          'property.', 'jsonld.SyntaxError',\n          {code: 'invalid reverse property map', value: value});\n      }\n      if(expandedProperty in rval) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; colliding keywords detected.',\n          'jsonld.SyntaxError',\n          {code: 'colliding keywords', keyword: expandedProperty});\n      }\n    }\n\n    // syntax error if @id is not a string\n    if(expandedProperty === '@id' && !_isString(value)) {\n      if(!options.isFrame) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must a string.',\n          'jsonld.SyntaxError', {code: 'invalid @id value', value: value});\n      }\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@id\" value must be a string or an ' +\n          'object.', 'jsonld.SyntaxError',\n          {code: 'invalid @id value', value: value});\n      }\n    }\n\n    if(expandedProperty === '@type') {\n      _validateTypeValue(value);\n    }\n\n    // @graph must be an array or an object\n    if(expandedProperty === '@graph' &&\n      !(_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@graph\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError', {code: 'invalid @graph value', value: value});\n    }\n\n    // @value must not be an object or an array\n    if(expandedProperty === '@value' &&\n      (_isObject(value) || _isArray(value))) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; \"@value\" value must not be an ' +\n        'object or an array.',\n        'jsonld.SyntaxError',\n        {code: 'invalid value object value', value: value});\n    }\n\n    // @language must be a string\n    if(expandedProperty === '@language') {\n      if(value === null) {\n        // drop null @language values, they expand as if they didn't exist\n        continue;\n      }\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@language\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language-tagged string', value: value});\n      }\n      // ensure language value is lowercase\n      value = value.toLowerCase();\n    }\n\n    // @index must be a string\n    if(expandedProperty === '@index') {\n      if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@index\" value must be a string.',\n          'jsonld.SyntaxError',\n          {code: 'invalid @index value', value: value});\n      }\n    }\n\n    // @reverse must be an object\n    if(expandedProperty === '@reverse') {\n      if(!_isObject(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; \"@reverse\" value must be an object.',\n          'jsonld.SyntaxError', {code: 'invalid @reverse value', value: value});\n      }\n\n      expandedValue = self.expand(activeCtx, '@reverse', value, options);\n\n      // properties double-reversed\n      if('@reverse' in expandedValue) {\n        for(var property in expandedValue['@reverse']) {\n          jsonld.addValue(\n            rval, property, expandedValue['@reverse'][property],\n            {propertyIsArray: true});\n        }\n      }\n\n      // FIXME: can this be merged with code below to simplify?\n      // merge in all reversed properties\n      var reverseMap = rval['@reverse'] || null;\n      for(var property in expandedValue) {\n        if(property === '@reverse') {\n          continue;\n        }\n        if(reverseMap === null) {\n          reverseMap = rval['@reverse'] = {};\n        }\n        jsonld.addValue(reverseMap, property, [], {propertyIsArray: true});\n        var items = expandedValue[property];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          if(_isValue(item) || _isList(item)) {\n            throw new JsonLdError(\n              'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n              '@value or an @list.', 'jsonld.SyntaxError',\n              {code: 'invalid reverse property value', value: expandedValue});\n          }\n          jsonld.addValue(\n            reverseMap, property, item, {propertyIsArray: true});\n        }\n      }\n\n      continue;\n    }\n\n    var container = jsonld.getContextValue(activeCtx, key, '@container');\n\n    if(container === '@language' && _isObject(value)) {\n      // handle language map container (skip if value is not an object)\n      expandedValue = _expandLanguageMap(value);\n    } else if(container === '@index' && _isObject(value)) {\n      // handle index container (skip if value is not an object)\n      expandedValue = (function _expandIndexMap(activeProperty) {\n        var rval = [];\n        var keys = Object.keys(value).sort();\n        for(var ki = 0; ki < keys.length; ++ki) {\n          var key = keys[ki];\n          var val = value[key];\n          if(!_isArray(val)) {\n            val = [val];\n          }\n          val = self.expand(activeCtx, activeProperty, val, options, false);\n          for(var vi = 0; vi < val.length; ++vi) {\n            var item = val[vi];\n            if(!('@index' in item)) {\n              item['@index'] = key;\n            }\n            rval.push(item);\n          }\n        }\n        return rval;\n      })(key);\n    } else {\n      // recurse into @list or @set\n      var isList = (expandedProperty === '@list');\n      if(isList || expandedProperty === '@set') {\n        var nextActiveProperty = activeProperty;\n        if(isList && expandedActiveProperty === '@graph') {\n          nextActiveProperty = null;\n        }\n        expandedValue = self.expand(\n          activeCtx, nextActiveProperty, value, options, isList);\n        if(isList && _isList(expandedValue)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; lists of lists are not permitted.',\n            'jsonld.SyntaxError', {code: 'list of lists'});\n        }\n      } else {\n        // recursively expand value with key as new active property\n        expandedValue = self.expand(activeCtx, key, value, options, false);\n      }\n    }\n\n    // drop null values if property is not @value\n    if(expandedValue === null && expandedProperty !== '@value') {\n      continue;\n    }\n\n    // convert expanded value to @list if container specifies it\n    if(expandedProperty !== '@list' && !_isList(expandedValue) &&\n      container === '@list') {\n      // ensure expanded value is an array\n      expandedValue = (_isArray(expandedValue) ?\n        expandedValue : [expandedValue]);\n      expandedValue = {'@list': expandedValue};\n    }\n\n    // FIXME: can this be merged with code above to simplify?\n    // merge in reverse properties\n    if(activeCtx.mappings[key] && activeCtx.mappings[key].reverse) {\n      var reverseMap = rval['@reverse'] = rval['@reverse'] || {};\n      if(!_isArray(expandedValue)) {\n        expandedValue = [expandedValue];\n      }\n      for(var ii = 0; ii < expandedValue.length; ++ii) {\n        var item = expandedValue[ii];\n        if(_isValue(item) || _isList(item)) {\n          throw new JsonLdError(\n            'Invalid JSON-LD syntax; \"@reverse\" value must not be a ' +\n            '@value or an @list.', 'jsonld.SyntaxError',\n            {code: 'invalid reverse property value', value: expandedValue});\n        }\n        jsonld.addValue(\n          reverseMap, expandedProperty, item, {propertyIsArray: true});\n      }\n      continue;\n    }\n\n    // add value for property\n    // use an array except for certain keywords\n    var useArray =\n      ['@index', '@id', '@type', '@value', '@language'].indexOf(\n        expandedProperty) === -1;\n    jsonld.addValue(\n      rval, expandedProperty, expandedValue, {propertyIsArray: useArray});\n  }\n\n  // get property count on expanded output\n  keys = Object.keys(rval);\n  var count = keys.length;\n\n  if('@value' in rval) {\n    // @value must only have @language or @type\n    if('@type' in rval && '@language' in rval) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may not ' +\n        'contain both \"@type\" and \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    var validCount = count - 1;\n    if('@type' in rval) {\n      validCount -= 1;\n    }\n    if('@index' in rval) {\n      validCount -= 1;\n    }\n    if('@language' in rval) {\n      validCount -= 1;\n    }\n    if(validCount !== 0) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" may only ' +\n        'have an \"@index\" property and at most one other property ' +\n        'which can be \"@type\" or \"@language\".',\n        'jsonld.SyntaxError', {code: 'invalid value object', element: rval});\n    }\n    // drop null @values\n    if(rval['@value'] === null) {\n      rval = null;\n    } else if('@language' in rval && !_isString(rval['@value'])) {\n      // if @language is present, @value must be a string\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; only strings may be language-tagged.',\n        'jsonld.SyntaxError',\n        {code: 'invalid language-tagged value', element: rval});\n    } else if('@type' in rval && (!_isAbsoluteIri(rval['@type']) ||\n      rval['@type'].indexOf('_:') === 0)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an element containing \"@value\" and \"@type\" ' +\n        'must have an absolute IRI for the value of \"@type\".',\n        'jsonld.SyntaxError', {code: 'invalid typed value', element: rval});\n    }\n  } else if('@type' in rval && !_isArray(rval['@type'])) {\n    // convert @type to an array\n    rval['@type'] = [rval['@type']];\n  } else if('@set' in rval || '@list' in rval) {\n    // handle @set and @list\n    if(count > 1 && !(count === 2 && '@index' in rval)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; if an element has the property \"@set\" ' +\n        'or \"@list\", then it can have at most one other property that is ' +\n        '\"@index\".', 'jsonld.SyntaxError',\n        {code: 'invalid set or list object', element: rval});\n    }\n    // optimize away @set\n    if('@set' in rval) {\n      rval = rval['@set'];\n      keys = Object.keys(rval);\n      count = keys.length;\n    }\n  } else if(count === 1 && '@language' in rval) {\n    // drop objects with only @language\n    rval = null;\n  }\n\n  // drop certain top-level objects that do not occur in lists\n  if(_isObject(rval) &&\n    !options.keepFreeFloatingNodes && !insideList &&\n    (activeProperty === null || expandedActiveProperty === '@graph')) {\n    // drop empty object, top-level @value/@list, or object with only @id\n    if(count === 0 || '@value' in rval || '@list' in rval ||\n      (count === 1 && '@id' in rval)) {\n      rval = null;\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Creates a JSON-LD node map (node ID => node).\n *\n * @param input the expanded JSON-LD to create a node map of.\n * @param [options] the options to use:\n *          [issuer] a jsonld.IdentifierIssuer to use to label blank nodes.\n *          [namer] (deprecated).\n *\n * @return the node map.\n */\nProcessor.prototype.createNodeMap = function(input, options) {\n  options = options || {};\n\n  // produce a map of all subjects and name each bnode\n  var issuer = options.namer || options.issuer || new IdentifierIssuer('_:b');\n  var graphs = {'@default': {}};\n  _createNodeMap(input, graphs, '@default', issuer);\n\n  // add all non-default graphs to default graph\n  return _mergeNodeMaps(graphs);\n};\n\n/**\n * Performs JSON-LD flattening.\n *\n * @param input the expanded JSON-LD to flatten.\n *\n * @return the flattened output.\n */\nProcessor.prototype.flatten = function(input) {\n  var defaultGraph = this.createNodeMap(input);\n\n  // produce flattened output\n  var flattened = [];\n  var keys = Object.keys(defaultGraph).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var node = defaultGraph[keys[ki]];\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      flattened.push(node);\n    }\n  }\n  return flattened;\n};\n\n/**\n * Performs JSON-LD framing.\n *\n * @param input the expanded JSON-LD to frame.\n * @param frame the expanded JSON-LD frame to use.\n * @param options the framing options.\n *\n * @return the framed output.\n */\nProcessor.prototype.frame = function(input, frame, options) {\n  // create framing state\n  var state = {\n    options: options,\n    graphs: {'@default': {}, '@merged': {}},\n    subjectStack: [],\n    link: {}\n  };\n\n  // produce a map of all graphs and name each bnode\n  // FIXME: currently uses subjects from @merged graph only\n  var issuer = new IdentifierIssuer('_:b');\n  _createNodeMap(input, state.graphs, '@merged', issuer);\n  state.subjects = state.graphs['@merged'];\n\n  // frame the subjects\n  var framed = [];\n  _frame(state, Object.keys(state.subjects).sort(), frame, framed, null);\n  return framed;\n};\n\n/**\n * Performs normalization on the given RDF dataset.\n *\n * @param dataset the RDF dataset to normalize.\n * @param options the normalization options.\n * @param callback(err, normalized) called once the operation completes.\n */\nProcessor.prototype.normalize = function(dataset, options, callback) {\n  if(options.algorithm === 'URDNA2015') {\n    return new URDNA2015(options).main(dataset, callback);\n  }\n  if(options.algorithm === 'URGNA2012') {\n    return new URGNA2012(options).main(dataset, callback);\n  }\n  callback(new Error(\n    'Invalid RDF Dataset Normalization algorithm: ' + options.algorithm));\n};\n\n/**\n * Converts an RDF dataset to JSON-LD.\n *\n * @param dataset the RDF dataset.\n * @param options the RDF serialization options.\n * @param callback(err, output) called once the operation completes.\n */\nProcessor.prototype.fromRDF = function(dataset, options, callback) {\n  var defaultGraph = {};\n  var graphMap = {'@default': defaultGraph};\n  var referencedOnce = {};\n\n  for(var name in dataset) {\n    var graph = dataset[name];\n    if(!(name in graphMap)) {\n      graphMap[name] = {};\n    }\n    if(name !== '@default' && !(name in defaultGraph)) {\n      defaultGraph[name] = {'@id': name};\n    }\n    var nodeMap = graphMap[name];\n    for(var ti = 0; ti < graph.length; ++ti) {\n      var triple = graph[ti];\n\n      // get subject, predicate, object\n      var s = triple.subject.value;\n      var p = triple.predicate.value;\n      var o = triple.object;\n\n      if(!(s in nodeMap)) {\n        nodeMap[s] = {'@id': s};\n      }\n      var node = nodeMap[s];\n\n      var objectIsId = (o.type === 'IRI' || o.type === 'blank node');\n      if(objectIsId && !(o.value in nodeMap)) {\n        nodeMap[o.value] = {'@id': o.value};\n      }\n\n      if(p === RDF_TYPE && !options.useRdfType && objectIsId) {\n        jsonld.addValue(node, '@type', o.value, {propertyIsArray: true});\n        continue;\n      }\n\n      var value = _RDFToObject(o, options.useNativeTypes);\n      jsonld.addValue(node, p, value, {propertyIsArray: true});\n\n      // object may be an RDF list/partial list node but we can't know easily\n      // until all triples are read\n      if(objectIsId) {\n        if(o.value === RDF_NIL) {\n          // track rdf:nil uniquely per graph\n          var object = nodeMap[o.value];\n          if(!('usages' in object)) {\n            object.usages = [];\n          }\n          object.usages.push({\n            node: node,\n            property: p,\n            value: value\n          });\n        } else if(o.value in referencedOnce) {\n          // object referenced more than once\n          referencedOnce[o.value] = false;\n        } else {\n          // keep track of single reference\n          referencedOnce[o.value] = {\n            node: node,\n            property: p,\n            value: value\n          };\n        }\n      }\n    }\n  }\n\n  // convert linked lists to @list arrays\n  for(var name in graphMap) {\n    var graphObject = graphMap[name];\n\n    // no @lists to be converted, continue\n    if(!(RDF_NIL in graphObject)) {\n      continue;\n    }\n\n    // iterate backwards through each RDF list\n    var nil = graphObject[RDF_NIL];\n    for(var i = 0; i < nil.usages.length; ++i) {\n      var usage = nil.usages[i];\n      var node = usage.node;\n      var property = usage.property;\n      var head = usage.value;\n      var list = [];\n      var listNodes = [];\n\n      // ensure node is a well-formed list node; it must:\n      // 1. Be referenced only once.\n      // 2. Have an array for rdf:first that has 1 item.\n      // 3. Have an array for rdf:rest that has 1 item.\n      // 4. Have no keys other than: @id, rdf:first, rdf:rest, and,\n      //   optionally, @type where the value is rdf:List.\n      var nodeKeyCount = Object.keys(node).length;\n      while(property === RDF_REST &&\n        _isObject(referencedOnce[node['@id']]) &&\n        _isArray(node[RDF_FIRST]) && node[RDF_FIRST].length === 1 &&\n        _isArray(node[RDF_REST]) && node[RDF_REST].length === 1 &&\n        (nodeKeyCount === 3 || (nodeKeyCount === 4 && _isArray(node['@type']) &&\n          node['@type'].length === 1 && node['@type'][0] === RDF_LIST))) {\n        list.push(node[RDF_FIRST][0]);\n        listNodes.push(node['@id']);\n\n        // get next node, moving backwards through list\n        usage = referencedOnce[node['@id']];\n        node = usage.node;\n        property = usage.property;\n        head = usage.value;\n        nodeKeyCount = Object.keys(node).length;\n\n        // if node is not a blank node, then list head found\n        if(node['@id'].indexOf('_:') !== 0) {\n          break;\n        }\n      }\n\n      // the list is nested in another list\n      if(property === RDF_FIRST) {\n        // empty list\n        if(node['@id'] === RDF_NIL) {\n          // can't convert rdf:nil to a @list object because it would\n          // result in a list of lists which isn't supported\n          continue;\n        }\n\n        // preserve list head\n        head = graphObject[head['@id']][RDF_REST][0];\n        list.pop();\n        listNodes.pop();\n      }\n\n      // transform list into @list object\n      delete head['@id'];\n      head['@list'] = list.reverse();\n      for(var j = 0; j < listNodes.length; ++j) {\n        delete graphObject[listNodes[j]];\n      }\n    }\n\n    delete nil.usages;\n  }\n\n  var result = [];\n  var subjects = Object.keys(defaultGraph).sort();\n  for(var i = 0; i < subjects.length; ++i) {\n    var subject = subjects[i];\n    var node = defaultGraph[subject];\n    if(subject in graphMap) {\n      var graph = node['@graph'] = [];\n      var graphObject = graphMap[subject];\n      var subjects_ = Object.keys(graphObject).sort();\n      for(var si = 0; si < subjects_.length; ++si) {\n        var node_ = graphObject[subjects_[si]];\n        // only add full subjects to top-level\n        if(!_isSubjectReference(node_)) {\n          graph.push(node_);\n        }\n      }\n    }\n    // only add full subjects to top-level\n    if(!_isSubjectReference(node)) {\n      result.push(node);\n    }\n  }\n\n  callback(null, result);\n};\n\n/**\n * Outputs an RDF dataset for the expanded JSON-LD input.\n *\n * @param input the expanded JSON-LD input.\n * @param options the RDF serialization options.\n *\n * @return the RDF dataset.\n */\nProcessor.prototype.toRDF = function(input, options) {\n  // create node map for default graph (and any named graphs)\n  var issuer = new IdentifierIssuer('_:b');\n  var nodeMap = {'@default': {}};\n  _createNodeMap(input, nodeMap, '@default', issuer);\n\n  var dataset = {};\n  var graphNames = Object.keys(nodeMap).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    // skip relative IRIs\n    if(graphName === '@default' || _isAbsoluteIri(graphName)) {\n      dataset[graphName] = _graphToRDF(nodeMap[graphName], issuer, options);\n    }\n  }\n  return dataset;\n};\n\n/**\n * Processes a local context and returns a new active context.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context to process.\n * @param options the context processing options.\n *\n * @return the new active context.\n */\nProcessor.prototype.processContext = function(activeCtx, localCtx, options) {\n  // normalize local context to an array of @context objects\n  if(_isObject(localCtx) && '@context' in localCtx &&\n    _isArray(localCtx['@context'])) {\n    localCtx = localCtx['@context'];\n  }\n  var ctxs = _isArray(localCtx) ? localCtx : [localCtx];\n\n  // no contexts in array, clone existing context\n  if(ctxs.length === 0) {\n    return activeCtx.clone();\n  }\n\n  // process each context in order, update active context\n  // on each iteration to ensure proper caching\n  var rval = activeCtx;\n  for(var i = 0; i < ctxs.length; ++i) {\n    var ctx = ctxs[i];\n\n    // reset to initial context\n    if(ctx === null) {\n      rval = activeCtx = _getInitialContext(options);\n      continue;\n    }\n\n    // dereference @context key if present\n    if(_isObject(ctx) && '@context' in ctx) {\n      ctx = ctx['@context'];\n    }\n\n    // context must be an object by now, all URLs retrieved before this call\n    if(!_isObject(ctx)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context must be an object.',\n        'jsonld.SyntaxError', {code: 'invalid local context', context: ctx});\n    }\n\n    // get context from cache if available\n    if(jsonld.cache.activeCtx) {\n      var cached = jsonld.cache.activeCtx.get(activeCtx, ctx);\n      if(cached) {\n        rval = activeCtx = cached;\n        continue;\n      }\n    }\n\n    // update active context and clone new one before updating\n    activeCtx = rval;\n    rval = rval.clone();\n\n    // define context mappings for keys in local context\n    var defined = {};\n\n    // handle @base\n    if('@base' in ctx) {\n      var base = ctx['@base'];\n\n      // clear base\n      if(base === null) {\n        base = null;\n      } else if(!_isString(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      } else if(base !== '' && !_isAbsoluteIri(base)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@base\" in a ' +\n          '@context must be an absolute IRI or the empty string.',\n          'jsonld.SyntaxError', {code: 'invalid base IRI', context: ctx});\n      }\n\n      if(base !== null) {\n        base = jsonld.url.parse(base || '');\n      }\n      rval['@base'] = base;\n      defined['@base'] = true;\n    }\n\n    // handle @vocab\n    if('@vocab' in ctx) {\n      var value = ctx['@vocab'];\n      if(value === null) {\n        delete rval['@vocab'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else if(!_isAbsoluteIri(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@vocab\" in a ' +\n          '@context must be an absolute IRI.',\n          'jsonld.SyntaxError', {code: 'invalid vocab mapping', context: ctx});\n      } else {\n        rval['@vocab'] = value;\n      }\n      defined['@vocab'] = true;\n    }\n\n    // handle @language\n    if('@language' in ctx) {\n      var value = ctx['@language'];\n      if(value === null) {\n        delete rval['@language'];\n      } else if(!_isString(value)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; the value of \"@language\" in a ' +\n          '@context must be a string or null.',\n          'jsonld.SyntaxError',\n          {code: 'invalid default language', context: ctx});\n      } else {\n        rval['@language'] = value.toLowerCase();\n      }\n      defined['@language'] = true;\n    }\n\n    // process all other keys\n    for(var key in ctx) {\n      _createTermDefinition(rval, ctx, key, defined);\n    }\n\n    // cache result\n    if(jsonld.cache.activeCtx) {\n      jsonld.cache.activeCtx.set(activeCtx, ctx, rval);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Expands a language map.\n *\n * @param languageMap the language map to expand.\n *\n * @return the expanded language map.\n */\nfunction _expandLanguageMap(languageMap) {\n  var rval = [];\n  var keys = Object.keys(languageMap).sort();\n  for(var ki = 0; ki < keys.length; ++ki) {\n    var key = keys[ki];\n    var val = languageMap[key];\n    if(!_isArray(val)) {\n      val = [val];\n    }\n    for(var vi = 0; vi < val.length; ++vi) {\n      var item = val[vi];\n      if(item === null) {\n          // null values are allowed (8.5) but ignored (3.1)\n          continue;\n      }\n      if(!_isString(item)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; language map values must be strings.',\n          'jsonld.SyntaxError',\n          {code: 'invalid language map value', languageMap: languageMap});\n      }\n      rval.push({\n        '@value': item,\n        '@language': key.toLowerCase()\n      });\n    }\n  }\n  return rval;\n}\n\n/**\n * Labels the blank nodes in the given value using the given IdentifierIssuer.\n *\n * @param issuer the IdentifierIssuer to use.\n * @param element the element with blank nodes to rename.\n *\n * @return the element.\n */\nfunction _labelBlankNodes(issuer, element) {\n  if(_isArray(element)) {\n    for(var i = 0; i < element.length; ++i) {\n      element[i] = _labelBlankNodes(issuer, element[i]);\n    }\n  } else if(_isList(element)) {\n    element['@list'] = _labelBlankNodes(issuer, element['@list']);\n  } else if(_isObject(element)) {\n    // relabel blank node\n    if(_isBlankNode(element)) {\n      element['@id'] = issuer.getId(element['@id']);\n    }\n\n    // recursively apply to all keys\n    var keys = Object.keys(element).sort();\n    for(var ki = 0; ki < keys.length; ++ki) {\n      var key = keys[ki];\n      if(key !== '@id') {\n        element[key] = _labelBlankNodes(issuer, element[key]);\n      }\n    }\n  }\n\n  return element;\n}\n\n/**\n * Expands the given value by using the coercion and keyword rules in the\n * given context.\n *\n * @param activeCtx the active context to use.\n * @param activeProperty the active property the value is associated with.\n * @param value the value to expand.\n *\n * @return the expanded value.\n */\nfunction _expandValue(activeCtx, activeProperty, value) {\n  // nothing to expand\n  if(value === null || value === undefined) {\n    return null;\n  }\n\n  // special-case expand @id and @type (skips '@id' expansion)\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  if(expandedProperty === '@id') {\n    return _expandIri(activeCtx, value, {base: true});\n  } else if(expandedProperty === '@type') {\n    return _expandIri(activeCtx, value, {vocab: true, base: true});\n  }\n\n  // get type definition from context\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n\n  // do @id expansion (automatic for @graph)\n  if(type === '@id' || (expandedProperty === '@graph' && _isString(value))) {\n    return {'@id': _expandIri(activeCtx, value, {base: true})};\n  }\n  // do @id expansion w/vocab\n  if(type === '@vocab') {\n    return {'@id': _expandIri(activeCtx, value, {vocab: true, base: true})};\n  }\n\n  // do not expand keyword values\n  if(_isKeyword(expandedProperty)) {\n    return value;\n  }\n\n  var rval = {};\n\n  if(type !== null) {\n    // other type\n    rval['@type'] = type;\n  } else if(_isString(value)) {\n    // check for language tagging for strings\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    if(language !== null) {\n      rval['@language'] = language;\n    }\n  }\n  // do conversion of values that aren't basic JSON types to strings\n  if(['boolean', 'number', 'string'].indexOf(typeof value) === -1) {\n    value = value.toString();\n  }\n  rval['@value'] = value;\n\n  return rval;\n}\n\n/**\n * Creates an array of RDF triples for the given graph.\n *\n * @param graph the graph to create RDF triples for.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param options the RDF serialization options.\n *\n * @return the array of RDF triples for the given graph.\n */\nfunction _graphToRDF(graph, issuer, options) {\n  var rval = [];\n\n  var ids = Object.keys(graph).sort();\n  for(var i = 0; i < ids.length; ++i) {\n    var id = ids[i];\n    var node = graph[id];\n    var properties = Object.keys(node).sort();\n    for(var pi = 0; pi < properties.length; ++pi) {\n      var property = properties[pi];\n      var items = node[property];\n      if(property === '@type') {\n        property = RDF_TYPE;\n      } else if(_isKeyword(property)) {\n        continue;\n      }\n\n      for(var ii = 0; ii < items.length; ++ii) {\n        var item = items[ii];\n\n        // RDF subject\n        var subject = {};\n        subject.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        subject.value = id;\n\n        // skip relative IRI subjects\n        if(!_isAbsoluteIri(id)) {\n          continue;\n        }\n\n        // RDF predicate\n        var predicate = {};\n        predicate.type = (property.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n        predicate.value = property;\n\n        // skip relative IRI predicates\n        if(!_isAbsoluteIri(property)) {\n          continue;\n        }\n\n        // skip blank node predicates unless producing generalized RDF\n        if(predicate.type === 'blank node' && !options.produceGeneralizedRdf) {\n          continue;\n        }\n\n        // convert @list to triples\n        if(_isList(item)) {\n          _listToRDF(item['@list'], issuer, subject, predicate, rval);\n        } else {\n          // convert value or node object to triple\n          var object = _objectToRDF(item);\n          // skip null objects (they are relative IRIs)\n          if(object) {\n            rval.push({subject: subject, predicate: predicate, object: object});\n          }\n        }\n      }\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Converts a @list value into linked list of blank node RDF triples\n * (an RDF collection).\n *\n * @param list the @list value.\n * @param issuer a IdentifierIssuer for assigning blank node names.\n * @param subject the subject for the head of the list.\n * @param predicate the predicate for the head of the list.\n * @param triples the array of triples to append to.\n */\nfunction _listToRDF(list, issuer, subject, predicate, triples) {\n  var first = {type: 'IRI', value: RDF_FIRST};\n  var rest = {type: 'IRI', value: RDF_REST};\n  var nil = {type: 'IRI', value: RDF_NIL};\n\n  for(var i = 0; i < list.length; ++i) {\n    var item = list[i];\n\n    var blankNode = {type: 'blank node', value: issuer.getId()};\n    triples.push({subject: subject, predicate: predicate, object: blankNode});\n\n    subject = blankNode;\n    predicate = first;\n    var object = _objectToRDF(item);\n\n    // skip null objects (they are relative IRIs)\n    if(object) {\n      triples.push({subject: subject, predicate: predicate, object: object});\n    }\n\n    predicate = rest;\n  }\n\n  triples.push({subject: subject, predicate: predicate, object: nil});\n}\n\n/**\n * Converts a JSON-LD value object to an RDF literal or a JSON-LD string or\n * node object to an RDF resource.\n *\n * @param item the JSON-LD value or node object.\n *\n * @return the RDF literal or RDF resource.\n */\nfunction _objectToRDF(item) {\n  var object = {};\n\n  // convert value object to RDF\n  if(_isValue(item)) {\n    object.type = 'literal';\n    var value = item['@value'];\n    var datatype = item['@type'] || null;\n\n    // convert to XSD datatypes as appropriate\n    if(_isBoolean(value)) {\n      object.value = value.toString();\n      object.datatype = datatype || XSD_BOOLEAN;\n    } else if(_isDouble(value) || datatype === XSD_DOUBLE) {\n      if(!_isDouble(value)) {\n        value = parseFloat(value);\n      }\n      // canonical double representation\n      object.value = value.toExponential(15).replace(/(\\d)0*e\\+?/, '$1E');\n      object.datatype = datatype || XSD_DOUBLE;\n    } else if(_isNumber(value)) {\n      object.value = value.toFixed(0);\n      object.datatype = datatype || XSD_INTEGER;\n    } else if('@language' in item) {\n      object.value = value;\n      object.datatype = datatype || RDF_LANGSTRING;\n      object.language = item['@language'];\n    } else {\n      object.value = value;\n      object.datatype = datatype || XSD_STRING;\n    }\n  } else {\n    // convert string/node object to RDF\n    var id = _isObject(item) ? item['@id'] : item;\n    object.type = (id.indexOf('_:') === 0) ? 'blank node' : 'IRI';\n    object.value = id;\n  }\n\n  // skip relative IRIs\n  if(object.type === 'IRI' && !_isAbsoluteIri(object.value)) {\n    return null;\n  }\n\n  return object;\n}\n\n/**\n * Converts an RDF triple object to a JSON-LD object.\n *\n * @param o the RDF triple object to convert.\n * @param useNativeTypes true to output native types, false not to.\n *\n * @return the JSON-LD object.\n */\nfunction _RDFToObject(o, useNativeTypes) {\n  // convert IRI/blank node object to JSON-LD\n  if(o.type === 'IRI' || o.type === 'blank node') {\n    return {'@id': o.value};\n  }\n\n  // convert literal to JSON-LD\n  var rval = {'@value': o.value};\n\n  // add language\n  if(o.language) {\n    rval['@language'] = o.language;\n  } else {\n    var type = o.datatype;\n    if(!type) {\n      type = XSD_STRING;\n    }\n    // use native types for certain xsd types\n    if(useNativeTypes) {\n      if(type === XSD_BOOLEAN) {\n        if(rval['@value'] === 'true') {\n          rval['@value'] = true;\n        } else if(rval['@value'] === 'false') {\n          rval['@value'] = false;\n        }\n      } else if(_isNumeric(rval['@value'])) {\n        if(type === XSD_INTEGER) {\n          var i = parseInt(rval['@value'], 10);\n          if(i.toFixed(0) === rval['@value']) {\n            rval['@value'] = i;\n          }\n        } else if(type === XSD_DOUBLE) {\n          rval['@value'] = parseFloat(rval['@value']);\n        }\n      }\n      // do not add native type\n      if([XSD_BOOLEAN, XSD_INTEGER, XSD_DOUBLE, XSD_STRING]\n        .indexOf(type) === -1) {\n        rval['@type'] = type;\n      }\n    } else if(type !== XSD_STRING) {\n      rval['@type'] = type;\n    }\n  }\n\n  return rval;\n}\n\n/**\n * Compares two RDF triples for equality.\n *\n * @param t1 the first triple.\n * @param t2 the second triple.\n *\n * @return true if the triples are the same, false if not.\n */\nfunction _compareRDFTriples(t1, t2) {\n  var attrs = ['subject', 'predicate', 'object'];\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(t1[attr].type !== t2[attr].type || t1[attr].value !== t2[attr].value) {\n      return false;\n    }\n  }\n  if(t1.object.language !== t2.object.language) {\n    return false;\n  }\n  if(t1.object.datatype !== t2.object.datatype) {\n    return false;\n  }\n  return true;\n}\n\n/////////////////////////////// DEFINE URDNA2015 //////////////////////////////\n\nvar URDNA2015 = (function() {\n\nvar POSITIONS = {'subject': 's', 'object': 'o', 'name': 'g'};\n\nvar Normalize = function(options) {\n  options = options || {};\n  this.name = 'URDNA2015';\n  this.options = options;\n  this.blankNodeInfo = {};\n  this.hashToBlankNodes = {};\n  this.canonicalIssuer = new IdentifierIssuer('_:c14n');\n  this.quads = [];\n  this.schedule = {};\n  if('maxCallStackDepth' in options) {\n    this.schedule.MAX_DEPTH = options.maxCallStackDepth;\n  } else {\n    this.schedule.MAX_DEPTH = 500;\n  }\n  if('maxTotalCallStackDepth' in options) {\n    this.schedule.MAX_TOTAL_DEPTH = options.maxCallStackDepth;\n  } else {\n    this.schedule.MAX_TOTAL_DEPTH = 0xFFFFFFFF;\n  }\n  this.schedule.depth = 0;\n  this.schedule.totalDepth = 0;\n  if('timeSlice' in options) {\n    this.schedule.timeSlice = options.timeSlice;\n  } else {\n    // milliseconds\n    this.schedule.timeSlice = 10;\n  }\n};\n\n// do some work in a time slice, but in serial\nNormalize.prototype.doWork = function(fn, callback) {\n  var schedule = this.schedule;\n\n  if(schedule.totalDepth >= schedule.MAX_TOTAL_DEPTH) {\n    return callback(new Error(\n      'Maximum total call stack depth exceeded; normalization aborting.'));\n  }\n\n  (function work() {\n    if(schedule.depth === schedule.MAX_DEPTH) {\n      // stack too deep, run on next tick\n      schedule.depth = 0;\n      schedule.running = false;\n      return jsonld.nextTick(work);\n    }\n\n    // if not yet running, force run\n    var now = new Date().getTime();\n    if(!schedule.running) {\n      schedule.start = new Date().getTime();\n      schedule.deadline = schedule.start + schedule.timeSlice;\n    }\n\n    // TODO: should also include an estimate of expectedWorkTime\n    if(now < schedule.deadline) {\n      schedule.running = true;\n      schedule.depth++;\n      schedule.totalDepth++;\n      return fn(function(err, result) {\n        schedule.depth--;\n        schedule.totalDepth--;\n        callback(err, result);\n      });\n    }\n\n    // not enough time left in this slice, run after letting browser\n    // do some other things\n    schedule.depth = 0;\n    schedule.running = false;\n    jsonld.setImmediate(work);\n  })();\n};\n\n// asynchronously loop\nNormalize.prototype.forEach = function(iterable, fn, callback) {\n  var self = this;\n  var iterator;\n  var idx = 0;\n  var length;\n  if(_isArray(iterable)) {\n    length = iterable.length;\n    iterator = function() {\n      if(idx === length) {\n        return false;\n      }\n      iterator.value = iterable[idx++];\n      iterator.key = idx;\n      return true;\n    };\n  } else {\n    var keys = Object.keys(iterable);\n    length = keys.length;\n    iterator = function() {\n      if(idx === length) {\n        return false;\n      }\n      iterator.key = keys[idx++];\n      iterator.value = iterable[iterator.key];\n      return true;\n    };\n  }\n\n  (function iterate(err, result) {\n    if(err) {\n      return callback(err);\n    }\n    if(iterator()) {\n      return self.doWork(function() {\n        fn(iterator.value, iterator.key, iterate);\n      });\n    }\n    callback();\n  })();\n};\n\n// asynchronous waterfall\nNormalize.prototype.waterfall = function(fns, callback) {\n  var self = this;\n  self.forEach(fns, function(fn, idx, callback) {\n    self.doWork(fn, callback);\n  }, callback);\n};\n\n// asynchronous while\nNormalize.prototype.whilst = function(condition, fn, callback) {\n  var self = this;\n  (function loop(err) {\n    if(err) {\n      return callback(err);\n    }\n    if(!condition()) {\n      return callback();\n    }\n    self.doWork(fn, loop);\n  })();\n};\n\n// 4.4) Normalization Algorithm\nNormalize.prototype.main = function(dataset, callback) {\n  var self = this;\n  self.schedule.start = new Date().getTime();\n  var result;\n\n  // handle invalid output format\n  if(self.options.format) {\n    if(self.options.format !== 'application/nquads') {\n      return callback(new JsonLdError(\n        'Unknown output format.',\n        'jsonld.UnknownFormat', {format: self.options.format}));\n    }\n  }\n\n  // 1) Create the normalization state.\n\n  // Note: Optimize by generating non-normalized blank node map concurrently.\n  var nonNormalized = {};\n\n  self.waterfall([\n    function(callback) {\n      // 2) For every quad in input dataset:\n      self.forEach(dataset, function(triples, graphName, callback) {\n        if(graphName === '@default') {\n          graphName = null;\n        }\n        self.forEach(triples, function(quad, idx, callback) {\n          if(graphName !== null) {\n            if(graphName.indexOf('_:') === 0) {\n              quad.name = {type: 'blank node', value: graphName};\n            } else {\n              quad.name = {type: 'IRI', value: graphName};\n            }\n          }\n          self.quads.push(quad);\n\n          // 2.1) For each blank node that occurs in the quad, add a reference\n          // to the quad using the blank node identifier in the blank node to\n          // quads map, creating a new entry if necessary.\n          self.forEachComponent(quad, function(component) {\n            if(component.type !== 'blank node') {\n              return;\n            }\n            var id = component.value;\n            if(id in self.blankNodeInfo) {\n              self.blankNodeInfo[id].quads.push(quad);\n            } else {\n              nonNormalized[id] = true;\n              self.blankNodeInfo[id] = {quads: [quad]};\n            }\n          });\n          callback();\n        }, callback);\n      }, callback);\n    },\n    function(callback) {\n      // 3) Create a list of non-normalized blank node identifiers\n      // non-normalized identifiers and populate it using the keys from the\n      // blank node to quads map.\n      // Note: We use a map here and it was generated during step 2.\n\n      // 4) Initialize simple, a boolean flag, to true.\n      var simple = true;\n\n      // 5) While simple is true, issue canonical identifiers for blank nodes:\n      self.whilst(function() { return simple; }, function(callback) {\n        // 5.1) Set simple to false.\n        simple = false;\n\n        // 5.2) Clear hash to blank nodes map.\n        self.hashToBlankNodes = {};\n\n        self.waterfall([\n          function(callback) {\n            // 5.3) For each blank node identifier identifier in non-normalized\n            // identifiers:\n            self.forEach(nonNormalized, function(value, id, callback) {\n              // 5.3.1) Create a hash, hash, according to the Hash First Degree\n              // Quads algorithm.\n              self.hashFirstDegreeQuads(id, function(err, hash) {\n                if(err) {\n                  return callback(err);\n                }\n                // 5.3.2) Add hash and identifier to hash to blank nodes map,\n                // creating a new entry if necessary.\n                if(hash in self.hashToBlankNodes) {\n                  self.hashToBlankNodes[hash].push(id);\n                } else {\n                  self.hashToBlankNodes[hash] = [id];\n                }\n                callback();\n              });\n            }, callback);\n          },\n          function(callback) {\n            // 5.4) For each hash to identifier list mapping in hash to blank\n            // nodes map, lexicographically-sorted by hash:\n            var hashes = Object.keys(self.hashToBlankNodes).sort();\n            self.forEach(hashes, function(hash, i, callback) {\n              // 5.4.1) If the length of identifier list is greater than 1,\n              // continue to the next mapping.\n              var idList = self.hashToBlankNodes[hash];\n              if(idList.length > 1) {\n                return callback();\n              }\n\n              // 5.4.2) Use the Issue Identifier algorithm, passing canonical\n              // issuer and the single blank node identifier in identifier\n              // list, identifier, to issue a canonical replacement identifier\n              // for identifier.\n              // TODO: consider changing `getId` to `issue`\n              var id = idList[0];\n              self.canonicalIssuer.getId(id);\n\n              // 5.4.3) Remove identifier from non-normalized identifiers.\n              delete nonNormalized[id];\n\n              // 5.4.4) Remove hash from the hash to blank nodes map.\n              delete self.hashToBlankNodes[hash];\n\n              // 5.4.5) Set simple to true.\n              simple = true;\n              callback();\n            }, callback);\n          }\n        ], callback);\n      }, callback);\n    },\n    function(callback) {\n      // 6) For each hash to identifier list mapping in hash to blank nodes map,\n      // lexicographically-sorted by hash:\n      var hashes = Object.keys(self.hashToBlankNodes).sort();\n      self.forEach(hashes, function(hash, idx, callback) {\n        // 6.1) Create hash path list where each item will be a result of\n        // running the Hash N-Degree Quads algorithm.\n        var hashPathList = [];\n\n        // 6.2) For each blank node identifier identifier in identifier list:\n        var idList = self.hashToBlankNodes[hash];\n        self.waterfall([\n          function(callback) {\n            self.forEach(idList, function(id, idx, callback) {\n              // 6.2.1) If a canonical identifier has already been issued for\n              // identifier, continue to the next identifier.\n              if(self.canonicalIssuer.hasId(id)) {\n                return callback();\n              }\n\n              // 6.2.2) Create temporary issuer, an identifier issuer\n              // initialized with the prefix _:b.\n              var issuer = new IdentifierIssuer('_:b');\n\n              // 6.2.3) Use the Issue Identifier algorithm, passing temporary\n              // issuer and identifier, to issue a new temporary blank node\n              // identifier for identifier.\n              issuer.getId(id);\n\n              // 6.2.4) Run the Hash N-Degree Quads algorithm, passing\n              // temporary issuer, and append the result to the hash path list.\n              self.hashNDegreeQuads(id, issuer, function(err, result) {\n                if(err) {\n                  return callback(err);\n                }\n                hashPathList.push(result);\n                callback();\n              });\n            }, callback);\n          },\n          function(callback) {\n            // 6.3) For each result in the hash path list,\n            // lexicographically-sorted by the hash in result:\n            hashPathList.sort(function(a, b) {\n              return (a.hash < b.hash) ? -1 : ((a.hash > b.hash) ? 1 : 0);\n            });\n            self.forEach(hashPathList, function(result, idx, callback) {\n              // 6.3.1) For each blank node identifier, existing identifier,\n              // that was issued a temporary identifier by identifier issuer\n              // in result, issue a canonical identifier, in the same order,\n              // using the Issue Identifier algorithm, passing canonical\n              // issuer and existing identifier.\n              for(var existing in result.issuer.existing) {\n                self.canonicalIssuer.getId(existing);\n              }\n              callback();\n            }, callback);\n          }\n        ], callback);\n      }, callback);\n    }, function(callback) {\n      /* Note: At this point all blank nodes in the set of RDF quads have been\n      assigned canonical identifiers, which have been stored in the canonical\n      issuer. Here each quad is updated by assigning each of its blank nodes\n      its new identifier. */\n\n      // 7) For each quad, quad, in input dataset:\n      var normalized = [];\n      self.waterfall([\n        function(callback) {\n          self.forEach(self.quads, function(quad, idx, callback) {\n            // 7.1) Create a copy, quad copy, of quad and replace any existing\n            // blank node identifiers using the canonical identifiers\n            // previously issued by canonical issuer.\n            // Note: We optimize away the copy here.\n            self.forEachComponent(quad, function(component) {\n              if(component.type === 'blank node' &&\n                component.value.indexOf(self.canonicalIssuer.prefix) !== 0) {\n                component.value = self.canonicalIssuer.getId(component.value);\n              }\n            });\n            // 7.2) Add quad copy to the normalized dataset.\n            normalized.push(_toNQuad(quad));\n            callback();\n          }, callback);\n        },\n        function(callback) {\n          // sort normalized output\n          normalized.sort();\n\n          // 8) Return the normalized dataset.\n          if(self.options.format === 'application/nquads') {\n            result = normalized.join('');\n            return callback();\n          }\n\n          result = _parseNQuads(normalized.join(''));\n          callback();\n        }\n      ], callback);\n    }\n  ], function(err) {\n    callback(err, result);\n  });\n};\n\n// 4.6) Hash First Degree Quads\nNormalize.prototype.hashFirstDegreeQuads = function(id, callback) {\n  var self = this;\n\n  // return cached hash\n  var info = self.blankNodeInfo[id];\n  if('hash' in info) {\n    return callback(null, info.hash);\n  }\n\n  // 1) Initialize nquads to an empty list. It will be used to store quads in\n  // N-Quads format.\n  var nquads = [];\n\n  // 2) Get the list of quads quads associated with the reference blank node\n  // identifier in the blank node to quads map.\n  var quads = info.quads;\n\n  // 3) For each quad quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) Serialize the quad in N-Quads format with the following special\n    // rule:\n\n    // 3.1.1) If any component in quad is an blank node, then serialize it\n    // using a special identifier as follows:\n    var copy = {predicate: quad.predicate};\n    self.forEachComponent(quad, function(component, key) {\n      // 3.1.2) If the blank node's existing blank node identifier matches the\n      // reference blank node identifier then use the blank node identifier _:a,\n      // otherwise, use the blank node identifier _:z.\n      copy[key] = self.modifyFirstDegreeComponent(id, component, key);\n    });\n    nquads.push(_toNQuad(copy));\n    callback();\n  }, function(err) {\n    if(err) {\n      return callback(err);\n    }\n    // 4) Sort nquads in lexicographical order.\n    nquads.sort();\n\n    // 5) Return the hash that results from passing the sorted, joined nquads\n    // through the hash algorithm.\n    info.hash = NormalizeHash.hashNQuads(self.name, nquads);\n    callback(null, info.hash);\n  });\n};\n\n// helper for modifying component during Hash First Degree Quads\nNormalize.prototype.modifyFirstDegreeComponent = function(id, component) {\n  if(component.type !== 'blank node') {\n    return component;\n  }\n  component = _clone(component);\n  component.value = (component.value === id ? '_:a' : '_:z');\n  return component;\n};\n\n// 4.7) Hash Related Blank Node\nNormalize.prototype.hashRelatedBlankNode = function(\n  related, quad, issuer, position, callback) {\n  var self = this;\n\n  // 1) Set the identifier to use for related, preferring first the canonical\n  // identifier for related if issued, second the identifier issued by issuer\n  // if issued, and last, if necessary, the result of the Hash First Degree\n  // Quads algorithm, passing related.\n  var id;\n  self.waterfall([\n    function(callback) {\n      if(self.canonicalIssuer.hasId(related)) {\n        id = self.canonicalIssuer.getId(related);\n        return callback();\n      }\n      if(issuer.hasId(related)) {\n        id = issuer.getId(related);\n        return callback();\n      }\n      self.hashFirstDegreeQuads(related, function(err, hash) {\n        if(err) {\n          return callback(err);\n        }\n        id = hash;\n        callback();\n      });\n    }\n  ], function(err) {\n    if(err) {\n      return callback(err);\n    }\n\n    // 2) Initialize a string input to the value of position.\n    // Note: We use a hash object instead.\n    var md = new NormalizeHash(self.name);\n    md.update(position);\n\n    // 3) If position is not g, append <, the value of the predicate in quad,\n    // and > to input.\n    if(position !== 'g') {\n      md.update(self.getRelatedPredicate(quad));\n    }\n\n    // 4) Append identifier to input.\n    md.update(id);\n\n    // 5) Return the hash that results from passing input through the hash\n    // algorithm.\n    return callback(null, md.digest());\n  });\n};\n\n// helper for getting a related predicate\nNormalize.prototype.getRelatedPredicate = function(quad) {\n  return '<' + quad.predicate.value + '>';\n};\n\n// 4.8) Hash N-Degree Quads\nNormalize.prototype.hashNDegreeQuads = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  // Note: 2) and 3) handled within `createHashToRelated`\n  var hashToRelated;\n  var md = new NormalizeHash(self.name);\n  self.waterfall([\n    function(callback) {\n      self.createHashToRelated(id, issuer, function(err, result) {\n        if(err) {\n          return callback(err);\n        }\n        hashToRelated = result;\n        callback();\n      });\n    },\n    function(callback) {\n      // 4) Create an empty string, data to hash.\n      // Note: We created a hash object `md` above instead.\n\n      // 5) For each related hash to blank node list mapping in hash to related\n      // blank nodes map, sorted lexicographically by related hash:\n      var hashes = Object.keys(hashToRelated).sort();\n      self.forEach(hashes, function(hash, idx, callback) {\n        // 5.1) Append the related hash to the data to hash.\n        md.update(hash);\n\n        // 5.2) Create a string chosen path.\n        var chosenPath = '';\n\n        // 5.3) Create an unset chosen issuer variable.\n        var chosenIssuer;\n\n        // 5.4) For each permutation of blank node list:\n        var permutator = new Permutator(hashToRelated[hash]);\n        self.whilst(\n          function() { return permutator.hasNext(); },\n          function(nextPermutation) {\n          var permutation = permutator.next();\n\n          // 5.4.1) Create a copy of issuer, issuer copy.\n          var issuerCopy = issuer.clone();\n\n          // 5.4.2) Create a string path.\n          var path = '';\n\n          // 5.4.3) Create a recursion list, to store blank node identifiers\n          // that must be recursively processed by this algorithm.\n          var recursionList = [];\n\n          self.waterfall([\n            function(callback) {\n              // 5.4.4) For each related in permutation:\n              self.forEach(permutation, function(related, idx, callback) {\n                // 5.4.4.1) If a canonical identifier has been issued for\n                // related, append it to path.\n                if(self.canonicalIssuer.hasId(related)) {\n                  path += self.canonicalIssuer.getId(related);\n                } else {\n                  // 5.4.4.2) Otherwise:\n                  // 5.4.4.2.1) If issuer copy has not issued an identifier for\n                  // related, append related to recursion list.\n                  if(!issuerCopy.hasId(related)) {\n                    recursionList.push(related);\n                  }\n                  // 5.4.4.2.2) Use the Issue Identifier algorithm, passing\n                  // issuer copy and related and append the result to path.\n                  path += issuerCopy.getId(related);\n                }\n\n                // 5.4.4.3) If chosen path is not empty and the length of path\n                // is greater than or equal to the length of chosen path and\n                // path is lexicographically greater than chosen path, then\n                // skip to the next permutation.\n                if(chosenPath.length !== 0 &&\n                  path.length >= chosenPath.length && path > chosenPath) {\n                  // FIXME: may cause inaccurate total depth calculation\n                  return nextPermutation();\n                }\n                callback();\n              }, callback);\n            },\n            function(callback) {\n              // 5.4.5) For each related in recursion list:\n              self.forEach(recursionList, function(related, idx, callback) {\n                // 5.4.5.1) Set result to the result of recursively executing\n                // the Hash N-Degree Quads algorithm, passing related for\n                // identifier and issuer copy for path identifier issuer.\n                self.hashNDegreeQuads(\n                  related, issuerCopy, function(err, result) {\n                  if(err) {\n                    return callback(err);\n                  }\n\n                  // 5.4.5.2) Use the Issue Identifier algorithm, passing issuer\n                  // copy and related and append the result to path.\n                  path += issuerCopy.getId(related);\n\n                  // 5.4.5.3) Append <, the hash in result, and > to path.\n                  path += '<' + result.hash + '>';\n\n                  // 5.4.5.4) Set issuer copy to the identifier issuer in\n                  // result.\n                  issuerCopy = result.issuer;\n\n                  // 5.4.5.5) If chosen path is not empty and the length of path\n                  // is greater than or equal to the length of chosen path and\n                  // path is lexicographically greater than chosen path, then\n                  // skip to the next permutation.\n                  if(chosenPath.length !== 0 &&\n                    path.length >= chosenPath.length && path > chosenPath) {\n                    // FIXME: may cause inaccurate total depth calculation\n                    return nextPermutation();\n                  }\n                  callback();\n                });\n              }, callback);\n            },\n            function(callback) {\n              // 5.4.6) If chosen path is empty or path is lexicographically\n              // less than chosen path, set chosen path to path and chosen\n              // issuer to issuer copy.\n              if(chosenPath.length === 0 || path < chosenPath) {\n                chosenPath = path;\n                chosenIssuer = issuerCopy;\n              }\n              callback();\n            }\n          ], nextPermutation);\n        }, function(err) {\n          if(err) {\n            return callback(err);\n          }\n\n          // 5.5) Append chosen path to data to hash.\n          md.update(chosenPath);\n\n          // 5.6) Replace issuer, by reference, with chosen issuer.\n          issuer = chosenIssuer;\n          callback();\n        });\n      }, callback);\n    }\n  ], function(err) {\n    // 6) Return issuer and the hash that results from passing data to hash\n    // through the hash algorithm.\n    callback(err, {hash: md.digest(), issuer: issuer});\n  });\n};\n\n// helper for creating hash to related blank nodes map\nNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  var hashToRelated = {};\n\n  // 2) Get a reference, quads, to the list of quads in the blank node to\n  // quads map for the key identifier.\n  var quads = self.blankNodeInfo[id].quads;\n\n  // 3) For each quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) For each component in quad, if component is the subject, object,\n    // and graph name and it is a blank node that is not identified by\n    // identifier:\n    self.forEach(quad, function(component, key, callback) {\n      if(key === 'predicate' ||\n        !(component.type === 'blank node' && component.value !== id)) {\n        return callback();\n      }\n      // 3.1.1) Set hash to the result of the Hash Related Blank Node\n      // algorithm, passing the blank node identifier for component as\n      // related, quad, path identifier issuer as issuer, and position as\n      // either s, o, or g based on whether component is a subject, object,\n      // graph name, respectively.\n      var related = component.value;\n      var position = POSITIONS[key];\n      self.hashRelatedBlankNode(\n        related, quad, issuer, position, function(err, hash) {\n        if(err) {\n          return callback(err);\n        }\n        // 3.1.2) Add a mapping of hash to the blank node identifier for\n        // component to hash to related blank nodes map, adding an entry as\n        // necessary.\n        if(hash in hashToRelated) {\n          hashToRelated[hash].push(related);\n        } else {\n          hashToRelated[hash] = [related];\n        }\n        callback();\n      });\n    }, callback);\n  }, function(err) {\n    callback(err, hashToRelated);\n  });\n};\n\n// helper that iterates over quad components (skips predicate)\nNormalize.prototype.forEachComponent = function(quad, op) {\n  for(var key in quad) {\n    // skip `predicate`\n    if(key === 'predicate') {\n      continue;\n    }\n    op(quad[key], key, quad);\n  }\n};\n\nreturn Normalize;\n\n})(); // end of define URDNA2015\n\n/////////////////////////////// DEFINE URGNA2012 //////////////////////////////\n\nvar URGNA2012 = (function() {\n\nvar Normalize = function(options) {\n  URDNA2015.call(this, options);\n  this.name = 'URGNA2012';\n};\nNormalize.prototype = new URDNA2015();\n\n// helper for modifying component during Hash First Degree Quads\nNormalize.prototype.modifyFirstDegreeComponent = function(id, component, key) {\n  if(component.type !== 'blank node') {\n    return component;\n  }\n  component = _clone(component);\n  if(key === 'name') {\n    component.value = '_:g';\n  } else {\n    component.value = (component.value === id ? '_:a' : '_:z');\n  }\n  return component;\n};\n\n// helper for getting a related predicate\nNormalize.prototype.getRelatedPredicate = function(quad) {\n  return quad.predicate.value;\n};\n\n// helper for creating hash to related blank nodes map\nNormalize.prototype.createHashToRelated = function(id, issuer, callback) {\n  var self = this;\n\n  // 1) Create a hash to related blank nodes map for storing hashes that\n  // identify related blank nodes.\n  var hashToRelated = {};\n\n  // 2) Get a reference, quads, to the list of quads in the blank node to\n  // quads map for the key identifier.\n  var quads = self.blankNodeInfo[id].quads;\n\n  // 3) For each quad in quads:\n  self.forEach(quads, function(quad, idx, callback) {\n    // 3.1) If the quad's subject is a blank node that does not match\n    // identifier, set hash to the result of the Hash Related Blank Node\n    // algorithm, passing the blank node identifier for subject as related,\n    // quad, path identifier issuer as issuer, and p as position.\n    var position;\n    var related;\n    if(quad.subject.type === 'blank node' && quad.subject.value !== id) {\n      related = quad.subject.value;\n      position = 'p';\n    } else if(quad.object.type === 'blank node' && quad.object.value !== id) {\n      // 3.2) Otherwise, if quad's object is a blank node that does not match\n      // identifier, to the result of the Hash Related Blank Node algorithm,\n      // passing the blank node identifier for object as related, quad, path\n      // identifier issuer as issuer, and r as position.\n      related = quad.object.value;\n      position = 'r';\n    } else {\n      // 3.3) Otherwise, continue to the next quad.\n      return callback();\n    }\n    // 3.4) Add a mapping of hash to the blank node identifier for the\n    // component that matched (subject or object) to hash to related blank\n    // nodes map, adding an entry as necessary.\n    self.hashRelatedBlankNode(\n      related, quad, issuer, position, function(err, hash) {\n      if(hash in hashToRelated) {\n        hashToRelated[hash].push(related);\n      } else {\n        hashToRelated[hash] = [related];\n      }\n      callback();\n    });\n  }, function(err) {\n    callback(err, hashToRelated);\n  });\n};\n\nreturn Normalize;\n\n})(); // end of define URGNA2012\n\n/**\n * Recursively flattens the subjects in the given JSON-LD expanded input\n * into a node map.\n *\n * @param input the JSON-LD expanded input.\n * @param graphs a map of graph name to subject map.\n * @param graph the name of the current graph.\n * @param issuer the blank node identifier issuer.\n * @param name the name assigned to the current input if it is a bnode.\n * @param list the list to append to, null for none.\n */\nfunction _createNodeMap(input, graphs, graph, issuer, name, list) {\n  // recurse through array\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _createNodeMap(input[i], graphs, graph, issuer, undefined, list);\n    }\n    return;\n  }\n\n  // add non-object to list\n  if(!_isObject(input)) {\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // add values to list\n  if(_isValue(input)) {\n    if('@type' in input) {\n      var type = input['@type'];\n      // rename @type blank node\n      if(type.indexOf('_:') === 0) {\n        input['@type'] = type = issuer.getId(type);\n      }\n    }\n    if(list) {\n      list.push(input);\n    }\n    return;\n  }\n\n  // Note: At this point, input must be a subject.\n\n  // spec requires @type to be named first, so assign names early\n  if('@type' in input) {\n    var types = input['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      var type = types[i];\n      if(type.indexOf('_:') === 0) {\n        issuer.getId(type);\n      }\n    }\n  }\n\n  // get name for subject\n  if(_isUndefined(name)) {\n    name = _isBlankNode(input) ? issuer.getId(input['@id']) : input['@id'];\n  }\n\n  // add subject reference to list\n  if(list) {\n    list.push({'@id': name});\n  }\n\n  // create new subject or merge into existing one\n  var subjects = graphs[graph];\n  var subject = subjects[name] = subjects[name] || {};\n  subject['@id'] = name;\n  var properties = Object.keys(input).sort();\n  for(var pi = 0; pi < properties.length; ++pi) {\n    var property = properties[pi];\n\n    // skip @id\n    if(property === '@id') {\n      continue;\n    }\n\n    // handle reverse properties\n    if(property === '@reverse') {\n      var referencedNode = {'@id': name};\n      var reverseMap = input['@reverse'];\n      for(var reverseProperty in reverseMap) {\n        var items = reverseMap[reverseProperty];\n        for(var ii = 0; ii < items.length; ++ii) {\n          var item = items[ii];\n          var itemName = item['@id'];\n          if(_isBlankNode(item)) {\n            itemName = issuer.getId(itemName);\n          }\n          _createNodeMap(item, graphs, graph, issuer, itemName);\n          jsonld.addValue(\n            subjects[itemName], reverseProperty, referencedNode,\n            {propertyIsArray: true, allowDuplicate: false});\n        }\n      }\n      continue;\n    }\n\n    // recurse into graph\n    if(property === '@graph') {\n      // add graph subjects map entry\n      if(!(name in graphs)) {\n        graphs[name] = {};\n      }\n      var g = (graph === '@merged') ? graph : name;\n      _createNodeMap(input[property], graphs, g, issuer);\n      continue;\n    }\n\n    // copy non-@type keywords\n    if(property !== '@type' && _isKeyword(property)) {\n      if(property === '@index' && property in subject &&\n        (input[property] !== subject[property] ||\n        input[property]['@id'] !== subject[property]['@id'])) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; conflicting @index property detected.',\n          'jsonld.SyntaxError',\n          {code: 'conflicting indexes', subject: subject});\n      }\n      subject[property] = input[property];\n      continue;\n    }\n\n    // iterate over objects\n    var objects = input[property];\n\n    // if property is a bnode, assign it a new id\n    if(property.indexOf('_:') === 0) {\n      property = issuer.getId(property);\n    }\n\n    // ensure property is added for empty arrays\n    if(objects.length === 0) {\n      jsonld.addValue(subject, property, [], {propertyIsArray: true});\n      continue;\n    }\n    for(var oi = 0; oi < objects.length; ++oi) {\n      var o = objects[oi];\n\n      if(property === '@type') {\n        // rename @type blank nodes\n        o = (o.indexOf('_:') === 0) ? issuer.getId(o) : o;\n      }\n\n      // handle embedded subject or subject reference\n      if(_isSubject(o) || _isSubjectReference(o)) {\n        // relabel blank node @id\n        var id = _isBlankNode(o) ? issuer.getId(o['@id']) : o['@id'];\n\n        // add reference and recurse\n        jsonld.addValue(\n          subject, property, {'@id': id},\n          {propertyIsArray: true, allowDuplicate: false});\n        _createNodeMap(o, graphs, graph, issuer, id);\n      } else if(_isList(o)) {\n        // handle @list\n        var _list = [];\n        _createNodeMap(o['@list'], graphs, graph, issuer, name, _list);\n        o = {'@list': _list};\n        jsonld.addValue(\n          subject, property, o,\n          {propertyIsArray: true, allowDuplicate: false});\n      } else {\n        // handle @value\n        _createNodeMap(o, graphs, graph, issuer, name);\n        jsonld.addValue(\n          subject, property, o, {propertyIsArray: true, allowDuplicate: false});\n      }\n    }\n  }\n}\n\nfunction _mergeNodeMaps(graphs) {\n  // add all non-default graphs to default graph\n  var defaultGraph = graphs['@default'];\n  var graphNames = Object.keys(graphs).sort();\n  for(var i = 0; i < graphNames.length; ++i) {\n    var graphName = graphNames[i];\n    if(graphName === '@default') {\n      continue;\n    }\n    var nodeMap = graphs[graphName];\n    var subject = defaultGraph[graphName];\n    if(!subject) {\n      defaultGraph[graphName] = subject = {\n        '@id': graphName,\n        '@graph': []\n      };\n    } else if(!('@graph' in subject)) {\n      subject['@graph'] = [];\n    }\n    var graph = subject['@graph'];\n    var ids = Object.keys(nodeMap).sort();\n    for(var ii = 0; ii < ids.length; ++ii) {\n      var node = nodeMap[ids[ii]];\n      // only add full subjects\n      if(!_isSubjectReference(node)) {\n        graph.push(node);\n      }\n    }\n  }\n  return defaultGraph;\n}\n\n/**\n * Frames subjects according to the given frame.\n *\n * @param state the current framing state.\n * @param subjects the subjects to filter.\n * @param frame the frame.\n * @param parent the parent subject or top-level array.\n * @param property the parent property, initialized to null.\n */\nfunction _frame(state, subjects, frame, parent, property) {\n  // validate the frame\n  _validateFrame(frame);\n  frame = frame[0];\n\n  // get flags for current frame\n  var options = state.options;\n  var flags = {\n    embed: _getFrameFlag(frame, options, 'embed'),\n    explicit: _getFrameFlag(frame, options, 'explicit'),\n    requireAll: _getFrameFlag(frame, options, 'requireAll')\n  };\n\n  // filter out subjects that match the frame\n  var matches = _filterSubjects(state, subjects, frame, flags);\n\n  // add matches to output\n  var ids = Object.keys(matches).sort();\n  for(var idx = 0; idx < ids.length; ++idx) {\n    var id = ids[idx];\n    var subject = matches[id];\n\n    if(flags.embed === '@link' && id in state.link) {\n      // TODO: may want to also match an existing linked subject against\n      // the current frame ... so different frames could produce different\n      // subjects that are only shared in-memory when the frames are the same\n\n      // add existing linked subject\n      _addFrameOutput(parent, property, state.link[id]);\n      continue;\n    }\n\n    /* Note: In order to treat each top-level match as a compartmentalized\n    result, clear the unique embedded subjects map when the property is null,\n    which only occurs at the top-level. */\n    if(property === null) {\n      state.uniqueEmbeds = {};\n    }\n\n    // start output for subject\n    var output = {};\n    output['@id'] = id;\n    state.link[id] = output;\n\n    // if embed is @never or if a circular reference would be created by an\n    // embed, the subject cannot be embedded, just add the reference;\n    // note that a circular reference won't occur when the embed flag is\n    // `@link` as the above check will short-circuit before reaching this point\n    if(flags.embed === '@never' ||\n      _createsCircularReference(subject, state.subjectStack)) {\n      _addFrameOutput(parent, property, output);\n      continue;\n    }\n\n    // if only the last match should be embedded\n    if(flags.embed === '@last') {\n      // remove any existing embed\n      if(id in state.uniqueEmbeds) {\n        _removeEmbed(state, id);\n      }\n      state.uniqueEmbeds[id] = {parent: parent, property: property};\n    }\n\n    // push matching subject onto stack to enable circular embed checks\n    state.subjectStack.push(subject);\n\n    // iterate over subject properties\n    var props = Object.keys(subject).sort();\n    for(var i = 0; i < props.length; i++) {\n      var prop = props[i];\n\n      // copy keywords to output\n      if(_isKeyword(prop)) {\n        output[prop] = _clone(subject[prop]);\n        continue;\n      }\n\n      // explicit is on and property isn't in the frame, skip processing\n      if(flags.explicit && !(prop in frame)) {\n        continue;\n      }\n\n      // add objects\n      var objects = subject[prop];\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var o = objects[oi];\n\n        // recurse into list\n        if(_isList(o)) {\n          // add empty list\n          var list = {'@list': []};\n          _addFrameOutput(output, prop, list);\n\n          // add list objects\n          var src = o['@list'];\n          for(var n in src) {\n            o = src[n];\n            if(_isSubjectReference(o)) {\n              var subframe = (prop in frame ?\n                frame[prop][0]['@list'] : _createImplicitFrame(flags));\n              // recurse into subject reference\n              _frame(state, [o['@id']], subframe, list, '@list');\n            } else {\n              // include other values automatically\n              _addFrameOutput(list, '@list', _clone(o));\n            }\n          }\n          continue;\n        }\n\n        if(_isSubjectReference(o)) {\n          // recurse into subject reference\n          var subframe = (prop in frame ?\n            frame[prop] : _createImplicitFrame(flags));\n          _frame(state, [o['@id']], subframe, output, prop);\n        } else {\n          // include other values automatically\n          _addFrameOutput(output, prop, _clone(o));\n        }\n      }\n    }\n\n    // handle defaults\n    var props = Object.keys(frame).sort();\n    for(var i = 0; i < props.length; ++i) {\n      var prop = props[i];\n\n      // skip keywords\n      if(_isKeyword(prop)) {\n        continue;\n      }\n\n      // if omit default is off, then include default values for properties\n      // that appear in the next frame but are not in the matching subject\n      var next = frame[prop][0];\n      var omitDefaultOn = _getFrameFlag(next, options, 'omitDefault');\n      if(!omitDefaultOn && !(prop in output)) {\n        var preserve = '@null';\n        if('@default' in next) {\n          preserve = _clone(next['@default']);\n        }\n        if(!_isArray(preserve)) {\n          preserve = [preserve];\n        }\n        output[prop] = [{'@preserve': preserve}];\n      }\n    }\n\n    // add output to parent\n    _addFrameOutput(parent, property, output);\n\n    // pop matching subject from circular ref-checking stack\n    state.subjectStack.pop();\n  }\n}\n\n/**\n * Creates an implicit frame when recursing through subject matches. If\n * a frame doesn't have an explicit frame for a particular property, then\n * a wildcard child frame will be created that uses the same flags that the\n * parent frame used.\n *\n * @param flags the current framing flags.\n *\n * @return the implicit frame.\n */\nfunction _createImplicitFrame(flags) {\n  var frame = {};\n  for(var key in flags) {\n    if(flags[key] !== undefined) {\n      frame['@' + key] = [flags[key]];\n    }\n  }\n  return [frame];\n}\n\n/**\n * Checks the current subject stack to see if embedding the given subject\n * would cause a circular reference.\n *\n * @param subjectToEmbed the subject to embed.\n * @param subjectStack the current stack of subjects.\n *\n * @return true if a circular reference would be created, false if not.\n */\nfunction _createsCircularReference(subjectToEmbed, subjectStack) {\n  for(var i = subjectStack.length - 1; i >= 0; --i) {\n    if(subjectStack[i]['@id'] === subjectToEmbed['@id']) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Gets the frame flag value for the given flag name.\n *\n * @param frame the frame.\n * @param options the framing options.\n * @param name the flag name.\n *\n * @return the flag value.\n */\nfunction _getFrameFlag(frame, options, name) {\n  var flag = '@' + name;\n  var rval = (flag in frame ? frame[flag][0] : options[name]);\n  if(name === 'embed') {\n    // default is \"@last\"\n    // backwards-compatibility support for \"embed\" maps:\n    // true => \"@last\"\n    // false => \"@never\"\n    if(rval === true) {\n      rval = '@last';\n    } else if(rval === false) {\n      rval = '@never';\n    } else if(rval !== '@always' && rval !== '@never' && rval !== '@link') {\n      rval = '@last';\n    }\n  }\n  return rval;\n}\n\n/**\n * Validates a JSON-LD frame, throwing an exception if the frame is invalid.\n *\n * @param frame the frame to validate.\n */\nfunction _validateFrame(frame) {\n  if(!_isArray(frame) || frame.length !== 1 || !_isObject(frame[0])) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a JSON-LD frame must be a single object.',\n      'jsonld.SyntaxError', {frame: frame});\n  }\n}\n\n/**\n * Returns a map of all of the subjects that match a parsed frame.\n *\n * @param state the current framing state.\n * @param subjects the set of subjects to filter.\n * @param frame the parsed frame.\n * @param flags the frame flags.\n *\n * @return all of the matched subjects.\n */\nfunction _filterSubjects(state, subjects, frame, flags) {\n  // filter subjects in @id order\n  var rval = {};\n  for(var i = 0; i < subjects.length; ++i) {\n    var id = subjects[i];\n    var subject = state.subjects[id];\n    if(_filterSubject(subject, frame, flags)) {\n      rval[id] = subject;\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given subject matches the given frame.\n *\n * @param subject the subject to check.\n * @param frame the frame to check.\n * @param flags the frame flags.\n *\n * @return true if the subject matches, false if not.\n */\nfunction _filterSubject(subject, frame, flags) {\n  // check @type (object value means 'any' type, fall through to ducktyping)\n  if('@type' in frame &&\n    !(frame['@type'].length === 1 && _isObject(frame['@type'][0]))) {\n    var types = frame['@type'];\n    for(var i = 0; i < types.length; ++i) {\n      // any matching @type is a match\n      if(jsonld.hasValue(subject, '@type', types[i])) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // check ducktype\n  var wildcard = true;\n  var matchesSome = false;\n  for(var key in frame) {\n    if(_isKeyword(key)) {\n      // skip non-@id and non-@type\n      if(key !== '@id' && key !== '@type') {\n        continue;\n      }\n      wildcard = false;\n\n      // check @id for a specific @id value\n      if(key === '@id' && _isString(frame[key])) {\n        if(subject[key] !== frame[key]) {\n          return false;\n        }\n        matchesSome = true;\n        continue;\n      }\n    }\n\n    wildcard = false;\n\n    if(key in subject) {\n      // frame[key] === [] means do not match if property is present\n      if(_isArray(frame[key]) && frame[key].length === 0 &&\n        subject[key] !== undefined) {\n        return false;\n      }\n      matchesSome = true;\n      continue;\n    }\n\n    // all properties must match to be a duck unless a @default is specified\n    var hasDefault = (_isArray(frame[key]) && _isObject(frame[key][0]) &&\n      '@default' in frame[key][0]);\n    if(flags.requireAll && !hasDefault) {\n      return false;\n    }\n  }\n\n  // return true if wildcard or subject matches some properties\n  return wildcard || matchesSome;\n}\n\n/**\n * Removes an existing embed.\n *\n * @param state the current framing state.\n * @param id the @id of the embed to remove.\n */\nfunction _removeEmbed(state, id) {\n  // get existing embed\n  var embeds = state.uniqueEmbeds;\n  var embed = embeds[id];\n  var parent = embed.parent;\n  var property = embed.property;\n\n  // create reference to replace embed\n  var subject = {'@id': id};\n\n  // remove existing embed\n  if(_isArray(parent)) {\n    // replace subject with reference\n    for(var i = 0; i < parent.length; ++i) {\n      if(jsonld.compareValues(parent[i], subject)) {\n        parent[i] = subject;\n        break;\n      }\n    }\n  } else {\n    // replace subject with reference\n    var useArray = _isArray(parent[property]);\n    jsonld.removeValue(parent, property, subject, {propertyIsArray: useArray});\n    jsonld.addValue(parent, property, subject, {propertyIsArray: useArray});\n  }\n\n  // recursively remove dependent dangling embeds\n  var removeDependents = function(id) {\n    // get embed keys as a separate array to enable deleting keys in map\n    var ids = Object.keys(embeds);\n    for(var i = 0; i < ids.length; ++i) {\n      var next = ids[i];\n      if(next in embeds && _isObject(embeds[next].parent) &&\n        embeds[next].parent['@id'] === id) {\n        delete embeds[next];\n        removeDependents(next);\n      }\n    }\n  };\n  removeDependents(id);\n}\n\n/**\n * Adds framing output to the given parent.\n *\n * @param parent the parent to add to.\n * @param property the parent property.\n * @param output the output to add.\n */\nfunction _addFrameOutput(parent, property, output) {\n  if(_isObject(parent)) {\n    jsonld.addValue(parent, property, output, {propertyIsArray: true});\n  } else {\n    parent.push(output);\n  }\n}\n\n/**\n * Removes the @preserve keywords as the last step of the framing algorithm.\n *\n * @param ctx the active context used to compact the input.\n * @param input the framed, compacted output.\n * @param options the compaction options used.\n *\n * @return the resulting output.\n */\nfunction _removePreserve(ctx, input, options) {\n  // recurse through arrays\n  if(_isArray(input)) {\n    var output = [];\n    for(var i = 0; i < input.length; ++i) {\n      var result = _removePreserve(ctx, input[i], options);\n      // drop nulls from arrays\n      if(result !== null) {\n        output.push(result);\n      }\n    }\n    input = output;\n  } else if(_isObject(input)) {\n    // remove @preserve\n    if('@preserve' in input) {\n      if(input['@preserve'] === '@null') {\n        return null;\n      }\n      return input['@preserve'];\n    }\n\n    // skip @values\n    if(_isValue(input)) {\n      return input;\n    }\n\n    // recurse through @lists\n    if(_isList(input)) {\n      input['@list'] = _removePreserve(ctx, input['@list'], options);\n      return input;\n    }\n\n    // handle in-memory linked nodes\n    var idAlias = _compactIri(ctx, '@id');\n    if(idAlias in input) {\n      var id = input[idAlias];\n      if(id in options.link) {\n        var idx = options.link[id].indexOf(input);\n        if(idx === -1) {\n          // prevent circular visitation\n          options.link[id].push(input);\n        } else {\n          // already visited\n          return options.link[id][idx];\n        }\n      } else {\n        // prevent circular visitation\n        options.link[id] = [input];\n      }\n    }\n\n    // recurse through properties\n    for(var prop in input) {\n      var result = _removePreserve(ctx, input[prop], options);\n      var container = jsonld.getContextValue(ctx, prop, '@container');\n      if(options.compactArrays && _isArray(result) && result.length === 1 &&\n        container === null) {\n        result = result[0];\n      }\n      input[prop] = result;\n    }\n  }\n  return input;\n}\n\n/**\n * Compares two strings first based on length and then lexicographically.\n *\n * @param a the first string.\n * @param b the second string.\n *\n * @return -1 if a < b, 1 if a > b, 0 if a == b.\n */\nfunction _compareShortestLeast(a, b) {\n  if(a.length < b.length) {\n    return -1;\n  }\n  if(b.length < a.length) {\n    return 1;\n  }\n  if(a === b) {\n    return 0;\n  }\n  return (a < b) ? -1 : 1;\n}\n\n/**\n * Picks the preferred compaction term from the given inverse context entry.\n *\n * @param activeCtx the active context.\n * @param iri the IRI to pick the term for.\n * @param value the value to pick the term for.\n * @param containers the preferred containers.\n * @param typeOrLanguage either '@type' or '@language'.\n * @param typeOrLanguageValue the preferred value for '@type' or '@language'.\n *\n * @return the preferred term.\n */\nfunction _selectTerm(\n  activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue) {\n  if(typeOrLanguageValue === null) {\n    typeOrLanguageValue = '@null';\n  }\n\n  // preferences for the value of @type or @language\n  var prefs = [];\n\n  // determine prefs for @id based on whether or not value compacts to a term\n  if((typeOrLanguageValue === '@id' || typeOrLanguageValue === '@reverse') &&\n    _isSubjectReference(value)) {\n    // prefer @reverse first\n    if(typeOrLanguageValue === '@reverse') {\n      prefs.push('@reverse');\n    }\n    // try to compact value to a term\n    var term = _compactIri(activeCtx, value['@id'], null, {vocab: true});\n    if(term in activeCtx.mappings &&\n      activeCtx.mappings[term] &&\n      activeCtx.mappings[term]['@id'] === value['@id']) {\n      // prefer @vocab\n      prefs.push.apply(prefs, ['@vocab', '@id']);\n    } else {\n      // prefer @id\n      prefs.push.apply(prefs, ['@id', '@vocab']);\n    }\n  } else {\n    prefs.push(typeOrLanguageValue);\n  }\n  prefs.push('@none');\n\n  var containerMap = activeCtx.inverse[iri];\n  for(var ci = 0; ci < containers.length; ++ci) {\n    // if container not available in the map, continue\n    var container = containers[ci];\n    if(!(container in containerMap)) {\n      continue;\n    }\n\n    var typeOrLanguageValueMap = containerMap[container][typeOrLanguage];\n    for(var pi = 0; pi < prefs.length; ++pi) {\n      // if type/language option not available in the map, continue\n      var pref = prefs[pi];\n      if(!(pref in typeOrLanguageValueMap)) {\n        continue;\n      }\n\n      // select term\n      return typeOrLanguageValueMap[pref];\n    }\n  }\n\n  return null;\n}\n\n/**\n * Compacts an IRI or keyword into a term or prefix if it can be. If the\n * IRI has an associated value it may be passed.\n *\n * @param activeCtx the active context to use.\n * @param iri the IRI to compact.\n * @param value the value to check or null.\n * @param relativeTo options for how to compact IRIs:\n *          vocab: true to split after @vocab, false not to.\n * @param reverse true if a reverse property is being compacted, false if not.\n *\n * @return the compacted term, prefix, keyword alias, or the original IRI.\n */\nfunction _compactIri(activeCtx, iri, value, relativeTo, reverse) {\n  // can't compact null\n  if(iri === null) {\n    return iri;\n  }\n\n  // default value and parent to null\n  if(_isUndefined(value)) {\n    value = null;\n  }\n  // default reverse to false\n  if(_isUndefined(reverse)) {\n    reverse = false;\n  }\n  relativeTo = relativeTo || {};\n\n  var inverseCtx = activeCtx.getInverse();\n\n  // if term is a keyword, it can only be compacted to a simple alias\n  if(_isKeyword(iri)) {\n    if(iri in inverseCtx) {\n      return inverseCtx[iri]['@none']['@type']['@none'];\n    }\n    return iri;\n  }\n\n  // use inverse context to pick a term if iri is relative to vocab\n  if(relativeTo.vocab && iri in inverseCtx) {\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // prefer @index if available in value\n    var containers = [];\n    if(_isObject(value) && '@index' in value) {\n      containers.push('@index');\n    }\n\n    // defaults for term selection based on type/language\n    var typeOrLanguage = '@language';\n    var typeOrLanguageValue = '@null';\n\n    if(reverse) {\n      typeOrLanguage = '@type';\n      typeOrLanguageValue = '@reverse';\n      containers.push('@set');\n    } else if(_isList(value)) {\n      // choose the most specific term that works for all elements in @list\n      // only select @list containers if @index is NOT in value\n      if(!('@index' in value)) {\n        containers.push('@list');\n      }\n      var list = value['@list'];\n      var commonLanguage = (list.length === 0) ? defaultLanguage : null;\n      var commonType = null;\n      for(var i = 0; i < list.length; ++i) {\n        var item = list[i];\n        var itemLanguage = '@none';\n        var itemType = '@none';\n        if(_isValue(item)) {\n          if('@language' in item) {\n            itemLanguage = item['@language'];\n          } else if('@type' in item) {\n            itemType = item['@type'];\n          } else {\n            // plain literal\n            itemLanguage = '@null';\n          }\n        } else {\n          itemType = '@id';\n        }\n        if(commonLanguage === null) {\n          commonLanguage = itemLanguage;\n        } else if(itemLanguage !== commonLanguage && _isValue(item)) {\n          commonLanguage = '@none';\n        }\n        if(commonType === null) {\n          commonType = itemType;\n        } else if(itemType !== commonType) {\n          commonType = '@none';\n        }\n        // there are different languages and types in the list, so choose\n        // the most generic term, no need to keep iterating the list\n        if(commonLanguage === '@none' && commonType === '@none') {\n          break;\n        }\n      }\n      commonLanguage = commonLanguage || '@none';\n      commonType = commonType || '@none';\n      if(commonType !== '@none') {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = commonType;\n      } else {\n        typeOrLanguageValue = commonLanguage;\n      }\n    } else {\n      if(_isValue(value)) {\n        if('@language' in value && !('@index' in value)) {\n          containers.push('@language');\n          typeOrLanguageValue = value['@language'];\n        } else if('@type' in value) {\n          typeOrLanguage = '@type';\n          typeOrLanguageValue = value['@type'];\n        }\n      } else {\n        typeOrLanguage = '@type';\n        typeOrLanguageValue = '@id';\n      }\n      containers.push('@set');\n    }\n\n    // do term selection\n    containers.push('@none');\n    var term = _selectTerm(\n      activeCtx, iri, value, containers, typeOrLanguage, typeOrLanguageValue);\n    if(term !== null) {\n      return term;\n    }\n  }\n\n  // no term match, use @vocab if available\n  if(relativeTo.vocab) {\n    if('@vocab' in activeCtx) {\n      // determine if vocab is a prefix of the iri\n      var vocab = activeCtx['@vocab'];\n      if(iri.indexOf(vocab) === 0 && iri !== vocab) {\n        // use suffix as relative iri if it is not a term in the active context\n        var suffix = iri.substr(vocab.length);\n        if(!(suffix in activeCtx.mappings)) {\n          return suffix;\n        }\n      }\n    }\n  }\n\n  // no term or @vocab match, check for possible CURIEs\n  var choice = null;\n  var idx = 0;\n  var partialMatches = [];\n  var iriMap = activeCtx.fastCurieMap;\n  // check for partial matches of against `iri`, which means look until\n  // iri.length - 1, not full length\n  var maxPartialLength = iri.length - 1;\n  for(; idx < maxPartialLength && iri[idx] in iriMap; ++idx) {\n    iriMap = iriMap[iri[idx]];\n    if('' in iriMap) {\n      partialMatches.push(iriMap[''][0]);\n    }\n  }\n  // check partial matches in reverse order to prefer longest ones first\n  for(var i = partialMatches.length - 1; i >= 0; --i) {\n    var entry = partialMatches[i];\n    var terms = entry.terms;\n    for(var ti = 0; ti < terms.length; ++ti) {\n      // a CURIE is usable if:\n      // 1. it has no mapping, OR\n      // 2. value is null, which means we're not compacting an @value, AND\n      //   the mapping matches the IRI\n      var curie = terms[ti] + ':' + iri.substr(entry.iri.length);\n      var isUsableCurie = (!(curie in activeCtx.mappings) ||\n        (value === null && activeCtx.mappings[curie]['@id'] === iri));\n\n      // select curie if it is shorter or the same length but lexicographically\n      // less than the current choice\n      if(isUsableCurie && (choice === null ||\n        _compareShortestLeast(curie, choice) < 0)) {\n        choice = curie;\n      }\n    }\n  }\n\n  // return chosen curie\n  if(choice !== null) {\n    return choice;\n  }\n\n  // compact IRI relative to base\n  if(!relativeTo.vocab) {\n    return _removeBase(activeCtx['@base'], iri);\n  }\n\n  // return IRI as is\n  return iri;\n}\n\n/**\n * Performs value compaction on an object with '@value' or '@id' as the only\n * property.\n *\n * @param activeCtx the active context.\n * @param activeProperty the active property that points to the value.\n * @param value the value to compact.\n *\n * @return the compaction result.\n */\nfunction _compactValue(activeCtx, activeProperty, value) {\n  // value is a @value\n  if(_isValue(value)) {\n    // get context rules\n    var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n    var language = jsonld.getContextValue(\n      activeCtx, activeProperty, '@language');\n    var container = jsonld.getContextValue(\n      activeCtx, activeProperty, '@container');\n\n    // whether or not the value has an @index that must be preserved\n    var preserveIndex = (('@index' in value) &&\n      container !== '@index');\n\n    // if there's no @index to preserve ...\n    if(!preserveIndex) {\n      // matching @type or @language specified in context, compact value\n      if(value['@type'] === type || value['@language'] === language) {\n        return value['@value'];\n      }\n    }\n\n    // return just the value of @value if all are true:\n    // 1. @value is the only key or @index isn't being preserved\n    // 2. there is no default language or @value is not a string or\n    //   the key has a mapping with a null @language\n    var keyCount = Object.keys(value).length;\n    var isValueOnlyKey = (keyCount === 1 ||\n      (keyCount === 2 && ('@index' in value) && !preserveIndex));\n    var hasDefaultLanguage = ('@language' in activeCtx);\n    var isValueString = _isString(value['@value']);\n    var hasNullMapping = (activeCtx.mappings[activeProperty] &&\n      activeCtx.mappings[activeProperty]['@language'] === null);\n    if(isValueOnlyKey &&\n      (!hasDefaultLanguage || !isValueString || hasNullMapping)) {\n      return value['@value'];\n    }\n\n    var rval = {};\n\n    // preserve @index\n    if(preserveIndex) {\n      rval[_compactIri(activeCtx, '@index')] = value['@index'];\n    }\n\n    if('@type' in value) {\n      // compact @type IRI\n      rval[_compactIri(activeCtx, '@type')] = _compactIri(\n        activeCtx, value['@type'], null, {vocab: true});\n    } else if('@language' in value) {\n      // alias @language\n      rval[_compactIri(activeCtx, '@language')] = value['@language'];\n    }\n\n    // alias @value\n    rval[_compactIri(activeCtx, '@value')] = value['@value'];\n\n    return rval;\n  }\n\n  // value is a subject reference\n  var expandedProperty = _expandIri(activeCtx, activeProperty, {vocab: true});\n  var type = jsonld.getContextValue(activeCtx, activeProperty, '@type');\n  var compacted = _compactIri(\n    activeCtx, value['@id'], null, {vocab: type === '@vocab'});\n\n  // compact to scalar\n  if(type === '@id' || type === '@vocab' || expandedProperty === '@graph') {\n    return compacted;\n  }\n\n  var rval = {};\n  rval[_compactIri(activeCtx, '@id')] = compacted;\n  return rval;\n}\n\n/**\n * Creates a term definition during context processing.\n *\n * @param activeCtx the current active context.\n * @param localCtx the local context being processed.\n * @param term the term in the local context to define the mapping for.\n * @param defined a map of defining/defined keys to detect cycles and prevent\n *          double definitions.\n */\nfunction _createTermDefinition(activeCtx, localCtx, term, defined) {\n  if(term in defined) {\n    // term already defined\n    if(defined[term]) {\n      return;\n    }\n    // cycle detected\n    throw new JsonLdError(\n      'Cyclical context definition detected.',\n      'jsonld.CyclicalContext',\n      {code: 'cyclic IRI mapping', context: localCtx, term: term});\n  }\n\n  // now defining term\n  defined[term] = false;\n\n  if(_isKeyword(term)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; keywords cannot be overridden.',\n      'jsonld.SyntaxError',\n      {code: 'keyword redefinition', context: localCtx, term: term});\n  }\n\n  if(term === '') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; a term cannot be an empty string.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // remove old mapping\n  if(activeCtx.mappings[term]) {\n    delete activeCtx.mappings[term];\n  }\n\n  // get context term value\n  var value = localCtx[term];\n\n  // clear context entry\n  if(value === null || (_isObject(value) && value['@id'] === null)) {\n    activeCtx.mappings[term] = null;\n    defined[term] = true;\n    return;\n  }\n\n  // convert short-hand value to object w/@id\n  if(_isString(value)) {\n    value = {'@id': value};\n  }\n\n  if(!_isObject(value)) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context property values must be ' +\n      'strings or objects.',\n      'jsonld.SyntaxError',\n      {code: 'invalid term definition', context: localCtx});\n  }\n\n  // create new mapping\n  var mapping = activeCtx.mappings[term] = {};\n  mapping.reverse = false;\n\n  if('@reverse' in value) {\n    if('@id' in value) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @reverse term definition must not ' +\n        'contain @id.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n    var reverse = value['@reverse'];\n    if(!_isString(reverse)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n\n    // expand and add @id mapping\n    var id = _expandIri(\n      activeCtx, reverse, {vocab: true, base: false}, localCtx, defined);\n    if(!_isAbsoluteIri(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @reverse value must be an ' +\n        'absolute IRI or a blank node identifier.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    mapping['@id'] = id;\n    mapping.reverse = true;\n  } else if('@id' in value) {\n    var id = value['@id'];\n    if(!_isString(id)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; a @context @id value must be an array ' +\n        'of strings or a string.',\n        'jsonld.SyntaxError', {code: 'invalid IRI mapping', context: localCtx});\n    }\n    if(id !== term) {\n      // expand and add @id mapping\n      id = _expandIri(\n        activeCtx, id, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(id) && !_isKeyword(id)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; a @context @id value must be an ' +\n          'absolute IRI, a blank node identifier, or a keyword.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx});\n      }\n      mapping['@id'] = id;\n    }\n  }\n\n  // always compute whether term has a colon as an optimization for\n  // _compactIri\n  var colon = term.indexOf(':');\n  mapping._termHasColon = (colon !== -1);\n\n  if(!('@id' in mapping)) {\n    // see if the term has a prefix\n    if(mapping._termHasColon) {\n      var prefix = term.substr(0, colon);\n      if(prefix in localCtx) {\n        // define parent prefix\n        _createTermDefinition(activeCtx, localCtx, prefix, defined);\n      }\n\n      if(activeCtx.mappings[prefix]) {\n        // set @id based on prefix parent\n        var suffix = term.substr(colon + 1);\n        mapping['@id'] = activeCtx.mappings[prefix]['@id'] + suffix;\n      } else {\n        // term is an absolute IRI\n        mapping['@id'] = term;\n      }\n    } else {\n      // non-IRIs *must* define @ids if @vocab is not available\n      if(!('@vocab' in activeCtx)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; @context terms must define an @id.',\n          'jsonld.SyntaxError',\n          {code: 'invalid IRI mapping', context: localCtx, term: term});\n      }\n      // prepend vocab to term\n      mapping['@id'] = activeCtx['@vocab'] + term;\n    }\n  }\n\n  // IRI mapping now defined\n  defined[term] = true;\n\n  if('@type' in value) {\n    var type = value['@type'];\n    if(!_isString(type)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; an @context @type values must be a string.',\n        'jsonld.SyntaxError',\n        {code: 'invalid type mapping', context: localCtx});\n    }\n\n    if(type !== '@id' && type !== '@vocab') {\n      // expand @type to full IRI\n      type = _expandIri(\n        activeCtx, type, {vocab: true, base: false}, localCtx, defined);\n      if(!_isAbsoluteIri(type)) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type value must be an ' +\n          'absolute IRI.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n      if(type.indexOf('_:') === 0) {\n        throw new JsonLdError(\n          'Invalid JSON-LD syntax; an @context @type values must be an IRI, ' +\n          'not a blank node identifier.',\n          'jsonld.SyntaxError',\n          {code: 'invalid type mapping', context: localCtx});\n      }\n    }\n\n    // add @type to mapping\n    mapping['@type'] = type;\n  }\n\n  if('@container' in value) {\n    var container = value['@container'];\n    if(container !== '@list' && container !== '@set' &&\n      container !== '@index' && container !== '@language') {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value must be ' +\n        'one of the following: @list, @set, @index, or @language.',\n        'jsonld.SyntaxError',\n        {code: 'invalid container mapping', context: localCtx});\n    }\n    if(mapping.reverse && container !== '@index' && container !== '@set' &&\n      container !== null) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @container value for a @reverse ' +\n        'type definition must be @index or @set.', 'jsonld.SyntaxError',\n        {code: 'invalid reverse property', context: localCtx});\n    }\n\n    // add @container to mapping\n    mapping['@container'] = container;\n  }\n\n  if('@language' in value && !('@type' in value)) {\n    var language = value['@language'];\n    if(language !== null && !_isString(language)) {\n      throw new JsonLdError(\n        'Invalid JSON-LD syntax; @context @language value must be ' +\n        'a string or null.', 'jsonld.SyntaxError',\n        {code: 'invalid language mapping', context: localCtx});\n    }\n\n    // add @language to mapping\n    if(language !== null) {\n      language = language.toLowerCase();\n    }\n    mapping['@language'] = language;\n  }\n\n  // disallow aliasing @context and @preserve\n  var id = mapping['@id'];\n  if(id === '@context' || id === '@preserve') {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; @context and @preserve cannot be aliased.',\n      'jsonld.SyntaxError', {code: 'invalid keyword alias', context: localCtx});\n  }\n}\n\n/**\n * Expands a string to a full IRI. The string may be a term, a prefix, a\n * relative IRI, or an absolute IRI. The associated absolute IRI will be\n * returned.\n *\n * @param activeCtx the current active context.\n * @param value the string to expand.\n * @param relativeTo options for how to resolve relative IRIs:\n *          base: true to resolve against the base IRI, false not to.\n *          vocab: true to concatenate after @vocab, false not to.\n * @param localCtx the local context being processed (only given if called\n *          during context processing).\n * @param defined a map for tracking cycles in context definitions (only given\n *          if called during context processing).\n *\n * @return the expanded value.\n */\nfunction _expandIri(activeCtx, value, relativeTo, localCtx, defined) {\n  // already expanded\n  if(value === null || _isKeyword(value)) {\n    return value;\n  }\n\n  // ensure value is interpreted as a string\n  value = String(value);\n\n  // define term dependency if not defined\n  if(localCtx && value in localCtx && defined[value] !== true) {\n    _createTermDefinition(activeCtx, localCtx, value, defined);\n  }\n\n  relativeTo = relativeTo || {};\n  if(relativeTo.vocab) {\n    var mapping = activeCtx.mappings[value];\n\n    // value is explicitly ignored with a null mapping\n    if(mapping === null) {\n      return null;\n    }\n\n    if(mapping) {\n      // value is a term\n      return mapping['@id'];\n    }\n  }\n\n  // split value into prefix:suffix\n  var colon = value.indexOf(':');\n  if(colon !== -1) {\n    var prefix = value.substr(0, colon);\n    var suffix = value.substr(colon + 1);\n\n    // do not expand blank nodes (prefix of '_') or already-absolute\n    // IRIs (suffix of '//')\n    if(prefix === '_' || suffix.indexOf('//') === 0) {\n      return value;\n    }\n\n    // prefix dependency not defined, define it\n    if(localCtx && prefix in localCtx) {\n      _createTermDefinition(activeCtx, localCtx, prefix, defined);\n    }\n\n    // use mapping if prefix is defined\n    var mapping = activeCtx.mappings[prefix];\n    if(mapping) {\n      return mapping['@id'] + suffix;\n    }\n\n    // already absolute IRI\n    return value;\n  }\n\n  // prepend vocab\n  if(relativeTo.vocab && '@vocab' in activeCtx) {\n    return activeCtx['@vocab'] + value;\n  }\n\n  // prepend base\n  var rval = value;\n  if(relativeTo.base) {\n    rval = jsonld.prependBase(activeCtx['@base'], rval);\n  }\n\n  return rval;\n}\n\nfunction _prependBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n  // already an absolute IRI\n  if(iri.indexOf(':') !== -1) {\n    return iri;\n  }\n\n  // parse base if it is a string\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // parse given IRI\n  var rel = jsonld.url.parse(iri);\n\n  // per RFC3986 5.2.2\n  var transform = {\n    protocol: base.protocol || ''\n  };\n\n  if(rel.authority !== null) {\n    transform.authority = rel.authority;\n    transform.path = rel.path;\n    transform.query = rel.query;\n  } else {\n    transform.authority = base.authority;\n\n    if(rel.path === '') {\n      transform.path = base.path;\n      if(rel.query !== null) {\n        transform.query = rel.query;\n      } else {\n        transform.query = base.query;\n      }\n    } else {\n      if(rel.path.indexOf('/') === 0) {\n        // IRI represents an absolute path\n        transform.path = rel.path;\n      } else {\n        // merge paths\n        var path = base.path;\n\n        // append relative path to the end of the last directory from base\n        if(rel.path !== '') {\n          path = path.substr(0, path.lastIndexOf('/') + 1);\n          if(path.length > 0 && path.substr(-1) !== '/') {\n            path += '/';\n          }\n          path += rel.path;\n        }\n\n        transform.path = path;\n      }\n      transform.query = rel.query;\n    }\n  }\n\n  // remove slashes and dots in path\n  transform.path = _removeDotSegments(transform.path, !!transform.authority);\n\n  // construct URL\n  var rval = transform.protocol;\n  if(transform.authority !== null) {\n    rval += '//' + transform.authority;\n  }\n  rval += transform.path;\n  if(transform.query !== null) {\n    rval += '?' + transform.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Removes a base IRI from the given absolute IRI.\n *\n * @param base the base IRI.\n * @param iri the absolute IRI.\n *\n * @return the relative IRI if relative to base, otherwise the absolute IRI.\n */\nfunction _removeBase(base, iri) {\n  // skip IRI processing\n  if(base === null) {\n    return iri;\n  }\n\n  if(_isString(base)) {\n    base = jsonld.url.parse(base || '');\n  }\n\n  // establish base root\n  var root = '';\n  if(base.href !== '') {\n    root += (base.protocol || '') + '//' + (base.authority || '');\n  } else if(iri.indexOf('//')) {\n    // support network-path reference with empty base\n    root += '//';\n  }\n\n  // IRI not relative to base\n  if(iri.indexOf(root) !== 0) {\n    return iri;\n  }\n\n  // remove root from IRI and parse remainder\n  var rel = jsonld.url.parse(iri.substr(root.length));\n\n  // remove path segments that match (do not remove last segment unless there\n  // is a hash or query)\n  var baseSegments = base.normalizedPath.split('/');\n  var iriSegments = rel.normalizedPath.split('/');\n  var last = (rel.fragment || rel.query) ? 0 : 1;\n  while(baseSegments.length > 0 && iriSegments.length > last) {\n    if(baseSegments[0] !== iriSegments[0]) {\n      break;\n    }\n    baseSegments.shift();\n    iriSegments.shift();\n  }\n\n  // use '../' for each non-matching base segment\n  var rval = '';\n  if(baseSegments.length > 0) {\n    // don't count the last segment (if it ends with '/' last path doesn't\n    // count and if it doesn't end with '/' it isn't a path)\n    baseSegments.pop();\n    for(var i = 0; i < baseSegments.length; ++i) {\n      rval += '../';\n    }\n  }\n\n  // prepend remaining segments\n  rval += iriSegments.join('/');\n\n  // add query and hash\n  if(rel.query !== null) {\n    rval += '?' + rel.query;\n  }\n  if(rel.fragment !== null) {\n    rval += '#' + rel.fragment;\n  }\n\n  // handle empty base\n  if(rval === '') {\n    rval = './';\n  }\n\n  return rval;\n}\n\n/**\n * Gets the initial context.\n *\n * @param options the options to use:\n *          [base] the document base IRI.\n *\n * @return the initial context.\n */\nfunction _getInitialContext(options) {\n  var base = jsonld.url.parse(options.base || '');\n  return {\n    '@base': base,\n    mappings: {},\n    inverse: null,\n    getInverse: _createInverseContext,\n    clone: _cloneActiveContext\n  };\n\n  /**\n   * Generates an inverse context for use in the compaction algorithm, if\n   * not already generated for the given active context.\n   *\n   * @return the inverse context.\n   */\n  function _createInverseContext() {\n    var activeCtx = this;\n\n    // lazily create inverse\n    if(activeCtx.inverse) {\n      return activeCtx.inverse;\n    }\n    var inverse = activeCtx.inverse = {};\n\n    // variables for building fast CURIE map\n    var fastCurieMap = activeCtx.fastCurieMap = {};\n    var irisToTerms = {};\n\n    // handle default language\n    var defaultLanguage = activeCtx['@language'] || '@none';\n\n    // create term selections for each mapping in the context, ordered by\n    // shortest and then lexicographically least\n    var mappings = activeCtx.mappings;\n    var terms = Object.keys(mappings).sort(_compareShortestLeast);\n    for(var i = 0; i < terms.length; ++i) {\n      var term = terms[i];\n      var mapping = mappings[term];\n      if(mapping === null) {\n        continue;\n      }\n\n      var container = mapping['@container'] || '@none';\n\n      // iterate over every IRI in the mapping\n      var ids = mapping['@id'];\n      if(!_isArray(ids)) {\n        ids = [ids];\n      }\n      for(var ii = 0; ii < ids.length; ++ii) {\n        var iri = ids[ii];\n        var entry = inverse[iri];\n        var isKeyword = _isKeyword(iri);\n\n        if(!entry) {\n          // initialize entry\n          inverse[iri] = entry = {};\n\n          if(!isKeyword && !mapping._termHasColon) {\n            // init IRI to term map and fast CURIE prefixes\n            irisToTerms[iri] = [term];\n            var fastCurieEntry = {iri: iri, terms: irisToTerms[iri]};\n            if(iri[0] in fastCurieMap) {\n              fastCurieMap[iri[0]].push(fastCurieEntry);\n            } else {\n              fastCurieMap[iri[0]] = [fastCurieEntry];\n            }\n          }\n        } else if(!isKeyword && !mapping._termHasColon) {\n          // add IRI to term match\n          irisToTerms[iri].push(term);\n        }\n\n        // add new entry\n        if(!entry[container]) {\n          entry[container] = {\n            '@language': {},\n            '@type': {}\n          };\n        }\n        entry = entry[container];\n\n        if(mapping.reverse) {\n          // term is preferred for values using @reverse\n          _addPreferredTerm(mapping, term, entry['@type'], '@reverse');\n        } else if('@type' in mapping) {\n          // term is preferred for values using specific type\n          _addPreferredTerm(mapping, term, entry['@type'], mapping['@type']);\n        } else if('@language' in mapping) {\n          // term is preferred for values using specific language\n          var language = mapping['@language'] || '@null';\n          _addPreferredTerm(mapping, term, entry['@language'], language);\n        } else {\n          // term is preferred for values w/default language or no type and\n          // no language\n          // add an entry for the default language\n          _addPreferredTerm(mapping, term, entry['@language'], defaultLanguage);\n\n          // add entries for no type and no language\n          _addPreferredTerm(mapping, term, entry['@type'], '@none');\n          _addPreferredTerm(mapping, term, entry['@language'], '@none');\n        }\n      }\n    }\n\n    // build fast CURIE map\n    for(var key in fastCurieMap) {\n      _buildIriMap(fastCurieMap, key, 1);\n    }\n\n    return inverse;\n  }\n\n  /**\n   * Runs a recursive algorithm to build a lookup map for quickly finding\n   * potential CURIEs.\n   *\n   * @param iriMap the map to build.\n   * @param key the current key in the map to work on.\n   * @param idx the index into the IRI to compare.\n   */\n  function _buildIriMap(iriMap, key, idx) {\n    var entries = iriMap[key];\n    var next = iriMap[key] = {};\n\n    var iri;\n    var letter;\n    for(var i = 0; i < entries.length; ++i) {\n      iri = entries[i].iri;\n      if(idx >= iri.length) {\n        letter = '';\n      } else {\n        letter = iri[idx];\n      }\n      if(letter in next) {\n        next[letter].push(entries[i]);\n      } else {\n        next[letter] = [entries[i]];\n      }\n    }\n\n    for(var key in next) {\n      if(key === '') {\n        continue;\n      }\n      _buildIriMap(next, key, idx + 1);\n    }\n  }\n\n  /**\n   * Adds the term for the given entry if not already added.\n   *\n   * @param mapping the term mapping.\n   * @param term the term to add.\n   * @param entry the inverse context typeOrLanguage entry to add to.\n   * @param typeOrLanguageValue the key in the entry to add to.\n   */\n  function _addPreferredTerm(mapping, term, entry, typeOrLanguageValue) {\n    if(!(typeOrLanguageValue in entry)) {\n      entry[typeOrLanguageValue] = term;\n    }\n  }\n\n  /**\n   * Clones an active context, creating a child active context.\n   *\n   * @return a clone (child) of the active context.\n   */\n  function _cloneActiveContext() {\n    var child = {};\n    child['@base'] = this['@base'];\n    child.mappings = _clone(this.mappings);\n    child.clone = this.clone;\n    child.inverse = null;\n    child.getInverse = this.getInverse;\n    if('@language' in this) {\n      child['@language'] = this['@language'];\n    }\n    if('@vocab' in this) {\n      child['@vocab'] = this['@vocab'];\n    }\n    return child;\n  }\n}\n\n/**\n * Returns whether or not the given value is a keyword.\n *\n * @param v the value to check.\n *\n * @return true if the value is a keyword, false if not.\n */\nfunction _isKeyword(v) {\n  if(!_isString(v)) {\n    return false;\n  }\n  switch(v) {\n  case '@base':\n  case '@context':\n  case '@container':\n  case '@default':\n  case '@embed':\n  case '@explicit':\n  case '@graph':\n  case '@id':\n  case '@index':\n  case '@language':\n  case '@list':\n  case '@omitDefault':\n  case '@preserve':\n  case '@requireAll':\n  case '@reverse':\n  case '@set':\n  case '@type':\n  case '@value':\n  case '@vocab':\n    return true;\n  }\n  return false;\n}\n\n/**\n * Returns true if the given value is an Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Object, false if not.\n */\nfunction _isObject(v) {\n  return (Object.prototype.toString.call(v) === '[object Object]');\n}\n\n/**\n * Returns true if the given value is an empty Object.\n *\n * @param v the value to check.\n *\n * @return true if the value is an empty Object, false if not.\n */\nfunction _isEmptyObject(v) {\n  return _isObject(v) && Object.keys(v).length === 0;\n}\n\n/**\n * Returns true if the given value is an Array.\n *\n * @param v the value to check.\n *\n * @return true if the value is an Array, false if not.\n */\nfunction _isArray(v) {\n  return Array.isArray(v);\n}\n\n/**\n * Throws an exception if the given value is not a valid @type value.\n *\n * @param v the value to check.\n */\nfunction _validateTypeValue(v) {\n  // can be a string or an empty object\n  if(_isString(v) || _isEmptyObject(v)) {\n    return;\n  }\n\n  // must be an array\n  var isValid = false;\n  if(_isArray(v)) {\n    // must contain only strings\n    isValid = true;\n    for(var i = 0; i < v.length; ++i) {\n      if(!(_isString(v[i]))) {\n        isValid = false;\n        break;\n      }\n    }\n  }\n\n  if(!isValid) {\n    throw new JsonLdError(\n      'Invalid JSON-LD syntax; \"@type\" value must a string, an array of ' +\n      'strings, or an empty object.', 'jsonld.SyntaxError',\n      {code: 'invalid type value', value: v});\n  }\n}\n\n/**\n * Returns true if the given value is a String.\n *\n * @param v the value to check.\n *\n * @return true if the value is a String, false if not.\n */\nfunction _isString(v) {\n  return (typeof v === 'string' ||\n    Object.prototype.toString.call(v) === '[object String]');\n}\n\n/**\n * Returns true if the given value is a Number.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Number, false if not.\n */\nfunction _isNumber(v) {\n  return (typeof v === 'number' ||\n    Object.prototype.toString.call(v) === '[object Number]');\n}\n\n/**\n * Returns true if the given value is a double.\n *\n * @param v the value to check.\n *\n * @return true if the value is a double, false if not.\n */\nfunction _isDouble(v) {\n  return _isNumber(v) && String(v).indexOf('.') !== -1;\n}\n\n/**\n * Returns true if the given value is numeric.\n *\n * @param v the value to check.\n *\n * @return true if the value is numeric, false if not.\n */\nfunction _isNumeric(v) {\n  return !isNaN(parseFloat(v)) && isFinite(v);\n}\n\n/**\n * Returns true if the given value is a Boolean.\n *\n * @param v the value to check.\n *\n * @return true if the value is a Boolean, false if not.\n */\nfunction _isBoolean(v) {\n  return (typeof v === 'boolean' ||\n    Object.prototype.toString.call(v) === '[object Boolean]');\n}\n\n/**\n * Returns true if the given value is undefined.\n *\n * @param v the value to check.\n *\n * @return true if the value is undefined, false if not.\n */\nfunction _isUndefined(v) {\n  return (typeof v === 'undefined');\n}\n\n/**\n * Returns true if the given value is a subject with properties.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject with properties, false if not.\n */\nfunction _isSubject(v) {\n  // Note: A value is a subject if all of these hold true:\n  // 1. It is an Object.\n  // 2. It is not a @value, @set, or @list.\n  // 3. It has more than 1 key OR any existing key is not @id.\n  var rval = false;\n  if(_isObject(v) &&\n    !(('@value' in v) || ('@set' in v) || ('@list' in v))) {\n    var keyCount = Object.keys(v).length;\n    rval = (keyCount > 1 || !('@id' in v));\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is a subject reference.\n *\n * @param v the value to check.\n *\n * @return true if the value is a subject reference, false if not.\n */\nfunction _isSubjectReference(v) {\n  // Note: A value is a subject reference if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has a single key: @id.\n  return (_isObject(v) && Object.keys(v).length === 1 && ('@id' in v));\n}\n\n/**\n * Returns true if the given value is a @value.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @value, false if not.\n */\nfunction _isValue(v) {\n  // Note: A value is a @value if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @value property.\n  return _isObject(v) && ('@value' in v);\n}\n\n/**\n * Returns true if the given value is a @list.\n *\n * @param v the value to check.\n *\n * @return true if the value is a @list, false if not.\n */\nfunction _isList(v) {\n  // Note: A value is a @list if all of these hold true:\n  // 1. It is an Object.\n  // 2. It has the @list property.\n  return _isObject(v) && ('@list' in v);\n}\n\n/**\n * Returns true if the given value is a blank node.\n *\n * @param v the value to check.\n *\n * @return true if the value is a blank node, false if not.\n */\nfunction _isBlankNode(v) {\n  // Note: A value is a blank node if all of these hold true:\n  // 1. It is an Object.\n  // 2. If it has an @id key its value begins with '_:'.\n  // 3. It has no keys OR is not a @value, @set, or @list.\n  var rval = false;\n  if(_isObject(v)) {\n    if('@id' in v) {\n      rval = (v['@id'].indexOf('_:') === 0);\n    } else {\n      rval = (Object.keys(v).length === 0 ||\n        !(('@value' in v) || ('@set' in v) || ('@list' in v)));\n    }\n  }\n  return rval;\n}\n\n/**\n * Returns true if the given value is an absolute IRI, false if not.\n *\n * @param v the value to check.\n *\n * @return true if the value is an absolute IRI, false if not.\n */\nfunction _isAbsoluteIri(v) {\n  return _isString(v) && v.indexOf(':') !== -1;\n}\n\n/**\n * Clones an object, array, or string/number. If a typed JavaScript object\n * is given, such as a Date, it will be converted to a string.\n *\n * @param value the value to clone.\n *\n * @return the cloned value.\n */\nfunction _clone(value) {\n  if(value && typeof value === 'object') {\n    var rval;\n    if(_isArray(value)) {\n      rval = [];\n      for(var i = 0; i < value.length; ++i) {\n        rval[i] = _clone(value[i]);\n      }\n    } else if(_isObject(value)) {\n      rval = {};\n      for(var key in value) {\n        rval[key] = _clone(value[key]);\n      }\n    } else {\n      rval = value.toString();\n    }\n    return rval;\n  }\n  return value;\n}\n\n/**\n * Finds all @context URLs in the given JSON-LD input.\n *\n * @param input the JSON-LD input.\n * @param urls a map of URLs (url => false/@contexts).\n * @param replace true to replace the URLs in the given input with the\n *           @contexts from the urls map, false not to.\n * @param base the base IRI to use to resolve relative IRIs.\n *\n * @return true if new URLs to retrieve were found, false if not.\n */\nfunction _findContextUrls(input, urls, replace, base) {\n  var count = Object.keys(urls).length;\n  if(_isArray(input)) {\n    for(var i = 0; i < input.length; ++i) {\n      _findContextUrls(input[i], urls, replace, base);\n    }\n    return (count < Object.keys(urls).length);\n  } else if(_isObject(input)) {\n    for(var key in input) {\n      if(key !== '@context') {\n        _findContextUrls(input[key], urls, replace, base);\n        continue;\n      }\n\n      // get @context\n      var ctx = input[key];\n\n      // array @context\n      if(_isArray(ctx)) {\n        var length = ctx.length;\n        for(var i = 0; i < length; ++i) {\n          var _ctx = ctx[i];\n          if(_isString(_ctx)) {\n            _ctx = jsonld.prependBase(base, _ctx);\n            // replace w/@context if requested\n            if(replace) {\n              _ctx = urls[_ctx];\n              if(_isArray(_ctx)) {\n                // add flattened context\n                Array.prototype.splice.apply(ctx, [i, 1].concat(_ctx));\n                i += _ctx.length - 1;\n                length = ctx.length;\n              } else {\n                ctx[i] = _ctx;\n              }\n            } else if(!(_ctx in urls)) {\n              // @context URL found\n              urls[_ctx] = false;\n            }\n          }\n        }\n      } else if(_isString(ctx)) {\n        // string @context\n        ctx = jsonld.prependBase(base, ctx);\n        // replace w/@context if requested\n        if(replace) {\n          input[key] = urls[ctx];\n        } else if(!(ctx in urls)) {\n          // @context URL found\n          urls[ctx] = false;\n        }\n      }\n    }\n    return (count < Object.keys(urls).length);\n  }\n  return false;\n}\n\n/**\n * Retrieves external @context URLs using the given document loader. Every\n * instance of @context in the input that refers to a URL will be replaced\n * with the JSON @context found at that URL.\n *\n * @param input the JSON-LD input with possible contexts.\n * @param options the options to use:\n *          documentLoader(url, callback(err, remoteDoc)) the document loader.\n * @param callback(err, input) called once the operation completes.\n */\nfunction _retrieveContextUrls(input, options, callback) {\n  // if any error occurs during URL resolution, quit\n  var error = null;\n\n  // recursive document loader\n  var documentLoader = options.documentLoader;\n  var retrieve = function(input, cycles, documentLoader, base, callback) {\n    if(Object.keys(cycles).length > MAX_CONTEXT_URLS) {\n      error = new JsonLdError(\n        'Maximum number of @context URLs exceeded.',\n        'jsonld.ContextUrlError',\n        {code: 'loading remote context failed', max: MAX_CONTEXT_URLS});\n      return callback(error);\n    }\n\n    // for tracking the URLs to retrieve\n    var urls = {};\n\n    // finished will be called once the URL queue is empty\n    var finished = function() {\n      // replace all URLs in the input\n      _findContextUrls(input, urls, true, base);\n      callback(null, input);\n    };\n\n    // find all URLs in the given input\n    if(!_findContextUrls(input, urls, false, base)) {\n      // no new URLs in input\n      return finished();\n    }\n\n    // queue all unretrieved URLs\n    var queue = [];\n    for(var url in urls) {\n      if(urls[url] === false) {\n        queue.push(url);\n      }\n    }\n\n    // retrieve URLs in queue\n    var count = queue.length;\n    for(var i = 0; i < queue.length; ++i) {\n      (function(url) {\n        // check for context URL cycle\n        if(url in cycles) {\n          error = new JsonLdError(\n            'Cyclical @context URLs detected.',\n            'jsonld.ContextUrlError',\n            {code: 'recursive context inclusion', url: url});\n          return callback(error);\n        }\n        var _cycles = _clone(cycles);\n        _cycles[url] = true;\n        var done = function(err, remoteDoc) {\n          // short-circuit if there was an error with another URL\n          if(error) {\n            return;\n          }\n\n          var ctx = remoteDoc ? remoteDoc.document : null;\n\n          // parse string context as JSON\n          if(!err && _isString(ctx)) {\n            try {\n              ctx = JSON.parse(ctx);\n            } catch(ex) {\n              err = ex;\n            }\n          }\n\n          // ensure ctx is an object\n          if(err) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a valid JSON-LD object. ' +\n              'Possible causes are an inaccessible URL perhaps due to ' +\n              'a same-origin policy (ensure the server uses CORS if you are ' +\n              'using client-side JavaScript), too many redirects, a ' +\n              'non-JSON response, or more than one HTTP Link Header was ' +\n              'provided for a remote context.',\n              'jsonld.InvalidUrl',\n              {code: 'loading remote context failed', url: url, cause: err});\n          } else if(!_isObject(ctx)) {\n            err = new JsonLdError(\n              'Dereferencing a URL did not result in a JSON object. The ' +\n              'response was valid JSON, but it was not a JSON object.',\n              'jsonld.InvalidUrl',\n              {code: 'invalid remote context', url: url, cause: err});\n          }\n          if(err) {\n            error = err;\n            return callback(error);\n          }\n\n          // use empty context if no @context key is present\n          if(!('@context' in ctx)) {\n            ctx = {'@context': {}};\n          } else {\n            ctx = {'@context': ctx['@context']};\n          }\n\n          // append context URL to context if given\n          if(remoteDoc.contextUrl) {\n            if(!_isArray(ctx['@context'])) {\n              ctx['@context'] = [ctx['@context']];\n            }\n            ctx['@context'].push(remoteDoc.contextUrl);\n          }\n\n          // recurse\n          retrieve(ctx, _cycles, documentLoader, url, function(err, ctx) {\n            if(err) {\n              return callback(err);\n            }\n            urls[url] = ctx['@context'];\n            count -= 1;\n            if(count === 0) {\n              finished();\n            }\n          });\n        };\n        var promise = documentLoader(url, done);\n        if(promise && 'then' in promise) {\n          promise.then(done.bind(null, null), done);\n        }\n      }(queue[i]));\n    }\n  };\n  retrieve(input, {}, documentLoader, options.base, callback);\n}\n\n// define js 1.8.5 Object.keys method if not present\nif(!Object.keys) {\n  Object.keys = function(o) {\n    if(o !== Object(o)) {\n      throw new TypeError('Object.keys called on non-object');\n    }\n    var rval = [];\n    for(var p in o) {\n      if(Object.prototype.hasOwnProperty.call(o, p)) {\n        rval.push(p);\n      }\n    }\n    return rval;\n  };\n}\n\n/**\n * Parses RDF in the form of N-Quads.\n *\n * @param input the N-Quads input to parse.\n *\n * @return an RDF dataset.\n */\nfunction _parseNQuads(input) {\n  // define partial regexes\n  var iri = '(?:<([^:]+:[^>]*)>)';\n  var bnode = '(_:(?:[A-Za-z0-9]+))';\n  var plain = '\"([^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*)\"';\n  var datatype = '(?:\\\\^\\\\^' + iri + ')';\n  var language = '(?:@([a-z]+(?:-[a-z0-9]+)*))';\n  var literal = '(?:' + plain + '(?:' + datatype + '|' + language + ')?)';\n  var comment = '(?:#.*)?';\n  var ws = '[ \\\\t]+';\n  var wso = '[ \\\\t]*';\n  var eoln = /(?:\\r\\n)|(?:\\n)|(?:\\r)/g;\n  var empty = new RegExp('^' + wso + comment + '$');\n\n  // define quad part regexes\n  var subject = '(?:' + iri + '|' + bnode + ')' + ws;\n  var property = iri + ws;\n  var object = '(?:' + iri + '|' + bnode + '|' + literal + ')' + wso;\n  var graphName = '(?:\\\\.|(?:(?:' + iri + '|' + bnode + ')' + wso + '\\\\.))';\n\n  // full quad regex\n  var quad = new RegExp(\n    '^' + wso + subject + property + object + graphName + wso + comment + '$');\n\n  // build RDF dataset\n  var dataset = {};\n\n  // split N-Quad input into lines\n  var lines = input.split(eoln);\n  var lineNumber = 0;\n  for(var li = 0; li < lines.length; ++li) {\n    var line = lines[li];\n    lineNumber++;\n\n    // skip empty lines\n    if(empty.test(line)) {\n      continue;\n    }\n\n    // parse quad\n    var match = line.match(quad);\n    if(match === null) {\n      throw new JsonLdError(\n        'Error while parsing N-Quads; invalid quad.',\n        'jsonld.ParseError', {line: lineNumber});\n    }\n\n    // create RDF triple\n    var triple = {};\n\n    // get subject\n    if(!_isUndefined(match[1])) {\n      triple.subject = {type: 'IRI', value: match[1]};\n    } else {\n      triple.subject = {type: 'blank node', value: match[2]};\n    }\n\n    // get predicate\n    triple.predicate = {type: 'IRI', value: match[3]};\n\n    // get object\n    if(!_isUndefined(match[4])) {\n      triple.object = {type: 'IRI', value: match[4]};\n    } else if(!_isUndefined(match[5])) {\n      triple.object = {type: 'blank node', value: match[5]};\n    } else {\n      triple.object = {type: 'literal'};\n      if(!_isUndefined(match[7])) {\n        triple.object.datatype = match[7];\n      } else if(!_isUndefined(match[8])) {\n        triple.object.datatype = RDF_LANGSTRING;\n        triple.object.language = match[8];\n      } else {\n        triple.object.datatype = XSD_STRING;\n      }\n      var unescaped = match[6]\n        .replace(/\\\\\"/g, '\"')\n        .replace(/\\\\t/g, '\\t')\n        .replace(/\\\\n/g, '\\n')\n        .replace(/\\\\r/g, '\\r')\n        .replace(/\\\\\\\\/g, '\\\\');\n      triple.object.value = unescaped;\n    }\n\n    // get graph name ('@default' is used for the default graph)\n    var name = '@default';\n    if(!_isUndefined(match[9])) {\n      name = match[9];\n    } else if(!_isUndefined(match[10])) {\n      name = match[10];\n    }\n\n    // initialize graph in dataset\n    if(!(name in dataset)) {\n      dataset[name] = [triple];\n    } else {\n      // add triple if unique to its graph\n      var unique = true;\n      var triples = dataset[name];\n      for(var ti = 0; unique && ti < triples.length; ++ti) {\n        if(_compareRDFTriples(triples[ti], triple)) {\n          unique = false;\n        }\n      }\n      if(unique) {\n        triples.push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the N-Quads RDF parser\njsonld.registerRDFParser('application/nquads', _parseNQuads);\n\n/**\n * Converts an RDF dataset to N-Quads.\n *\n * @param dataset the RDF dataset to convert.\n *\n * @return the N-Quads string.\n */\nfunction _toNQuads(dataset) {\n  var quads = [];\n  for(var graphName in dataset) {\n    var triples = dataset[graphName];\n    for(var ti = 0; ti < triples.length; ++ti) {\n      var triple = triples[ti];\n      if(graphName === '@default') {\n        graphName = null;\n      }\n      quads.push(_toNQuad(triple, graphName));\n    }\n  }\n  return quads.sort().join('');\n}\n\n/**\n * Converts an RDF triple and graph name to an N-Quad string (a single quad).\n *\n * @param triple the RDF triple or quad to convert (a triple or quad may be\n *          passed, if a triple is passed then `graphName` should be given\n *          to specify the name of the graph the triple is in, `null` for\n *          the default graph).\n * @param graphName the name of the graph containing the triple, null for\n *          the default graph.\n *\n * @return the N-Quad string.\n */\nfunction _toNQuad(triple, graphName) {\n  var s = triple.subject;\n  var p = triple.predicate;\n  var o = triple.object;\n  var g = graphName || null;\n  if('name' in triple && triple.name) {\n    g = triple.name.value;\n  }\n\n  var quad = '';\n\n  // subject is an IRI\n  if(s.type === 'IRI') {\n    quad += '<' + s.value + '>';\n  } else {\n    quad += s.value;\n  }\n  quad += ' ';\n\n  // predicate is an IRI\n  if(p.type === 'IRI') {\n    quad += '<' + p.value + '>';\n  } else {\n    quad += p.value;\n  }\n  quad += ' ';\n\n  // object is IRI, bnode, or literal\n  if(o.type === 'IRI') {\n    quad += '<' + o.value + '>';\n  } else if(o.type === 'blank node') {\n    quad += o.value;\n  } else {\n    var escaped = o.value\n      .replace(/\\\\/g, '\\\\\\\\')\n      .replace(/\\t/g, '\\\\t')\n      .replace(/\\n/g, '\\\\n')\n      .replace(/\\r/g, '\\\\r')\n      .replace(/\\\"/g, '\\\\\"');\n    quad += '\"' + escaped + '\"';\n    if(o.datatype === RDF_LANGSTRING) {\n      if(o.language) {\n        quad += '@' + o.language;\n      }\n    } else if(o.datatype !== XSD_STRING) {\n      quad += '^^<' + o.datatype + '>';\n    }\n  }\n\n  // graph\n  if(g !== null && g !== undefined) {\n    if(g.indexOf('_:') !== 0) {\n      quad += ' <' + g + '>';\n    } else {\n      quad += ' ' + g;\n    }\n  }\n\n  quad += ' .\\n';\n  return quad;\n}\n\n/**\n * Parses the RDF dataset found via the data object from the RDFa API.\n *\n * @param data the RDFa API data object.\n *\n * @return the RDF dataset.\n */\nfunction _parseRdfaApiData(data) {\n  var dataset = {};\n  dataset['@default'] = [];\n\n  var subjects = data.getSubjects();\n  for(var si = 0; si < subjects.length; ++si) {\n    var subject = subjects[si];\n    if(subject === null) {\n      continue;\n    }\n\n    // get all related triples\n    var triples = data.getSubjectTriples(subject);\n    if(triples === null) {\n      continue;\n    }\n    var predicates = triples.predicates;\n    for(var predicate in predicates) {\n      // iterate over objects\n      var objects = predicates[predicate].objects;\n      for(var oi = 0; oi < objects.length; ++oi) {\n        var object = objects[oi];\n\n        // create RDF triple\n        var triple = {};\n\n        // add subject\n        if(subject.indexOf('_:') === 0) {\n          triple.subject = {type: 'blank node', value: subject};\n        } else {\n          triple.subject = {type: 'IRI', value: subject};\n        }\n\n        // add predicate\n        if(predicate.indexOf('_:') === 0) {\n          triple.predicate = {type: 'blank node', value: predicate};\n        } else {\n          triple.predicate = {type: 'IRI', value: predicate};\n        }\n\n        // serialize XML literal\n        var value = object.value;\n        if(object.type === RDF_XML_LITERAL) {\n          // initialize XMLSerializer\n          if(!XMLSerializer) {\n            _defineXMLSerializer();\n          }\n          var serializer = new XMLSerializer();\n          value = '';\n          for(var x = 0; x < object.value.length; x++) {\n            if(object.value[x].nodeType === Node.ELEMENT_NODE) {\n              value += serializer.serializeToString(object.value[x]);\n            } else if(object.value[x].nodeType === Node.TEXT_NODE) {\n              value += object.value[x].nodeValue;\n            }\n          }\n        }\n\n        // add object\n        triple.object = {};\n\n        // object is an IRI\n        if(object.type === RDF_OBJECT) {\n          if(object.value.indexOf('_:') === 0) {\n            triple.object.type = 'blank node';\n          } else {\n            triple.object.type = 'IRI';\n          }\n        } else {\n          // object is a literal\n          triple.object.type = 'literal';\n          if(object.type === RDF_PLAIN_LITERAL) {\n            if(object.language) {\n              triple.object.datatype = RDF_LANGSTRING;\n              triple.object.language = object.language;\n            } else {\n              triple.object.datatype = XSD_STRING;\n            }\n          } else {\n            triple.object.datatype = object.type;\n          }\n        }\n        triple.object.value = value;\n\n        // add triple to dataset in default graph\n        dataset['@default'].push(triple);\n      }\n    }\n  }\n\n  return dataset;\n}\n\n// register the RDFa API RDF parser\njsonld.registerRDFParser('rdfa-api', _parseRdfaApiData);\n\n/**\n * Creates a new IdentifierIssuer. A IdentifierIssuer issues unique\n * identifiers, keeping track of any previously issued identifiers.\n *\n * @param prefix the prefix to use ('<prefix><counter>').\n */\nfunction IdentifierIssuer(prefix) {\n  this.prefix = prefix;\n  this.counter = 0;\n  this.existing = {};\n}\njsonld.IdentifierIssuer = IdentifierIssuer;\n// backwards-compability\njsonld.UniqueNamer = IdentifierIssuer;\n\n/**\n * Copies this IdentifierIssuer.\n *\n * @return a copy of this IdentifierIssuer.\n */\nIdentifierIssuer.prototype.clone = function() {\n  var copy = new IdentifierIssuer(this.prefix);\n  copy.counter = this.counter;\n  copy.existing = _clone(this.existing);\n  return copy;\n};\n\n/**\n * Gets the new identifier for the given old identifier, where if no old\n * identifier is given a new identifier will be generated.\n *\n * @param [old] the old identifier to get the new identifier for.\n *\n * @return the new identifier.\n */\nIdentifierIssuer.prototype.getId = function(old) {\n  // return existing old identifier\n  if(old && old in this.existing) {\n    return this.existing[old];\n  }\n\n  // get next identifier\n  var identifier = this.prefix + this.counter;\n  this.counter += 1;\n\n  // save mapping\n  if(old) {\n    this.existing[old] = identifier;\n  }\n\n  return identifier;\n};\n// alias\nIdentifierIssuer.prototype.getName = IdentifierIssuer.prototype.getName;\n\n/**\n * Returns true if the given old identifer has already been assigned a new\n * identifier.\n *\n * @param old the old identifier to check.\n *\n * @return true if the old identifier has been assigned a new identifier, false\n *   if not.\n */\nIdentifierIssuer.prototype.hasId = function(old) {\n  return (old in this.existing);\n};\n// alias\nIdentifierIssuer.prototype.isNamed = IdentifierIssuer.prototype.hasId;\n\n/**\n * A Permutator iterates over all possible permutations of the given array\n * of elements.\n *\n * @param list the array of elements to iterate over.\n */\nvar Permutator = function(list) {\n  // original array\n  this.list = list.sort();\n  // indicates whether there are more permutations\n  this.done = false;\n  // directional info for permutation algorithm\n  this.left = {};\n  for(var i = 0; i < list.length; ++i) {\n    this.left[list[i]] = true;\n  }\n};\n\n/**\n * Returns true if there is another permutation.\n *\n * @return true if there is another permutation, false if not.\n */\nPermutator.prototype.hasNext = function() {\n  return !this.done;\n};\n\n/**\n * Gets the next permutation. Call hasNext() to ensure there is another one\n * first.\n *\n * @return the next permutation.\n */\nPermutator.prototype.next = function() {\n  // copy current permutation\n  var rval = this.list.slice();\n\n  /* Calculate the next permutation using the Steinhaus-Johnson-Trotter\n   permutation algorithm. */\n\n  // get largest mobile element k\n  // (mobile: element is greater than the one it is looking at)\n  var k = null;\n  var pos = 0;\n  var length = this.list.length;\n  for(var i = 0; i < length; ++i) {\n    var element = this.list[i];\n    var left = this.left[element];\n    if((k === null || element > k) &&\n      ((left && i > 0 && element > this.list[i - 1]) ||\n      (!left && i < (length - 1) && element > this.list[i + 1]))) {\n      k = element;\n      pos = i;\n    }\n  }\n\n  // no more permutations\n  if(k === null) {\n    this.done = true;\n  } else {\n    // swap k and the element it is looking at\n    var swap = this.left[k] ? pos - 1 : pos + 1;\n    this.list[pos] = this.list[swap];\n    this.list[swap] = k;\n\n    // reverse the direction of all elements larger than k\n    for(var i = 0; i < length; ++i) {\n      if(this.list[i] > k) {\n        this.left[this.list[i]] = !this.left[this.list[i]];\n      }\n    }\n  }\n\n  return rval;\n};\n\n//////////////////////// DEFINE NORMALIZATION HASH API ////////////////////////\n\n/**\n * Creates a new NormalizeHash for use by the given normalization algorithm.\n *\n * @param algorithm the RDF Dataset Normalization algorithm to use:\n *          'URDNA2015' or 'URGNA2012'.\n */\nvar NormalizeHash = function(algorithm) {\n  if(!(this instanceof NormalizeHash)) {\n    return new NormalizeHash(algorithm);\n  }\n  if(['URDNA2015', 'URGNA2012'].indexOf(algorithm) === -1) {\n    throw new Error(\n      'Invalid RDF Dataset Normalization algorithm: ' + algorithm);\n  }\n  NormalizeHash._init.call(this, algorithm);\n};\nNormalizeHash.hashNQuads = function(algorithm, nquads) {\n  var md = new NormalizeHash(algorithm);\n  for(var i = 0; i < nquads.length; ++i) {\n    md.update(nquads[i]);\n  }\n  return md.digest();\n};\n\n// switch definition of NormalizeHash based on environment\n(function(_nodejs) {\n\nif(_nodejs) {\n  // define NormalizeHash using native crypto lib\n  var crypto = require('crypto');\n  NormalizeHash._init = function(algorithm) {\n    if(algorithm === 'URDNA2015') {\n      algorithm = 'sha256';\n    } else {\n      // assume URGNA2012\n      algorithm = 'sha1';\n    }\n    this.md = crypto.createHash(algorithm);\n  };\n  NormalizeHash.prototype.update = function(msg) {\n    return this.md.update(msg, 'utf8');\n  };\n  NormalizeHash.prototype.digest = function() {\n    return this.md.digest('hex');\n  };\n  return;\n}\n\n// define NormalizeHash using JavaScript\nNormalizeHash._init = function(algorithm) {\n  if(algorithm === 'URDNA2015') {\n    algorithm = new sha256.Algorithm();\n  } else {\n    // assume URGNA2012\n    algorithm = new sha1.Algorithm();\n  }\n  this.md = new MessageDigest(algorithm);\n};\nNormalizeHash.prototype.update = function(msg) {\n  return this.md.update(msg);\n};\nNormalizeHash.prototype.digest = function() {\n  return this.md.digest().toHex();\n};\n\n/////////////////////////// DEFINE MESSAGE DIGEST API /////////////////////////\n\n/**\n * Creates a new MessageDigest.\n *\n * @param algorithm the algorithm to use.\n */\nvar MessageDigest = function(algorithm) {\n  if(!(this instanceof MessageDigest)) {\n    return new MessageDigest(algorithm);\n  }\n\n  this._algorithm = algorithm;\n\n  // create shared padding as needed\n  if(!MessageDigest._padding ||\n    MessageDigest._padding.length < this._algorithm.blockSize) {\n    MessageDigest._padding = String.fromCharCode(128);\n    var c = String.fromCharCode(0x00);\n    var n = 64;\n    while(n > 0) {\n      if(n & 1) {\n        MessageDigest._padding += c;\n      }\n      n >>>= 1;\n      if(n > 0) {\n        c += c;\n      }\n    }\n  }\n\n  // start digest automatically for first time\n  this.start();\n};\n\n/**\n * Starts the digest.\n *\n * @return this digest object.\n */\nMessageDigest.prototype.start = function() {\n  // up to 56-bit message length for convenience\n  this.messageLength = 0;\n\n  // full message length\n  this.fullMessageLength = [];\n  var int32s = this._algorithm.messageLengthSize / 4;\n  for(var i = 0; i < int32s; ++i) {\n    this.fullMessageLength.push(0);\n  }\n\n  // input buffer\n  this._input = new MessageDigest.ByteBuffer();\n\n  // get starting state\n  this.state = this._algorithm.start();\n\n  return this;\n};\n\n/**\n * Updates the digest with the given message input. The input must be\n * a string of characters.\n *\n * @param msg the message input to update with (ByteBuffer or string).\n *\n * @return this digest object.\n */\nMessageDigest.prototype.update = function(msg) {\n  // encode message as a UTF-8 encoded binary string\n  msg = new MessageDigest.ByteBuffer(unescape(encodeURIComponent(msg)));\n\n  // update message length\n  this.messageLength += msg.length();\n  var len = msg.length();\n  len = [(len / 0x100000000) >>> 0, len >>> 0];\n  for(var i = this.fullMessageLength.length - 1; i >= 0; --i) {\n    this.fullMessageLength[i] += len[1];\n    len[1] = len[0] + ((this.fullMessageLength[i] / 0x100000000) >>> 0);\n    this.fullMessageLength[i] = this.fullMessageLength[i] >>> 0;\n    len[0] = ((len[1] / 0x100000000) >>> 0);\n  }\n\n  // add bytes to input buffer\n  this._input.putBytes(msg.bytes());\n\n  // digest blocks\n  while(this._input.length() >= this._algorithm.blockSize) {\n    this.state = this._algorithm.digest(this.state, this._input);\n  }\n\n  // compact input buffer every 2K or if empty\n  if(this._input.read > 2048 || this._input.length() === 0) {\n    this._input.compact();\n  }\n\n  return this;\n};\n\n/**\n * Produces the digest.\n *\n * @return a byte buffer containing the digest value.\n */\nMessageDigest.prototype.digest = function() {\n  /* Note: Here we copy the remaining bytes in the input buffer and add the\n  appropriate padding. Then we do the final update on a copy of the state so\n  that if the user wants to get intermediate digests they can do so. */\n\n  /* Determine the number of bytes that must be added to the message to\n  ensure its length is appropriately congruent. In other words, the data to\n  be digested must be a multiple of `blockSize`. This data includes the\n  message, some padding, and the length of the message. Since the length of\n  the message will be encoded as `messageLengthSize` bytes, that means that\n  the last segment of the data must have `blockSize` - `messageLengthSize`\n  bytes of message and padding. Therefore, the length of the message plus the\n  padding must be congruent to X mod `blockSize` because\n  `blockSize` - `messageLengthSize` = X.\n\n  For example, SHA-1 is congruent to 448 mod 512 and SHA-512 is congruent to\n  896 mod 1024. SHA-1 uses a `blockSize` of 64 bytes (512 bits) and a\n  `messageLengthSize` of 8 bytes (64 bits). SHA-512 uses a `blockSize` of\n  128 bytes (1024 bits) and a `messageLengthSize` of 16 bytes (128 bits).\n\n  In order to fill up the message length it must be filled with padding that\n  begins with 1 bit followed by all 0 bits. Padding must *always* be present,\n  so if the message length is already congruent, then `blockSize` padding bits\n  must be added. */\n\n  // create final block\n  var finalBlock = new MessageDigest.ByteBuffer();\n  finalBlock.putBytes(this._input.bytes());\n\n  // compute remaining size to be digested (include message length size)\n  var remaining = (\n    this.fullMessageLength[this.fullMessageLength.length - 1] +\n    this._algorithm.messageLengthSize);\n\n  // add padding for overflow blockSize - overflow\n  // _padding starts with 1 byte with first bit is set (byte value 128), then\n  // there may be up to (blockSize - 1) other pad bytes\n  var overflow = remaining & (this._algorithm.blockSize - 1);\n  finalBlock.putBytes(MessageDigest._padding.substr(\n    0, this._algorithm.blockSize - overflow));\n\n  // serialize message length in bits in big-endian order; since length\n  // is stored in bytes we multiply by 8 (left shift by 3 and merge in\n  // remainder from )\n  var messageLength = new MessageDigest.ByteBuffer();\n  for(var i = 0; i < this.fullMessageLength.length; ++i) {\n    messageLength.putInt32((this.fullMessageLength[i] << 3) |\n      (this.fullMessageLength[i + 1] >>> 28));\n  }\n\n  // write the length of the message (algorithm-specific)\n  this._algorithm.writeMessageLength(finalBlock, messageLength);\n\n  // digest final block\n  var state = this._algorithm.digest(this.state.copy(), finalBlock);\n\n  // write state to buffer\n  var rval = new MessageDigest.ByteBuffer();\n  state.write(rval);\n  return rval;\n};\n\n/**\n * Creates a simple byte buffer for message digest operations.\n *\n * @param data the data to put in the buffer.\n */\nMessageDigest.ByteBuffer = function(data) {\n  if(typeof data === 'string') {\n    this.data = data;\n  } else {\n    this.data = '';\n  }\n  this.read = 0;\n};\n\n/**\n * Puts a 32-bit integer into this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n */\nMessageDigest.ByteBuffer.prototype.putInt32 = function(i) {\n  this.data += (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Gets a 32-bit integer from this buffer in big-endian order and\n * advances the read pointer by 4.\n *\n * @return the word.\n */\nMessageDigest.ByteBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Puts the given bytes into this buffer.\n *\n * @param bytes the bytes as a binary-encoded string.\n */\nMessageDigest.ByteBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n};\n\n/**\n * Gets the bytes in this buffer.\n *\n * @return a string full of UTF-8 encoded characters.\n */\nMessageDigest.ByteBuffer.prototype.bytes = function() {\n  return this.data.slice(this.read);\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nMessageDigest.ByteBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Compacts this buffer.\n */\nMessageDigest.ByteBuffer.prototype.compact = function() {\n  this.data = this.data.slice(this.read);\n  this.read = 0;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nMessageDigest.ByteBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n///////////////////////////// DEFINE SHA-1 ALGORITHM //////////////////////////\n\nvar sha1 = {\n  // used for word storage\n  _w: null\n};\n\nsha1.Algorithm = function() {\n  this.name = 'sha1',\n  this.blockSize = 64;\n  this.digestLength = 20;\n  this.messageLengthSize = 8;\n};\n\nsha1.Algorithm.prototype.start = function() {\n  if(!sha1._w) {\n    sha1._w = new Array(80);\n  }\n  return sha1._createState();\n};\n\nsha1.Algorithm.prototype.writeMessageLength = function(\n  finalBlock, messageLength) {\n  // message length is in bits and in big-endian order; simply append\n  finalBlock.putBytes(messageLength.bytes());\n};\n\nsha1.Algorithm.prototype.digest = function(s, input) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = input.length();\n  var _w = sha1._w;\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // the _w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = input.getInt32();\n      _w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      _w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (_w[i - 3] ^ _w[i - 8] ^ _w[i - 14] ^ _w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (_w[i - 6] ^ _w[i - 16] ^ _w[i - 28] ^ _w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      _w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      c = (b << 30) | (b >>> 2);\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n\n  return s;\n};\n\nsha1._createState = function() {\n  var state = {\n    h0: 0x67452301,\n    h1: 0xEFCDAB89,\n    h2: 0x98BADCFE,\n    h3: 0x10325476,\n    h4: 0xC3D2E1F0\n  };\n  state.copy = function() {\n    var rval = sha1._createState();\n    rval.h0 = state.h0;\n    rval.h1 = state.h1;\n    rval.h2 = state.h2;\n    rval.h3 = state.h3;\n    rval.h4 = state.h4;\n    return rval;\n  };\n  state.write = function(buffer) {\n    buffer.putInt32(state.h0);\n    buffer.putInt32(state.h1);\n    buffer.putInt32(state.h2);\n    buffer.putInt32(state.h3);\n    buffer.putInt32(state.h4);\n  };\n  return state;\n};\n\n//////////////////////////// DEFINE SHA-256 ALGORITHM /////////////////////////\n\nvar sha256 = {\n  // shared state\n  _k: null,\n  _w: null\n};\n\nsha256.Algorithm = function() {\n  this.name = 'sha256',\n  this.blockSize = 64;\n  this.digestLength = 32;\n  this.messageLengthSize = 8;\n};\n\nsha256.Algorithm.prototype.start = function() {\n  if(!sha256._k) {\n    sha256._init();\n  }\n  return sha256._createState();\n};\n\nsha256.Algorithm.prototype.writeMessageLength = function(\n  finalBlock, messageLength) {\n  // message length is in bits and in big-endian order; simply append\n  finalBlock.putBytes(messageLength.bytes());\n};\n\nsha256.Algorithm.prototype.digest = function(s, input) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = input.length();\n  var _k = sha256._k;\n  var _w = sha256._w;\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      _w[i] = input.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = _w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = _w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      _w[i] = (t1 + _w[i - 7] + t2 + _w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + _w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      e = (d + t1) | 0;\n      d = c;\n      c = b;\n      b = a;\n      a = (t1 + t2) | 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n\n  return s;\n};\n\nsha256._createState = function() {\n  var state = {\n    h0: 0x6A09E667,\n    h1: 0xBB67AE85,\n    h2: 0x3C6EF372,\n    h3: 0xA54FF53A,\n    h4: 0x510E527F,\n    h5: 0x9B05688C,\n    h6: 0x1F83D9AB,\n    h7: 0x5BE0CD19\n  };\n  state.copy = function() {\n    var rval = sha256._createState();\n    rval.h0 = state.h0;\n    rval.h1 = state.h1;\n    rval.h2 = state.h2;\n    rval.h3 = state.h3;\n    rval.h4 = state.h4;\n    rval.h5 = state.h5;\n    rval.h6 = state.h6;\n    rval.h7 = state.h7;\n    return rval;\n  };\n  state.write = function(buffer) {\n    buffer.putInt32(state.h0);\n    buffer.putInt32(state.h1);\n    buffer.putInt32(state.h2);\n    buffer.putInt32(state.h3);\n    buffer.putInt32(state.h4);\n    buffer.putInt32(state.h5);\n    buffer.putInt32(state.h6);\n    buffer.putInt32(state.h7);\n  };\n  return state;\n};\n\nsha256._init = function() {\n  // create K table for SHA-256\n  sha256._k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // used for word storage\n  sha256._w = new Array(64);\n};\n\n})(_nodejs); // end definition of NormalizeHash\n\nif(!XMLSerializer) {\n\nvar _defineXMLSerializer = function() {\n  XMLSerializer = require('xmldom').XMLSerializer;\n};\n\n} // end _defineXMLSerializer\n\n// define URL parser\n// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n// with local jsonld.js modifications\njsonld.url = {};\njsonld.url.parsers = {\n  simple: {\n    // RFC 3986 basic parts\n    keys: ['href','scheme','authority','path','query','fragment'],\n    regex: /^(?:([^:\\/?#]+):)?(?:\\/\\/([^\\/?#]*))?([^?#]*)(?:\\?([^#]*))?(?:#(.*))?/\n  },\n  full: {\n    keys: ['href','protocol','scheme','authority','auth','user','password','hostname','port','path','directory','file','query','fragment'],\n    regex: /^(([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?(?:(((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/\n  }\n};\njsonld.url.parse = function(str, parser) {\n  var parsed = {};\n  var o = jsonld.url.parsers[parser || 'full'];\n  var m = o.regex.exec(str);\n  var i = o.keys.length;\n  while(i--) {\n    parsed[o.keys[i]] = (m[i] === undefined) ? null : m[i];\n  }\n  parsed.normalizedPath = _removeDotSegments(parsed.path, !!parsed.authority);\n  return parsed;\n};\n\n/**\n * Removes dot segments from a URL path.\n *\n * @param path the path to remove dot segments from.\n * @param hasAuthority true if the URL has an authority, false if not.\n */\nfunction _removeDotSegments(path, hasAuthority) {\n  var rval = '';\n\n  if(path.indexOf('/') === 0) {\n    rval = '/';\n  }\n\n  // RFC 3986 5.2.4 (reworked)\n  var input = path.split('/');\n  var output = [];\n  while(input.length > 0) {\n    if(input[0] === '.' || (input[0] === '' && input.length > 1)) {\n      input.shift();\n      continue;\n    }\n    if(input[0] === '..') {\n      input.shift();\n      if(hasAuthority ||\n        (output.length > 0 && output[output.length - 1] !== '..')) {\n        output.pop();\n      } else {\n        // leading relative URL '..'\n        output.push('..');\n      }\n      continue;\n    }\n    output.push(input.shift());\n  }\n\n  return rval + output.join('/');\n}\n\nif(_nodejs) {\n  // use node document loader by default\n  jsonld.useDocumentLoader('node');\n} else if(typeof XMLHttpRequest !== 'undefined') {\n  // use xhr document loader by default\n  jsonld.useDocumentLoader('xhr');\n}\n\nif(_nodejs) {\n  jsonld.use = function(extension) {\n    switch(extension) {\n      // TODO: Deprecated as of 0.4.0. Remove at some point.\n      case 'request':\n        // use node JSON-LD request extension\n        jsonld.request = require('jsonld-request');\n        break;\n      default:\n        throw new JsonLdError(\n          'Unknown extension.',\n          'jsonld.UnknownExtension', {extension: extension});\n    }\n  };\n\n  // expose version\n  var _module = {exports: {}, filename: __dirname};\n  require('pkginfo')(_module, 'version');\n  jsonld.version = _module.exports.version;\n}\n\n// end of jsonld API factory\nreturn jsonld;\n};\n\n// external APIs:\n\n// used to generate a new jsonld API instance\nvar factory = function() {\n  return wrapper(function() {\n    return factory();\n  });\n};\n\nif(!_nodejs && (typeof define === 'function' && define.amd)) {\n  // export AMD API\n  define([], function() {\n    // now that module is defined, wrap main jsonld API instance\n    wrapper(factory);\n    return factory;\n  });\n} else {\n  // wrap the main jsonld API instance\n  wrapper(factory);\n\n  if(typeof require === 'function' &&\n    typeof module !== 'undefined' && module.exports) {\n    // export CommonJS/nodejs API\n    module.exports = factory;\n  }\n\n  if(_browser) {\n    // export simple browser API\n    if(typeof jsonld === 'undefined') {\n      jsonld = jsonldjs = factory;\n    } else {\n      jsonldjs = factory;\n    }\n  }\n}\n\nreturn factory;\n\n})();\n"],"sourceRoot":"/source/"}